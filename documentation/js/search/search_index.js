var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AccountComponent.html",[0,0.473,1,1.272]],["body/components/AccountComponent.html",[0,0.691,1,2.027,2,1.68,3,0.055,4,0.055,5,1.209,6,1.209,7,1.209,8,1.209,9,0.055,10,3.779,11,2.225,12,2.854,13,1.209,14,2.388,15,2.589,16,4.748,17,1.514,18,6.287,19,1.514,20,5.392,21,0.316,22,1.554,23,3.112,24,3.205,25,4.763,26,6.383,27,4.748,28,4.672,29,1.479,30,1.428,31,5.392,32,0.606,33,0.01,34,1.067,35,3.779,36,3.779,37,5.536,38,3.779,39,1.061,40,1.311,41,0.168,42,2.952,43,4.748,44,0.206,45,0.055,46,0.217,47,1.608,48,5.392,49,2.929,50,5.392,51,5.392,52,1.386,53,1.559,54,1.386,55,1.426,56,1.512,57,1.512,58,2.225,59,1.715,60,1.468,61,2.824,62,2.808,63,3.779,64,3.754,65,1.559,66,3.779,67,2.095,68,2.095,69,2.035,70,1.468,71,1.468,72,1.68,73,1.715,74,3.03,75,1.468,76,1.774,77,1.979,78,0.764,79,1.725,80,1.725,81,1.209,82,2.193,83,1.209,84,0.611,85,1.209,86,1.089,87,1.514,88,1.725,89,1.089,90,1.209,91,1.117,92,1.061,93,1.725,94,1.117,95,1.209,96,1.061,97,1.368,98,1.209,99,1.117,100,1.209,101,1.089,102,1.209,103,1.089,104,1.209,105,1.117,106,1.177,107,1.725,108,1.117,109,1.177,110,1.209,111,1.089,112,0.824,113,2.011,114,1.117,115,1.061,116,1.209,117,1.089,118,1.177,119,1.209,120,1.089,121,1.209,122,1.117,123,0.845,124,1.177,125,1.209,126,1.117,127,1.386,128,1.209,129,1.089,130,1.089,131,1.209,132,1.089,133,1.089,134,0.911,135,1.209,136,1.034,137,1.209,138,1.034,139,1.209,140,1.117,141,1.034,142,1.177,143,1.089,144,1.147,145,1.089,146,1.089,147,1.147,148,1.209,149,1.209,150,0.004,151,0.006,152,0.004]],["title/modules/AdminModule.html",[153,0.826,154,3.196]],["body/modules/AdminModule.html",[1,2.465,3,0.077,4,0.077,9,0.077,33,0.01,41,0.271,44,0.29,45,0.077,46,0.305,78,1.073,86,2.402,87,2.101,89,2.402,150,0.006,151,0.007,152,0.006,153,1.02,154,6.626,155,1.491,156,2.063,157,2.669,158,2.191,159,2.191,160,1.792,161,4.676,162,4.676,163,4.676,164,5.804,165,4.738,166,2.801,167,2.191,168,2.191,169,5.311,170,2.06,171,2.562,172,1.948,173,2.06,174,5.978,175,4.676,176,2.781,177,2.582,178,2.582,179,3.946,180,3.312,181,3.697,182,5.311,183,4.258,184,3.946,185,3.312,186,4.258,187,4.676,188,2.894]],["title/components/AdminPageComponent.html",[0,0.473,86,1.239]],["body/components/AdminPageComponent.html",[0,0.653,1,1.011,2,1.563,3,0.05,4,0.05,5,1.094,6,1.094,7,1.094,8,1.094,9,0.05,11,2.07,12,2.697,13,1.094,14,2.368,15,2.558,17,1.409,19,1.409,21,0.286,22,1.446,23,2.971,25,3.905,26,5.232,28,4.864,29,0.805,30,1.552,32,0.631,33,0.01,34,1.134,39,1.838,40,2.527,41,0.241,44,0.187,45,0.05,46,0.196,47,2.135,72,1.066,78,0.691,79,1.605,80,1.605,81,1.094,82,2.093,83,1.094,84,0.742,85,1.094,86,1.886,87,2.212,88,1.605,89,0.986,90,1.094,91,1.011,92,0.961,93,1.605,94,1.011,95,1.094,96,0.961,97,1.273,98,1.094,99,1.011,100,1.094,101,0.986,102,1.094,103,0.986,104,1.094,105,1.011,106,1.066,107,1.605,108,1.011,109,1.066,110,1.094,111,0.986,112,0.746,113,1.901,114,1.011,115,0.961,116,1.094,117,0.986,118,1.066,119,1.094,120,0.986,121,1.094,122,1.011,123,0.765,124,1.066,125,1.094,126,1.011,127,1.323,128,1.094,129,0.986,130,0.986,131,1.094,132,0.986,133,0.986,134,0.825,135,1.094,136,0.936,137,1.094,138,0.936,139,1.094,140,1.011,141,0.936,142,1.066,143,0.986,144,1.067,145,0.986,146,0.986,147,1.038,148,1.094,149,1.094,150,0.004,151,0.005,152,0.004,183,6.421,189,6.421,190,3.012,191,4.418,192,5.232,193,4.418,194,0.719,195,3.112,196,3.532,197,2.113,198,6.545,199,6.545,200,3.012,201,4.556,202,2.536,203,3.112,204,4.082,205,4.418,206,0.825,207,0.64,208,3.729,209,3.421,210,3.421,211,3.421,212,3.421,213,1.094,214,1.124,215,3.112,216,3.421,217,3.421,218,3.421,219,1.792,220,1.155,221,1.094,222,0.868,223,1.011,224,1.411,225,1.22,226,2.248,227,1.369,228,1.369,229,1.094,230,0.936,231,1.792,232,1.155,233,0.868,234,3.421,235,3.421,236,3.421,237,3.421,238,3.012,239,2.382,240,3.421,241,1.944,242,3.421,243,3.421,244,3.421,245,3.421,246,3.421,247,3.421]],["title/modules/AdminRoutingModule.html",[153,0.826,164,2.994]],["body/modules/AdminRoutingModule.html",[0,0.771,3,0.081,4,0.081,9,0.081,16,6.174,33,0.01,41,0.264,44,0.305,45,0.081,46,0.321,86,2.02,87,1.969,89,2.02,150,0.006,151,0.008,152,0.006,155,1.569,160,1.886,164,4.882,170,1.696,173,2.128,183,4.481,184,4.153,186,4.481,187,4.921,189,4.481,196,4.555,219,2.927,220,1.886,248,3.485,249,4.779,250,3.672,251,3.176,252,4.168,253,4.176,254,4.779,255,4.153,256,3.89,257,2.304,258,5.335,259,3.89,260,4.168,261,2.893,262,4.608,263,4.921,264,3.672,265,3.672,266,3.672,267,3.672]],["title/components/AdminSettingsComponent.html",[0,0.473,89,1.239]],["body/components/AdminSettingsComponent.html",[0,0.663,1,1.039,2,1.594,3,0.051,4,0.051,5,1.124,6,1.124,7,1.124,8,1.124,9,0.051,13,1.124,14,2.373,15,2.567,17,1.437,19,1.437,21,0.294,22,1.475,29,0.827,30,1.388,32,0.582,33,0.01,34,1.032,39,1.437,40,2.3,41,0.22,44,0.192,45,0.051,46,0.202,49,3.022,53,1.45,54,1.289,55,1.932,56,1.407,57,1.407,58,2.112,59,1.596,60,1.366,61,1.841,65,1.45,67,1.366,68,1.366,69,1.932,70,1.366,71,1.366,72,1.594,73,1.596,78,0.711,79,1.637,80,1.637,81,1.124,82,2.121,83,1.124,84,0.684,85,1.124,86,1.013,87,2.227,88,1.637,89,1.91,90,1.124,91,1.039,92,0.987,93,1.637,94,1.039,95,1.124,96,0.987,97,1.298,98,1.124,99,1.039,100,1.124,101,1.013,102,1.124,103,1.013,104,1.124,105,1.039,106,1.095,107,1.637,108,1.039,109,1.095,110,1.124,111,1.013,112,0.767,113,1.931,114,1.039,115,0.987,116,1.124,117,1.013,118,1.095,119,1.124,120,1.013,121,1.124,122,1.039,123,0.786,124,1.095,125,1.124,126,1.039,127,1.34,128,1.124,129,1.013,130,1.013,131,1.124,132,1.013,133,1.013,134,0.848,135,1.124,136,0.962,137,1.124,138,0.962,139,1.124,140,1.039,141,0.962,142,1.095,143,1.013,144,1.088,145,1.013,146,1.013,147,1.067,148,1.124,149,1.124,150,0.004,151,0.006,152,0.004,186,5.897,189,5.897,194,0.734,197,0.962,202,2.416,206,0.848,207,0.658,222,0.892,223,1.039,224,1.45,225,1.254,228,1.407,229,1.124,233,0.892,263,4.507,268,3.515,269,4.104,270,4.104,271,6.036,272,5.118,273,6.036,274,6.036,275,5.838,276,5.838,277,1.596,278,6.036,279,6.63,280,5.118,281,3.515,282,3.515,283,3.515,284,2.819,285,2.819,286,3.096,287,3.515,288,1.916,289,3.515,290,3.515,291,3.515,292,1.773,293,3.515,294,5.118,295,5.118,296,5.118,297,5.118,298,5.118,299,5.118,300,4.507,301,3.515,302,2.09,303,1.998,304,1.998,305,3.096,306,2.612]],["title/components/AmountSelectorComponent.html",[0,0.473,91,1.272]],["body/components/AmountSelectorComponent.html",[0,0.655,1,1.017,2,1.569,3,0.05,4,0.05,5,1.1,6,1.1,7,1.1,8,1.1,9,0.05,11,2.078,12,2.705,13,1.1,14,2.377,15,2.537,17,1.414,19,1.414,21,0.288,22,1.451,23,2.978,24,2.994,27,4.435,29,1.402,30,1.554,32,0.633,33,0.01,37,5.248,39,1.673,40,2.276,41,0.157,42,3.08,43,4.435,44,0.188,45,0.05,46,0.197,47,1.463,52,1.261,53,1.419,54,1.847,55,1.901,56,1.376,57,1.376,58,2.459,59,2.286,60,1.957,61,1.801,65,1.419,67,1.336,68,1.336,69,2.636,70,1.336,71,1.336,72,1.071,75,1.957,76,1.614,77,1.801,78,0.695,79,1.611,80,1.611,81,1.1,82,2.099,83,1.1,84,0.571,85,1.1,86,0.991,87,1.414,88,1.611,89,0.991,90,1.1,91,1.94,92,2.35,93,1.611,94,1.017,95,1.1,96,0.966,97,1.278,98,1.1,99,1.017,100,1.1,101,0.991,102,1.1,103,0.991,104,1.1,105,1.017,106,1.071,107,1.611,108,1.017,109,1.071,110,1.1,111,0.991,112,0.75,113,1.906,114,1.017,115,0.966,116,1.1,117,0.991,118,1.071,119,1.1,120,0.991,121,1.1,122,1.017,123,0.769,124,1.071,125,1.1,126,1.017,127,1.326,128,1.1,129,0.991,130,0.991,131,1.1,132,0.991,133,0.991,134,0.829,135,1.1,136,0.941,137,1.1,138,0.941,139,1.1,140,1.017,141,0.941,142,1.071,143,0.991,144,1.071,145,0.991,146,0.991,147,1.528,148,1.1,149,1.1,150,0.004,151,0.005,152,0.004,194,0.722,213,1.1,214,1.13,221,1.1,307,7.059,308,7.059,309,3.028,310,5.248,311,4.435,312,6.561,313,5.96,314,5.96,315,5.96,316,5.96,317,5.96,318,5.036,319,3.729,320,3.439,321,3.01,322,3.439,323,3.439,324,3.439,325,3.439,326,3.439,327,3.028,328,5.96,329,3.439,330,3.439,331,2.26,332,3.439,333,1.1,334,3.439,335,4.435,336,4.435,337,2.286,338,1.734,339,5.036,340,2.26,341,3.439,342,3.439,343,2.555,344,2.555,345,2.555,346,4.779,347,1.954,348,1.954,349,1.511,350,2.757,351,1.511,352,1.463]],["title/modules/AmountSelectorModule.html",[153,0.826,353,2.826]],["body/modules/AmountSelectorModule.html",[3,0.088,4,0.088,9,0.088,33,0.01,41,0.248,44,0.329,45,0.088,46,0.346,78,1.219,91,2.658,92,1.693,150,0.007,151,0.008,152,0.007,153,1.158,155,1.693,156,2.343,157,2.827,158,2.487,159,2.487,160,2.676,166,3.032,167,2.487,168,2.487,170,1.83,171,2.774,172,2.211,173,2.23,307,5.309,308,5.309,353,5.724,354,5.309,355,5.309,356,5.309,357,6.029,358,4.835]],["title/components/AppComponent.html",[0,0.473,94,1.272]],["body/components/AppComponent.html",[0,0.572,1,0.812,2,1.324,3,0.04,4,0.04,5,0.878,6,0.878,7,0.878,8,0.878,9,0.04,11,1.754,13,0.878,14,2.317,15,2.481,17,1.194,19,1.194,21,0.23,22,1.225,29,1,30,1.542,32,0.611,33,0.01,34,0.662,39,1.881,40,2.626,41,0.255,44,0.15,45,0.04,46,0.158,47,1.809,49,2.021,52,1.007,65,1.133,68,1.652,69,1.963,70,1.067,71,1.067,72,0.855,73,1.247,75,1.067,78,0.555,79,1.36,80,1.36,81,0.878,82,1.873,83,0.878,84,0.59,85,0.878,86,0.791,87,1.194,88,1.36,89,0.791,90,0.878,91,0.812,92,0.771,93,1.36,94,1.731,95,0.878,96,0.771,97,1.078,98,0.878,99,0.812,100,0.878,101,0.791,102,0.878,103,0.791,104,0.878,105,0.812,106,0.855,107,1.36,108,0.812,109,0.855,110,0.878,111,0.791,112,0.599,113,1.664,114,0.812,115,0.771,116,0.878,117,0.791,118,0.855,119,0.878,120,0.791,121,0.878,122,0.812,123,0.614,124,0.855,125,0.878,126,0.812,127,1.184,128,0.878,129,0.791,130,0.791,131,0.878,132,0.791,133,0.791,134,0.662,135,0.878,136,1.603,137,0.878,138,0.752,139,0.878,140,0.812,141,0.752,142,0.855,143,0.791,144,0.904,145,0.791,146,0.791,147,0.833,148,0.878,149,0.878,150,0.003,151,0.005,152,0.003,177,1.335,178,1.335,194,0.609,195,2.724,197,2.355,202,2.372,206,0.662,207,0.514,213,1.36,214,1.397,215,2.724,220,0.927,221,0.878,222,0.697,223,0.812,225,0.979,226,1.805,227,1.099,229,0.878,230,0.752,231,1.438,232,0.927,239,1.912,241,1.561,288,1.497,347,1.561,348,1.561,349,1.206,351,1.206,352,1.169,359,2.746,360,2.957,361,4.171,362,5.202,363,4.251,364,5.202,365,3.418,366,4.352,367,5.202,368,5.856,369,5.856,370,5.856,371,3.329,372,5.856,373,5.856,374,2.746,375,6.7,376,6.152,377,6.152,378,3.971,379,5.202,380,4.077,381,5.856,382,6.987,383,4.251,384,2.746,385,2.746,386,2.746,387,2.746,388,2.746,389,2.746,390,4.251,391,2.746,392,1.912,393,2.746,394,2.96,395,1.809,396,2.746,397,1.499,398,2.746,399,3.621,400,3.621,401,2.746,402,4.251,403,2.418,404,1.912,405,5.202,406,3.409,407,2.202,408,2.418,409,2.202,410,2.418,411,2.202,412,4.251,413,2.041,414,1.099,415,1.247,416,2.746,417,2.746,418,2.746,419,2.202,420,2.418,421,2.746,422,2.746,423,2.746,424,2.746,425,2.746,426,2.746,427,2.746,428,1.561,429,2.746,430,2.746,431,2.746,432,1.912,433,2.746,434,2.746,435,2.746,436,4.251,437,2.746,438,1.497,439,2.746,440,2.746,441,2.746,442,2.746,443,2.746,444,2.746,445,2.746,446,2.418,447,2.746,448,2.746,449,2.746,450,2.746,451,2.746,452,4.251,453,1.713,454,2.746,455,1.713,456,2.746,457,1.497,458,2.202,459,2.202,460,1.805,461,2.746]],["title/modules/AppModule.html",[153,0.826,462,3.196]],["body/modules/AppModule.html",[3,0.059,4,0.059,9,0.059,33,0.01,41,0.278,44,0.223,45,0.083,46,0.235,47,2.427,78,0.827,94,2.51,150,0.004,151,0.006,152,0.004,153,0.786,155,1.149,156,1.59,157,2.341,158,2.708,159,2.353,160,1.381,166,2.353,167,1.688,168,1.688,170,1.73,173,1.73,176,2.143,177,2.773,178,1.989,185,2.552,201,3.97,219,2.987,220,1.381,222,1.038,249,3.557,251,2.325,257,1.344,300,3.603,333,1.309,361,3.281,376,5.022,377,5.022,395,1.741,403,3.603,406,4.573,407,3.281,408,3.603,409,3.281,410,3.603,411,3.281,462,6.356,463,3.603,464,3.603,465,3.603,466,3.603,467,5.384,468,5.384,469,5.384,470,3.603,471,5.703,472,5.781,473,5.703,474,3.603,475,4.091,476,3.603,477,3.281,478,5.703,479,5.703,480,2.688,481,5.703,482,3.603,483,5.703,484,5.022,485,3.281,486,5.703,487,4.091,488,5.703,489,4.091,490,5.703,491,4.091,492,3.281,493,4.091,494,3.603,495,5.703,496,4.091,497,3.603,498,5.022,499,4.091,500,4.091,501,3.603,502,4.091,503,4.091,504,3.603,505,2.848,506,2.848,507,3.603,508,4.091,509,4.091,510,4.091,511,5.703,512,4.091,513,3.04,514,4.091,515,4.091,516,4.091,517,4.091,518,6.565,519,4.091,520,3.603,521,4.091,522,4.091,523,4.091,524,4.091,525,4.091,526,4.091,527,4.091,528,4.091,529,4.091]],["title/modules/AppRoutingModule.html",[153,0.826,467,2.994]],["body/modules/AppRoutingModule.html",[0,0.577,3,0.076,4,0.076,9,0.076,33,0.01,41,0.245,44,0.287,45,0.076,46,0.301,87,1.474,115,1.474,117,1.941,150,0.006,151,0.007,152,0.006,155,1.474,160,1.771,170,1.592,173,2.045,196,5.024,219,2.748,220,1.771,248,3.273,249,4.202,250,3.449,251,2.983,252,4.005,253,4.056,257,2.214,258,4.691,259,3.654,260,3.119,261,2.165,262,3.449,264,3.449,265,3.449,266,3.449,467,4.691,530,5.248,531,6.738,532,5.248,533,3.9,534,4.621,535,3.654,536,6.738,537,7.151,538,5.248,539,5.248,540,5.248,541,5.248,542,3.273,543,3.654,544,5.248,545,4.208,546,5.248,547,5.248,548,2.86,549,5.248,550,5.248,551,3.9,552,5.248,553,5.248,554,5.248,555,5.248]],["title/interfaces/AppState.html",[223,1.272,556,0.634]],["body/interfaces/AppState.html",[3,0.074,4,0.074,9,0.074,21,0.428,32,0.75,33,0.01,34,1.21,41,0.251,45,0.12,84,0.579,97,1.972,112,1.602,123,1.643,127,1.485,134,1.875,144,1.653,150,0.006,151,0.007,152,0.006,194,0.949,223,1.957,288,2.784,292,2.575,548,4.236,556,1.216,557,1.634,558,3.356,559,3.356,560,4.847,561,4.847,562,4.847,563,4.847,564,4.847,565,3.919,566,1.873,567,4.176,568,3.848,569,4.176,570,3.185,571,3.308,572,3.372,573,3.036,574,3.185,575,2.483,576,3.036,577,3.185]],["title/components/AuthFormComponent.html",[0,0.473,96,1.208]],["body/components/AuthFormComponent.html",[0,0.732,1,1.242,2,1.809,3,0.061,4,0.061,5,1.344,6,1.344,7,1.344,8,1.344,9,0.061,13,1.344,14,2.408,15,2.602,17,1.631,19,1.631,21,0.352,24,3.452,30,0.828,32,0.56,33,0.01,34,1.174,41,0.181,42,2.727,44,0.229,45,0.097,46,0.241,49,2.257,65,1.733,68,1.632,72,1.309,78,0.849,79,1.858,80,1.858,81,1.344,82,2.297,83,1.344,84,0.755,85,1.344,86,1.21,87,1.631,88,1.858,89,1.21,90,1.344,91,1.242,92,1.18,93,1.858,94,1.242,95,1.344,96,2.017,97,2.098,98,1.344,99,1.242,100,1.344,101,1.21,102,1.344,103,1.21,104,1.344,105,1.242,106,1.309,107,1.858,108,1.242,109,1.309,110,1.344,111,1.21,112,0.916,113,2.129,114,1.242,115,1.18,116,1.344,117,1.21,118,1.309,119,1.344,120,1.21,121,1.344,122,1.242,123,0.939,124,1.309,125,1.344,126,1.242,127,1.452,128,1.344,129,1.21,130,1.21,131,1.344,132,1.21,133,1.21,134,1.013,135,1.344,136,1.15,137,1.344,138,1.15,139,1.344,140,1.242,141,1.15,142,1.309,143,1.21,144,1.235,145,1.21,146,1.21,147,1.275,148,1.344,149,1.344,150,0.005,151,0.006,152,0.005,338,2.118,556,0.856,578,4.316,579,3.817,580,3.368,581,4.481,582,5.338,583,4.657,584,5.124,585,4.201,586,3.452,587,2.2,588,2.924,589,4.316,590,2.924,591,2.289,592,2.924,593,5.808,594,5.808,595,3.121,596,2.924,597,2.62,598,2.042]],["title/interfaces/AuthFormData.html",[556,0.634,584,2.826]],["body/interfaces/AuthFormData.html",[0,0.796,3,0.085,4,0.085,9,0.085,14,1.57,17,1.652,19,1.652,21,0.492,32,0.756,33,0.01,34,1.308,41,0.226,42,3.399,44,0.321,45,0.114,46,0.338,84,0.667,96,1.652,97,1.989,150,0.006,151,0.008,152,0.006,194,1.038,556,1.067,557,1.882,578,4.372,579,3.866,580,4.718,581,4.994,582,4.718,583,4.718,584,5.377,586,4.864,587,3.081,588,5.697,589,6.081,590,4.096,591,3.206,592,4.096]],["title/modules/AuthModule.html",[153,0.826,599,3.196]],["body/modules/AuthModule.html",[3,0.067,4,0.067,9,0.067,33,0.01,41,0.278,44,0.252,45,0.067,46,0.264,78,0.931,96,2.251,97,1.569,133,2.309,134,1.111,146,2.309,147,1.398,150,0.005,151,0.007,152,0.005,153,0.885,155,1.293,156,1.79,157,2.49,158,1.9,159,2.88,160,1.555,165,4.556,166,2.551,167,1.9,168,1.9,170,1.877,171,2.334,172,1.689,173,1.877,176,2.412,177,2.24,178,2.24,179,3.423,180,2.873,181,3.207,185,2.873,188,2.51,476,5.446,477,3.693,505,3.207,579,3.027,587,2.412,596,3.207,599,6.609,600,4.056,601,4.056,602,4.056,603,4.056,604,5.58,605,5.58,606,5.267,607,4.606,608,6.184,609,4.606,610,5.446,611,5.446,612,4.056,613,6.184,614,4.606,615,5.446,616,4.056,617,6.184,618,4.606,619,3.693,620,3.693,621,5.446,622,3.693,623,4.596,624,4.056,625,4.606,626,3.693]],["title/modules/AuthRoutingModule.html",[153,0.826,604,2.994]],["body/modules/AuthRoutingModule.html",[0,0.766,3,0.08,4,0.08,9,0.08,33,0.01,41,0.263,44,0.302,45,0.08,46,0.317,133,2.007,134,1.68,146,2.007,147,2.314,150,0.006,151,0.008,152,0.006,155,1.553,160,1.867,170,1.678,173,2.114,196,4.533,219,2.896,220,1.867,248,3.449,249,4.756,250,3.634,251,3.143,252,4.141,253,4.156,257,2.505,260,4.141,261,2.874,262,4.578,264,3.634,265,3.634,266,3.634,267,3.634,578,4.11,604,4.85,620,4.435,621,6.134,623,5.177,624,4.87,626,4.435,627,5.53,628,6.966,629,5.53,630,6.966,631,5.53]],["title/injectables/AuthService.html",[606,2.826,632,0.986]],["body/injectables/AuthService.html",[3,0.067,4,0.067,9,0.067,21,0.386,22,1.782,29,1.083,30,1.534,32,0.751,33,0.01,39,2.096,41,0.25,44,0.252,45,0.067,46,0.264,47,2.632,84,0.929,150,0.005,151,0.007,152,0.005,197,1.261,200,4.056,201,5.196,206,1.878,207,1.457,208,4.596,219,2.412,230,1.261,233,1.168,257,2.452,333,2.387,397,2.243,472,6.572,474,4.056,501,5.446,548,3.37,606,4.064,632,1.418,633,1.9,634,4.606,635,5.188,636,6.148,637,6.982,638,6.982,639,6.148,640,4.606,641,4.606,642,6.085,643,4.606,644,4.606,645,4.606,646,4.606,647,6.085,648,4.606,649,4.606,650,4.606,651,4.606,652,4.056,653,4.959,654,4.056,655,4.606,656,6.184,657,6.184,658,4.606,659,4.606,660,4.606,661,4.959,662,5.58,663,4.606,664,4.606,665,5.985,666,7.463,667,6.184,668,6.184,669,4.606,670,4.606,671,4.606,672,4.606]],["title/interfaces/AuthState.html",[556,0.634,561,2.682]],["body/interfaces/AuthState.html",[3,0.076,4,0.076,9,0.076,21,0.438,32,0.648,33,0.01,34,1.221,41,0.253,45,0.12,84,0.593,97,1.326,112,1.62,123,1.661,127,1.501,134,1.261,144,1.667,150,0.006,151,0.007,152,0.006,194,0.963,207,1.468,223,1.546,288,2.849,292,2.636,548,2.849,556,1.224,557,1.672,558,3.435,559,3.435,560,3.26,561,4.633,562,4.192,563,4.192,564,4.192,565,3.954,566,1.917,567,4.222,568,3.89,569,4.222,570,3.26,571,3.593,572,3.427,573,3.107,574,3.26,575,3.812,576,3.107,577,3.26]],["title/injectables/AuthStoreEffects.html",[632,0.986,673,3.196]],["body/injectables/AuthStoreEffects.html",[3,0.055,4,0.055,9,0.055,21,0.319,25,2.501,29,0.895,30,1.489,32,0.729,33,0.01,34,0.983,41,0.252,44,0.208,45,0.055,46,0.218,84,0.615,115,1.069,134,0.918,141,1.042,150,0.004,151,0.006,152,0.004,194,0.777,197,1.483,202,1.25,206,0.918,207,0.712,213,2.325,214,2.388,220,1.285,222,0.965,226,2.501,228,1.523,229,1.217,230,1.042,232,1.285,233,0.965,257,1.78,261,1.57,333,1.217,378,4.419,395,2.306,397,2.391,414,2.753,415,1.728,438,3.44,535,2.65,556,0.561,566,1.396,571,2.306,575,2.635,606,5.108,622,3.052,632,1.243,633,1.57,635,4.69,673,4.027,674,3.351,675,5.558,676,5.558,677,5.558,678,5.558,679,2.163,680,3.547,681,3.806,682,4.522,683,4.47,684,4.772,685,4.027,686,4.772,687,4.772,688,3.806,689,4.772,690,5.532,691,4.772,692,3.806,693,4.772,694,4.772,695,3.806,696,4.772,697,4.772,698,3.806,699,4.772,700,4.772,701,3.806,702,2.074,703,1.62,704,1.919,705,2.501,706,3.052,707,2.374,708,2.828,709,3.351,710,4.346,711,1.993,712,3.351,713,4.772,714,4.346,715,3.351,716,4.346,717,4.772,718,3.351,719,3.351,720,3.351,721,3.351,722,3.351,723,3.351]],["title/modules/AuthStoreModule.html",[153,0.826,605,2.994]],["body/modules/AuthStoreModule.html",[3,0.091,4,0.091,9,0.091,33,0.01,41,0.271,44,0.343,45,0.091,46,0.361,150,0.007,151,0.008,152,0.007,155,1.765,157,2.241,170,1.907,171,2.844,172,2.305,173,2.287,222,1.594,605,5.246,673,4.67,703,2.674,724,6.284,725,4.13,726,4.13,727,4.13,728,6.284,729,6.636,730,6.284,731,6.284,732,6.284]],["title/components/ButtonOutlinedComponent.html",[0,0.473,99,1.272]],["body/components/ButtonOutlinedComponent.html",[0,0.735,1,1.252,2,1.819,3,0.061,4,0.061,5,1.354,6,1.354,7,1.354,8,1.354,9,0.061,13,1.354,14,2.409,15,2.605,17,1.64,19,1.64,21,0.354,24,3.471,30,1.151,32,0.563,33,0.01,41,0.182,42,3.139,44,0.231,45,0.061,46,0.243,52,1.553,65,1.747,67,1.645,69,2.95,70,2.269,71,2.269,72,2.58,75,1.645,76,1.988,78,0.856,79,1.868,80,1.868,81,1.354,82,2.305,83,1.354,84,0.662,85,1.354,86,1.22,87,1.64,88,1.868,89,1.22,90,1.354,91,1.252,92,1.189,93,1.868,94,1.252,95,1.354,96,1.189,97,1.481,98,1.354,99,2.131,100,1.354,101,1.22,102,1.354,103,1.22,104,1.354,105,1.252,106,1.319,107,1.868,108,1.252,109,1.319,110,1.354,111,1.22,112,0.923,113,2.138,114,1.252,115,2.024,116,1.354,117,1.22,118,1.319,119,1.354,120,1.22,121,1.354,122,1.252,123,0.947,124,1.319,125,1.354,126,1.252,127,1.457,128,1.354,129,1.22,130,1.22,131,1.354,132,1.22,133,1.22,134,1.021,135,1.354,136,1.159,137,1.354,138,1.159,139,1.354,140,1.252,141,1.159,142,1.319,143,1.22,144,1.242,145,1.22,146,1.22,147,1.285,148,1.354,149,1.354,150,0.005,151,0.006,152,0.005,180,4.169,337,2.651,340,3.837,346,6.268,457,2.307,572,2.8,597,2.64,733,5.887,734,4.234,735,5.142,736,6.685,737,5.84,738,4.234,739,4.234,740,3.395,741,2.782,742,4.066,743,4.066,744,2.948]],["title/modules/ButtonOutlinedModule.html",[153,0.826,165,2.445]],["body/modules/ButtonOutlinedModule.html",[3,0.084,4,0.084,9,0.084,33,0.01,41,0.254,44,0.317,45,0.084,46,0.333,72,1.809,78,1.174,99,2.645,115,1.631,150,0.006,151,0.008,152,0.006,153,1.115,155,1.631,156,2.256,157,2.78,158,2.396,159,2.396,160,2.631,165,5.003,166,2.963,167,2.396,168,2.396,170,2.179,171,2.71,172,2.13,173,2.179,180,3.621,733,5.113,745,5.113,746,5.113,747,5.113,748,5.113,749,4.847,750,5.807,751,3.621,752,4.043,753,5.807]],["title/interfaces/Cart.html",[556,0.634,565,2.169]],["body/interfaces/Cart.html",[3,0.094,4,0.094,9,0.094,21,0.543,32,0.625,33,0.01,41,0.202,45,0.111,60,3.285,92,1.82,127,1.653,150,0.007,151,0.008,152,0.007,194,1.1,321,2.674,556,1.131,557,2.074,565,3.871,754,5.708,755,5.556,756,4.043]],["title/interfaces/CartItem.html",[556,0.634,755,2.826]],["body/interfaces/CartItem.html",[3,0.093,4,0.093,9,0.093,21,0.534,32,0.733,33,0.01,41,0.199,45,0.11,60,2.477,92,2.361,127,1.795,150,0.007,151,0.008,152,0.007,194,1.09,321,3.35,556,1.12,557,2.039,565,3.214,754,5.613,755,5.336,756,3.976]],["title/components/CheckoutComponent.html",[0,0.473,101,1.239]],["body/components/CheckoutComponent.html",[0,0.491,1,0.644,2,1.103,3,0.032,4,0.032,5,0.697,6,0.697,7,0.697,8,0.697,9,0.032,11,1.46,12,2.028,13,0.697,14,2.253,15,2.386,17,0.994,19,0.994,21,0.182,22,1.02,23,2.335,29,0.513,30,1.499,32,0.616,33,0.01,34,0.801,39,1.868,40,2.703,41,0.221,44,0.119,45,0.032,46,0.125,47,1.506,49,3.028,52,0.799,53,1.46,54,0.799,55,1.686,58,1.46,59,2.335,60,1.736,65,2.122,67,2.198,68,1.999,69,2.409,70,0.847,71,0.847,72,1.103,73,1.607,75,1.375,78,0.441,79,1.132,80,1.132,81,0.697,82,1.645,83,0.697,84,0.724,85,0.697,86,0.628,87,0.994,88,1.132,89,0.628,90,0.697,91,0.644,92,1.444,93,1.132,94,0.644,95,0.697,96,0.612,97,0.898,98,0.697,99,0.644,100,0.697,101,1.482,102,0.697,103,0.628,104,0.697,105,0.644,106,0.679,107,1.132,108,0.644,109,0.679,110,0.697,111,0.628,112,0.475,113,1.429,114,0.644,115,0.612,116,0.697,117,0.628,118,0.679,119,0.697,120,0.628,121,0.697,122,0.644,123,1.428,124,0.679,125,0.697,126,0.644,127,1.143,128,0.697,129,0.628,130,0.628,131,0.697,132,0.628,133,0.628,134,0.526,135,0.697,136,0.597,137,0.697,138,0.597,139,0.697,140,0.644,141,1.223,142,0.679,143,0.628,144,1.502,145,0.628,146,0.628,147,1.074,148,0.697,149,0.697,150,0.002,151,0.004,152,0.002,194,0.507,195,2.34,197,1.882,202,2.185,206,1.078,207,0.836,213,0.697,214,0.716,215,2.34,221,1.429,222,0.553,223,0.644,224,0.899,225,0.777,227,0.872,228,0.872,229,0.697,230,0.597,231,1.141,232,0.736,233,0.553,239,1.517,241,1.239,257,1.163,277,0.989,292,3.055,302,1.296,303,1.239,304,1.239,319,3.215,321,2.122,333,1.938,337,1.607,340,3.38,347,1.239,348,1.239,349,1.555,351,0.958,352,0.928,360,2.54,371,2.924,397,1.839,414,0.872,428,1.239,455,1.359,506,3.111,565,2.852,566,0.799,576,3.362,597,1.359,598,1.721,742,1.517,743,1.517,755,4.643,757,1.919,758,2.838,759,4.468,760,3.539,761,5.656,762,4.125,763,5.144,764,4.125,765,5.144,766,3.539,767,3.539,768,3.539,769,2.18,770,2.18,771,2.18,772,2.18,773,2.18,774,2.18,775,3.539,776,2.18,777,3.938,778,3.539,779,2.18,780,2.18,781,2.18,782,2.18,783,2.18,784,2.207,785,1.141,786,1.919,787,1.748,788,1.748,789,1.517,790,1.919,791,2.18,792,2.18,793,3.117,794,2.18,795,1.748,796,2.18,797,2.18,798,2.18,799,2.18,800,2.18,801,2.18,802,2.18,803,2.18,804,2.18,805,3.117,806,1.748,807,1.748,808,1.748,809,2.18,810,2.18,811,2.18,812,2.18,813,2.18,814,5.656,815,2.18,816,3.539,817,2.18,818,2.63,819,2.18,820,3.117,821,2.63,822,2.18,823,1.62,824,2.464,825,2.18,826,2.18,827,2.18,828,2.18,829,2.18,830,1.919,831,2.18,832,4.468,833,4.468,834,1.432,835,3.539,836,3.539,837,3.539,838,3.539,839,3.539,840,5.144,841,3.117,842,3.539,843,3.539,844,2.838,845,2.838,846,2.63,847,3.539,848,3.539,849,3.539,850,1.62,851,2.104,852,2.18,853,2.787,854,1.919,855,2.18,856,1.919,857,1.239,858,1.919,859,1.517,860,2.18,861,2.18,862,2.18,863,2.18,864,1.099,865,2.18,866,3.539,867,2.18,868,2.18,869,1.748,870,1.239,871,2.18,872,2.18,873,1.919,874,1.188,875,1.188,876,1.62,877,2.18,878,1.748,879,2.18,880,1.296]],["title/modules/CheckoutModule.html",[153,0.826,881,3.196]],["body/modules/CheckoutModule.html",[3,0.081,4,0.081,9,0.081,14,1.482,33,0.01,41,0.267,44,0.303,45,0.081,46,0.319,78,1.122,101,2.43,150,0.006,151,0.008,152,0.006,153,1.067,155,1.559,156,2.158,157,2.725,158,2.291,159,2.291,160,1.874,165,4.793,166,2.881,167,2.291,168,2.291,170,2.119,171,2.636,172,2.037,173,2.119,176,2.908,177,2.7,178,2.7,180,3.463,181,3.866,185,3.463,188,3.027,353,5.542,758,4.453,881,6.609,882,4.89,883,4.89,884,4.89,885,5.871,886,5.553,887,4.89,888,5.553,889,4.89]],["title/modules/CheckoutRoutingModule.html",[153,0.826,885,2.994]],["body/modules/CheckoutRoutingModule.html",[0,0.702,3,0.093,4,0.093,9,0.093,33,0.01,41,0.254,44,0.349,45,0.093,46,0.367,101,2.193,150,0.007,151,0.008,152,0.007,155,1.794,160,2.157,170,1.939,173,2.309,196,3.798,220,2.157,248,3.985,252,4.524,253,4.43,257,2.099,267,4.199,885,5.299,889,5.626,890,6.39]],["title/components/ChefComponent.html",[0,0.473,103,1.239]],["body/components/ChefComponent.html",[0,0.469,1,0.602,2,1.043,3,0.03,4,0.03,5,0.651,6,0.651,7,0.651,8,0.651,9,0.03,11,1.381,12,1.936,13,0.651,14,2.232,15,2.355,17,0.94,19,0.94,21,0.17,22,0.965,23,2.242,29,0.479,30,1.528,32,0.647,33,0.01,34,1.045,39,1.988,40,2.553,41,0.226,44,0.111,45,0.03,46,0.117,47,2.323,49,1.301,52,0.747,53,0.84,54,1.228,55,1.609,56,0.815,57,0.815,60,0.791,67,1.657,68,1.657,69,1.864,70,0.791,71,0.791,72,0.634,73,1.52,78,0.412,79,1.071,80,1.071,81,0.651,82,1.58,83,0.651,84,0.735,85,0.651,86,0.587,87,0.94,88,1.071,89,0.587,90,0.651,91,0.602,92,0.572,93,1.071,94,0.602,95,0.651,96,0.572,97,0.849,98,0.651,99,0.602,100,0.651,101,0.587,102,0.651,103,1.423,104,0.651,105,0.99,106,0.634,107,1.071,108,0.602,109,0.634,110,0.651,111,0.587,112,0.444,113,1.364,114,0.602,115,0.572,116,0.651,117,0.587,118,0.634,119,0.651,120,0.587,121,0.651,122,0.602,123,1.921,124,1.043,125,0.651,126,0.602,127,0.998,128,0.651,129,0.587,130,0.587,131,0.651,132,0.587,133,0.587,134,0.491,135,0.651,136,0.557,137,0.651,138,0.557,139,0.651,140,0.99,141,1.606,142,1.043,143,0.587,144,0.712,145,0.587,146,0.587,147,1.016,148,0.651,149,0.651,150,0.002,151,0.004,152,0.002,194,0.48,195,2.233,197,2.261,202,2.128,206,1.415,207,1.099,213,1.071,214,1.1,215,2.233,221,1.071,222,0.517,223,0.602,224,0.84,225,0.726,227,0.815,229,0.651,230,0.557,231,1.067,232,0.687,233,0.517,257,2.375,261,1.759,277,0.925,319,2.424,321,1.759,331,1.338,333,2.264,337,0.925,347,1.158,348,1.158,351,0.895,352,0.867,360,2.424,361,1.633,371,2.807,395,0.867,397,1.787,413,1.514,414,0.815,428,1.158,438,1.11,453,1.27,457,1.11,460,2.2,506,1.418,551,2.488,571,1.815,572,2.121,680,1.572,707,1.27,777,2.331,784,4.415,785,1.067,788,2.685,834,1.338,851,1.211,853,1.27,864,2.15,870,1.158,891,1.793,892,4.264,893,3.349,894,4.264,895,4.264,896,4.939,897,4.939,898,3.349,899,4.939,900,3.349,901,4.939,902,3.349,903,4.939,904,3.349,905,2.685,906,3.868,907,3.525,908,3.349,909,2.037,910,3.349,911,2.037,912,2.037,913,3.349,914,2.037,915,2.037,916,3.349,917,2.037,918,2.037,919,2.037,920,2.037,921,3.349,922,2.037,923,2.037,924,3.349,925,4.939,926,2.037,927,3.349,928,2.949,929,2.037,930,2.037,931,2.037,932,2.037,933,1.514,934,1.793,935,3.8,936,1.633,937,2.331,938,2.037,939,2.088,940,1.793,941,2.037,942,1.514,943,1.793,944,1.633,945,3.349,946,2.037,947,1.418,948,2.037,949,2.037,950,2.037,951,2.037,952,3.349,953,2.037,954,2.037,955,3.349,956,2.037,957,2.949,958,3.349,959,3.349,960,2.037,961,2.037,962,1.793,963,4.939,964,2.037,965,3.349,966,3.349,967,1.903,968,2.949,969,2.685,970,2.685,971,2.037,972,2.037,973,2.037,974,2.037,975,4.264,976,2.037,977,2.037,978,1.793,979,3.961,980,2.037,981,2.037,982,2.488,983,4.939,984,3.349,985,3.349,986,2.037,987,2.037,988,4.264,989,2.037,990,2.037,991,1.27,992,1.514,993,1.418,994,1.514,995,2.037,996,2.037,997,1.418,998,2.037,999,2.037,1000,1.418,1001,2.037,1002,1.338,1003,1.418,1004,1.27,1005,2.037,1006,2.037,1007,2.037,1008,2.037,1009,2.037,1010,2.037,1011,2.037,1012,2.037,1013,2.037,1014,2.037,1015,2.037,1016,2.037,1017,3.349,1018,2.037,1019,2.037,1020,2.037,1021,2.037,1022,2.037,1023,1.793,1024,2.949,1025,2.037,1026,2.037,1027,3.349,1028,3.349,1029,3.349,1030,3.349,1031,2.2,1032,1.633,1033,1.338,1034,1.418,1035,1.514,1036,1.633]],["title/modules/ChefModule.html",[153,0.826,1037,3.196]],["body/modules/ChefModule.html",[3,0.065,4,0.065,9,0.065,33,0.01,41,0.272,44,0.243,45,0.065,46,0.255,78,0.9,103,2.287,122,2.346,123,0.996,124,1.883,140,2.577,141,1.219,142,1.387,150,0.005,151,0.007,152,0.005,153,0.855,155,1.25,156,1.73,157,2.447,158,1.837,159,2.831,160,2.316,166,2.494,167,1.837,168,1.837,170,1.834,171,2.281,172,1.633,173,1.834,176,2.332,177,2.165,178,2.165,185,2.777,188,2.427,202,1.463,513,4.492,551,3.309,749,4.511,751,2.777,752,3.1,936,3.57,939,2.777,1037,6.715,1038,3.921,1039,3.921,1040,3.921,1041,3.921,1042,3.921,1043,5.525,1044,5.525,1045,5.215,1046,5.215,1047,5.215,1048,4.95,1049,5.525,1050,4.452,1051,6.044,1052,4.452,1053,3.921,1054,3.921,1055,3.921,1056,3.57,1057,3.921,1058,3.921,1059,4.452,1060,3.921]],["title/modules/ChefRoutingModule.html",[153,0.826,1043,2.994]],["body/modules/ChefRoutingModule.html",[0,0.645,3,0.085,4,0.085,9,0.085,33,0.01,41,0.262,44,0.321,45,0.085,46,0.337,103,2.083,150,0.006,151,0.008,152,0.006,155,1.648,160,1.981,170,1.781,173,2.194,196,4.297,219,3.074,220,1.981,248,3.661,249,4.509,250,3.858,251,3.337,252,4.297,253,4.27,254,4.509,255,4.362,256,4.087,257,2.375,258,5.033,259,4.087,260,3.489,261,2.422,262,3.858,264,3.858,265,3.858,266,3.858,267,3.858,1043,5.033,1057,5.169,1061,5.87]],["title/injectables/ChefService.html",[632,0.986,1049,2.994]],["body/injectables/ChefService.html",[3,0.085,4,0.085,9,0.085,21,0.491,22,2.083,29,1.381,30,1.425,32,0.697,33,0.01,34,1.22,39,1.648,41,0.255,44,0.321,45,0.085,46,0.337,84,0.82,123,1.878,150,0.006,151,0.008,152,0.006,206,1.744,207,1.353,230,1.607,233,1.489,333,1.878,397,2.257,480,3.858,632,1.658,633,2.422,711,4.103,785,3.074,905,5.797,1049,5.033,1062,5.87,1063,4.362,1064,5.692,1065,5.87,1066,5.033,1067,7.23,1068,5.87,1069,5.87]],["title/interfaces/ChefState.html",[556,0.634,577,2.682]],["body/interfaces/ChefState.html",[3,0.077,4,0.077,9,0.077,21,0.444,32,0.511,33,0.01,34,1.227,41,0.254,45,0.121,84,0.601,97,1.344,112,1.63,123,1.672,127,1.511,134,1.278,144,1.676,150,0.006,151,0.007,152,0.006,194,0.972,207,1.269,223,1.567,288,2.888,292,2.672,548,2.888,556,1.228,557,1.695,558,3.483,559,3.483,560,3.305,561,4.229,562,4.229,563,4.229,564,4.229,565,3.974,566,1.944,567,4.25,568,3.916,569,4.25,570,3.305,571,3.605,572,3.434,573,3.15,574,3.305,575,2.577,576,3.15,577,4.229]],["title/injectables/ChefStoreEffects.html",[632,0.986,1070,3.449]],["body/injectables/ChefStoreEffects.html",[3,0.074,4,0.074,9,0.074,21,0.428,29,1.204,30,1.306,32,0.639,33,0.01,41,0.269,44,0.28,45,0.074,46,0.294,84,0.58,150,0.006,151,0.007,152,0.006,194,0.95,197,1.814,202,2.798,206,1.234,207,0.958,213,1.637,214,1.681,221,1.637,222,1.298,223,1.513,224,2.111,225,1.825,227,2.048,228,2.048,229,1.637,230,1.401,232,1.727,233,1.298,395,2.821,397,2.119,414,2.048,415,2.323,571,2.821,632,1.52,633,2.111,679,2.909,680,3.876,682,4.007,683,3.613,702,2.789,703,2.178,704,2.58,711,3.472,905,5.896,940,4.506,1049,5.849,1060,4.506,1070,5.316,1071,5.117,1072,5.117,1073,6.629,1074,4.926,1075,4.926,1076,6.629,1077,6.629,1078,6.629,1079,5.117,1080,3.803,1081,5.117]],["title/modules/ChefStoreModule.html",[153,0.826,1044,2.994]],["body/modules/ChefStoreModule.html",[3,0.091,4,0.091,9,0.091,33,0.01,41,0.271,44,0.343,45,0.091,46,0.361,150,0.007,151,0.008,152,0.007,155,1.765,157,2.241,170,1.907,171,2.844,172,2.305,173,2.287,222,1.594,703,2.674,725,4.13,726,4.13,727,4.13,1044,5.246,1070,5.039,1082,6.284,1083,6.284,1084,6.636,1085,6.284,1086,6.284,1087,6.284]],["title/components/ConfirmationDialogComponent.html",[0,0.473,105,1.272]],["body/components/ConfirmationDialogComponent.html",[0,0.651,1,1.006,2,1.557,3,0.049,4,0.049,5,1.089,6,1.089,7,1.089,8,1.089,9,0.049,13,1.089,14,2.367,15,2.556,17,1.404,19,1.404,21,0.285,22,1.44,29,1.176,30,1.286,32,0.701,33,0.01,34,1.083,39,0.956,40,1.734,41,0.185,44,0.186,45,0.049,46,0.195,49,3.107,52,1.248,53,1.404,54,1.248,55,1.887,56,1.362,57,1.362,67,1.942,68,2.302,69,2.744,70,1.942,71,1.942,72,1.557,73,1.545,75,2.302,76,1.598,77,1.783,78,0.688,79,1.599,80,1.599,81,1.089,82,2.088,83,1.089,84,0.672,85,1.089,86,0.981,87,1.404,88,1.599,89,0.981,90,1.089,91,1.006,92,0.956,93,1.599,94,1.006,95,1.089,96,0.956,97,1.268,98,1.089,99,1.006,100,1.089,101,0.981,102,1.089,103,0.981,104,1.089,105,1.93,106,2.401,107,1.599,108,1.006,109,1.06,110,1.089,111,0.981,112,0.742,113,1.895,114,1.006,115,0.956,116,1.089,117,0.981,118,1.06,119,1.089,120,0.981,121,1.089,122,1.006,123,0.761,124,1.06,125,1.089,126,1.006,127,1.32,128,1.089,129,0.981,130,0.981,131,1.089,132,0.981,133,0.981,134,0.821,135,1.089,136,0.932,137,1.089,138,0.932,139,1.089,140,1.006,141,0.932,142,1.06,143,0.981,144,1.063,145,0.981,146,0.981,147,1.517,148,1.089,149,1.089,150,0.004,151,0.005,152,0.004,194,0.717,206,0.821,207,1.109,221,1.089,261,2.694,337,2.269,349,2.196,351,1.495,352,1.448,392,2.37,457,1.855,572,1.322,680,2.347,740,2.729,864,3.292,880,3.521,939,3.118,967,1.935,968,2.997,969,2.729,970,2.729,1032,2.729,1088,6.124,1089,6.124,1090,2.997,1091,5.217,1092,4.402,1093,5.83,1094,6.124,1095,6.529,1096,2.729,1097,3.695,1098,5.168,1099,3.404,1100,3.404,1101,4.402,1102,2.997,1103,3.404,1104,2.729,1105,2.997,1106,2.37,1107,3.404,1108,4.999,1109,4.402,1110,4.999,1111,4.999,1112,4.999,1113,2.123,1114,2.997,1115,3.404,1116,2.997,1117,3.404]],["title/modules/ConfirmationDialogModule.html",[153,0.826,1045,2.826]],["body/modules/ConfirmationDialogModule.html",[3,0.085,4,0.085,9,0.085,33,0.01,41,0.255,44,0.321,45,0.085,46,0.338,78,1.189,105,2.668,106,1.833,150,0.006,151,0.008,152,0.006,153,1.13,155,1.652,156,2.286,157,2.797,158,2.427,159,2.427,160,2.647,166,2.987,167,2.427,168,2.427,170,1.785,171,2.732,172,2.158,173,2.197,176,3.081,177,2.861,178,2.861,188,3.206,513,5.38,1045,5.695,1088,5.181,1089,5.181,1118,5.181,1119,5.181,1120,5.181,1121,5.883,1122,5.883]],["title/modules/CoreModule.html",[153,0.826,468,2.994]],["body/modules/CoreModule.html",[3,0.07,4,0.07,9,0.07,33,0.01,41,0.274,44,0.265,45,0.07,46,0.278,78,0.98,117,2.343,118,1.51,136,2.388,150,0.005,151,0.007,152,0.005,153,0.931,155,1.361,156,1.884,157,2.554,158,2,159,2.955,160,2.418,165,4.623,166,2.64,167,2,168,2,170,1.942,171,2.415,172,1.778,173,1.942,176,2.539,177,2.357,178,2.357,179,3.603,180,3.024,181,3.375,188,3.487,220,1.636,252,3.804,254,3.991,256,3.375,380,5.662,468,6.207,533,3.603,534,4.269,749,4.623,751,3.024,752,3.375,1123,4.269,1124,4.269,1125,4.848,1126,4.269,1127,4.269,1128,5.345,1129,4.848,1130,6.399,1131,3.375,1132,6.399,1133,4.848,1134,4.269,1135,4.848,1136,4.848,1137,4.848,1138,4.848]],["title/interfaces/DialogConfig.html",[556,0.634,935,2.994]],["body/interfaces/DialogConfig.html",[3,0.075,4,0.075,9,0.075,21,0.431,32,0.811,33,0.01,34,1.388,41,0.23,44,0.281,45,0.097,46,0.295,150,0.006,151,0.007,152,0.006,194,0.954,207,1.663,233,1.306,261,3.216,321,3.411,333,1.646,556,0.759,557,1.646,572,3.212,632,1.526,906,3.21,935,5.133,939,3.21,942,5.793,944,6.251,991,4.15,1002,5.122,1098,4.945,1106,3.583,1139,4.532,1140,6.864,1141,6.864,1142,6.864,1143,5.859,1144,4.532,1145,5.859,1146,4.532,1147,4.532]],["title/modules/DialogModule.html",[153,0.826,1046,2.826]],["body/modules/DialogModule.html",[3,0.089,4,0.089,9,0.089,33,0.01,41,0.259,44,0.335,45,0.089,46,0.352,78,1.241,150,0.007,151,0.008,152,0.007,153,1.179,155,1.724,156,2.386,157,2.19,158,2.533,159,3.297,160,2.072,166,3.066,167,2.533,168,2.533,170,1.863,171,2.805,172,2.252,173,2.255,906,5.39,1046,5.679,1106,4.275,1148,5.407,1149,5.407,1150,6.14,1151,7.431,1152,4.563]],["title/injectables/DialogService.html",[632,0.986,906,2.682]],["body/injectables/DialogService.html",[0,0.607,3,0.08,4,0.08,9,0.08,21,0.462,22,2.004,29,1.298,30,1.371,32,0.735,33,0.01,34,1.284,39,1.55,41,0.238,44,0.301,45,0.101,46,0.317,84,0.789,150,0.006,151,0.008,152,0.006,206,1.838,207,1.302,233,1.4,261,2.277,321,2.87,333,1.765,556,0.813,572,2.703,632,1.596,633,2.277,906,4.339,935,5.569,939,4.339,942,4.101,944,4.425,991,4.989,1002,3.627,1098,5.662,1106,3.842,1139,4.86,1140,4.86,1141,4.86,1142,4.86,1143,7.044,1144,4.86,1145,7.044,1146,6.126,1147,4.86,1153,6.957,1154,5.519,1155,5.519,1156,5.519,1157,4.86,1158,5.519,1159,3.842]],["title/components/ExpansionPanelComponent.html",[0,0.473,108,1.272]],["body/components/ExpansionPanelComponent.html",[0,0.72,1,1.206,2,1.773,3,0.059,4,0.059,5,1.305,6,1.305,7,1.305,8,1.305,9,0.059,13,1.305,14,2.402,15,2.593,17,1.598,19,1.598,21,0.341,30,0.804,33,0.01,41,0.205,44,0.223,45,0.059,46,0.234,52,1.496,53,1.683,54,1.496,55,1.539,56,1.632,57,1.632,58,1.683,59,1.851,60,1.585,69,2.474,70,2.211,71,2.211,72,1.271,75,1.585,76,1.915,77,2.136,78,0.824,79,1.82,80,1.82,81,1.305,82,2.268,83,1.305,84,0.645,85,1.305,86,1.175,87,1.598,88,1.82,89,1.175,90,1.305,91,1.206,92,1.145,93,1.82,94,1.206,95,1.305,96,1.145,97,1.443,98,1.305,99,1.206,100,1.305,101,1.175,102,1.305,103,1.175,104,1.305,105,1.206,106,1.271,107,1.82,108,2.097,109,2.519,110,1.305,111,1.175,112,0.889,113,2.096,114,1.206,115,1.145,116,1.305,117,1.175,118,1.271,119,1.305,120,1.175,121,1.305,122,1.206,123,0.912,124,1.271,125,1.305,126,1.206,127,1.433,128,1.305,129,1.175,130,1.175,131,1.305,132,1.175,133,1.175,134,0.984,135,1.305,136,1.116,137,1.305,138,1.116,139,1.305,140,1.206,141,1.116,142,1.271,143,1.175,144,1.21,145,1.175,146,1.175,147,1.727,148,1.305,149,1.305,150,0.004,151,0.006,152,0.004,194,0.816,213,1.305,214,1.34,221,1.305,319,2.318,337,1.851,340,2.68,343,3.031,344,3.031,345,3.031,347,2.318,348,2.318,351,1.792,352,1.736,458,3.271,598,1.983,742,2.84,743,2.84,1033,2.68,1034,2.84,1055,5.011,1160,5.011,1161,4.563,1162,4.079,1163,6.554,1164,5.691,1165,6.568,1166,3.101,1167,4.079,1168,5.691,1169,4.079,1170,4.079,1171,5.691,1172,5.691,1173,4.079,1174,3.592,1175,3.592,1176,3.592,1177,3.592,1178,3.592]],["title/modules/ExpansionPanelModule.html",[153,0.826,1047,2.826]],["body/modules/ExpansionPanelModule.html",[3,0.088,4,0.088,9,0.088,33,0.01,41,0.248,44,0.329,45,0.088,46,0.346,78,1.219,108,2.658,109,1.878,150,0.007,151,0.008,152,0.007,153,1.158,155,1.693,156,2.343,157,2.827,158,2.487,159,2.487,160,2.676,166,3.032,167,2.487,168,2.487,170,1.83,171,2.774,172,2.211,173,2.23,1047,5.724,1160,5.309,1161,4.835,1179,5.309,1180,5.309,1181,5.309,1182,6.029,1183,6.029]],["title/interfaces/FormControlData.html",[556,0.634,589,3.196]],["body/interfaces/FormControlData.html",[0,0.772,3,0.081,4,0.081,9,0.081,14,1.494,17,1.572,19,1.572,21,0.469,32,0.844,33,0.01,34,1.401,41,0.219,42,3.296,44,0.306,45,0.111,46,0.321,84,0.912,96,1.572,97,1.946,150,0.006,151,0.008,152,0.006,194,1.007,207,1.314,556,1.035,557,1.791,578,4.161,579,3.68,580,4.49,581,4.173,582,4.49,583,4.49,584,5.04,586,4.173,587,2.933,588,3.899,589,5.7,590,5.598,591,4.382,592,5.598]],["title/interfaces/Group.html",[112,0.938,556,0.634]],["body/interfaces/Group.html",[3,0.091,4,0.091,9,0.091,21,0.524,32,0.777,33,0.01,34,1.378,45,0.109,84,0.969,112,1.639,150,0.007,151,0.008,152,0.007,194,1.077,207,1.407,556,1.108,557,2.001,566,3.135,1184,5.508,1185,5.817,1186,5.491]],["title/components/GroupEditorComponent.html",[0,0.473,111,1.239]],["body/components/GroupEditorComponent.html",[0,0.504,1,0.67,2,1.138,3,0.076,4,0.033,5,0.725,6,0.725,7,0.725,8,0.725,9,0.033,11,1.507,12,2.083,13,0.725,14,2.265,15,2.403,17,1.026,19,1.026,21,0.384,22,1.052,23,2.389,29,0.533,30,1.513,32,0.626,33,0.01,39,1.822,40,2.25,41,0.233,44,0.124,45,0.033,46,0.13,47,3.112,49,2.623,52,0.831,53,0.935,54,1.683,55,1.732,56,0.907,57,0.907,58,2.171,59,2.083,60,1.419,61,1.913,62,1.684,64,1.578,65,1.507,67,2.242,68,2.397,69,1.986,70,1.419,71,1.419,72,1.138,75,0.881,78,0.458,79,1.168,80,1.168,81,0.725,82,1.683,83,0.725,84,0.79,85,0.725,86,0.653,87,1.026,88,1.168,89,0.653,90,0.725,91,0.67,92,0.636,93,1.168,94,0.67,95,0.725,96,0.636,97,0.927,98,0.725,99,0.67,100,0.725,101,0.653,102,0.725,103,0.653,104,0.725,105,0.67,106,0.706,107,1.168,108,0.67,109,0.706,110,0.725,111,1.516,112,1.814,113,1.468,114,0.67,115,0.636,116,0.725,117,0.653,118,0.706,119,0.725,120,0.653,121,0.725,122,0.67,123,0.507,124,0.706,125,0.725,126,0.67,127,1.064,128,0.725,129,0.653,130,0.653,131,0.725,132,0.653,133,0.653,134,0.547,135,0.725,136,0.62,137,0.725,138,0.62,139,0.725,140,0.67,141,0.62,142,0.706,143,0.653,144,0.777,145,0.653,146,0.653,147,1.108,148,0.725,149,0.725,150,0.002,151,0.004,152,0.002,194,0.524,195,2.403,197,2.128,202,2.217,203,2.403,204,3.282,206,1.269,207,0.985,213,0.725,214,0.745,215,2.403,220,0.765,221,1.168,222,0.575,223,0.67,224,0.935,225,0.808,227,0.907,228,0.907,229,0.725,230,0.62,231,1.187,232,0.765,233,0.575,241,1.288,257,1.729,277,1.029,319,2.608,321,1.893,333,1.973,335,3.217,336,3.217,337,1.029,338,2.314,347,2.076,348,2.076,349,0.996,351,0.996,352,0.964,397,1.322,414,0.907,415,1.029,438,1.235,480,1.489,566,1.93,571,1.953,581,3.43,586,4.252,587,1.187,595,1.684,596,1.578,597,1.414,598,1.102,785,1.187,851,2.171,853,2.278,857,1.288,870,1.288,878,1.817,947,1.578,1031,1.489,1033,1.489,1064,3.664,1066,3.195,1159,2.543,1185,3.664,1186,4.263,1187,4.072,1188,6.846,1189,6.235,1190,1.684,1191,2.543,1192,3.68,1193,2.929,1194,4.589,1195,5.263,1196,3.653,1197,4.22,1198,2.929,1199,3.653,1200,5.263,1201,2.715,1202,4.589,1203,3.217,1204,2.266,1205,3.653,1206,2.266,1207,2.266,1208,3.653,1209,2.266,1210,1.996,1211,3.653,1212,2.266,1213,2.266,1214,2.266,1215,1.817,1216,1.817,1217,2.266,1218,2.266,1219,2.266,1220,2.266,1221,3.653,1222,3.653,1223,2.543,1224,1.578,1225,1.489,1226,1.817,1227,1.817,1228,1.817,1229,3.653,1230,2.266,1231,2.266,1232,3.653,1233,2.266,1234,3.653,1235,3.653,1236,2.266,1237,2.266,1238,2.266,1239,1.817,1240,1.996,1241,1.684,1242,1.996,1243,2.266,1244,2.266,1245,2.929,1246,1.817,1247,2.266,1248,3.653,1249,1.996,1250,2.266,1251,2.266,1252,1.817,1253,2.266,1254,1.817,1255,1.578,1256,2.266,1257,2.266,1258,2.266,1259,2.266,1260,1.817,1261,2.266,1262,5.263,1263,3.653,1264,3.653,1265,1.996,1266,1.578,1267,1.996,1268,2.266]],["title/components/LoadResourcesComponent.html",[0,0.473,117,1.239]],["body/components/LoadResourcesComponent.html",[0,0.528,1,0.719,2,1.204,3,0.035,4,0.035,5,0.778,6,0.778,7,0.778,8,0.778,9,0.035,11,1.594,12,2.183,13,0.778,14,2.285,15,2.433,17,1.085,19,1.085,21,0.204,22,1.113,23,2.487,28,4.071,29,0.572,30,1.539,32,0.576,33,0.01,34,0.378,39,1.874,40,2.673,41,0.223,44,0.133,45,0.035,46,0.14,47,1.644,49,3.153,52,0.892,54,1.764,55,2.256,56,1.925,57,2.193,58,2.626,59,2.183,60,1.868,65,1.003,67,1.868,69,2.402,70,0.945,71,0.945,72,1.204,75,0.945,78,0.491,79,1.236,80,1.236,81,0.778,82,1.752,83,0.778,84,0.545,85,0.778,86,0.7,87,1.085,88,1.236,89,0.7,90,0.778,91,0.719,92,0.683,93,1.236,94,0.719,95,0.778,96,0.683,97,0.98,98,0.778,99,0.719,100,0.778,101,0.7,102,0.778,103,0.7,104,0.778,105,0.719,106,0.757,107,1.236,108,0.719,109,0.757,110,0.778,111,0.7,112,0.53,113,1.538,114,0.719,115,0.683,116,0.778,117,1.578,118,2.157,119,0.778,120,0.7,121,0.778,122,0.719,123,0.544,124,0.757,125,0.778,126,0.719,127,1.107,128,0.778,129,0.7,130,0.7,131,0.778,132,0.7,133,0.7,134,0.586,135,0.778,136,0.666,137,0.778,138,0.666,139,0.778,140,0.719,141,0.666,142,0.757,143,0.7,144,0.822,145,0.7,146,0.7,147,0.738,148,0.778,149,0.778,150,0.003,151,0.004,152,0.003,194,0.554,195,2.518,197,2.11,202,2.192,203,2.518,204,3.417,206,0.586,207,0.455,213,1.236,214,1.58,215,2.518,220,0.821,221,0.778,222,0.617,223,0.719,225,0.867,226,1.598,227,0.973,228,1.547,229,1.236,230,0.666,231,1.273,232,0.821,233,0.617,238,2.141,241,1.382,277,1.104,285,1.95,286,2.141,302,1.445,303,2.196,304,2.196,319,3.114,333,0.778,338,1.226,349,1.068,360,2.733,371,3.114,395,1.644,397,2.055,413,1.807,414,0.973,415,1.754,428,1.382,438,1.325,455,1.516,506,1.693,533,5.869,535,2.69,542,3.417,571,2.046,572,1.501,573,3.256,575,1.879,711,3.131,714,1.95,735,2.141,741,2.539,787,1.95,874,1.325,875,1.325,880,1.445,947,1.693,1166,2.106,1269,6.954,1270,2.141,1271,4.809,1272,3.864,1273,4.809,1274,5.604,1275,5.478,1276,5.478,1277,5.478,1278,5.478,1279,3.864,1280,2.431,1281,2.431,1282,2.431,1283,2.431,1284,2.431,1285,2.431,1286,2.431,1287,2.431,1288,2.431,1289,3.864,1290,2.431,1291,2.431,1292,2.431,1293,1.95,1294,1.95,1295,2.431,1296,2.431,1297,2.431,1298,3.864,1299,2.431,1300,3.864,1301,2.431,1302,2.431,1303,3.864,1304,2.431,1305,2.431,1306,2.431,1307,2.431,1308,2.431,1309,2.431,1310,2.431,1311,2.431,1312,2.431,1313,2.431,1314,2.431,1315,2.431,1316,2.141,1317,2.431,1318,2.141,1319,2.431,1320,3.864,1321,3.864,1322,3.864,1323,3.864,1324,3.864,1325,3.864,1326,3.864,1327,3.864,1328,3.864,1329,2.431,1330,2.141,1331,1.95,1332,2.431,1333,2.431]],["title/components/LoadingIndicatorComponent.html",[0,0.473,114,1.272]],["body/components/LoadingIndicatorComponent.html",[0,0.761,1,1.339,2,1.904,3,0.066,4,0.066,5,1.448,6,1.448,7,1.448,8,1.448,9,0.066,13,1.448,14,2.421,15,2.625,17,1.717,19,1.717,21,0.379,24,3.634,30,0.892,33,0.01,41,0.141,42,2.87,44,0.247,45,0.066,46,0.26,72,1.41,78,0.915,79,1.956,80,1.956,81,1.448,82,2.371,83,1.448,84,0.693,85,1.448,86,1.305,87,1.717,88,1.956,89,1.305,90,1.448,91,1.339,92,1.271,93,1.956,94,1.339,95,1.448,96,1.271,97,1.551,98,1.448,99,1.339,100,1.448,101,1.305,102,1.448,103,1.305,104,1.448,105,1.339,106,1.41,107,1.956,108,1.339,109,1.41,110,1.448,111,1.305,112,0.987,113,2.214,114,2.191,115,2.328,116,1.448,117,1.305,118,1.41,119,1.448,120,1.305,121,1.448,122,1.339,123,1.013,124,1.41,125,1.448,126,1.339,127,1.498,128,1.448,129,1.305,130,1.305,131,1.448,132,1.305,133,1.305,134,1.092,135,1.448,136,1.239,137,1.448,138,1.239,139,1.448,140,1.339,141,1.239,142,1.41,143,1.305,144,1.3,145,1.305,146,1.305,147,1.374,148,1.448,149,1.448,150,0.005,151,0.007,152,0.005,213,1.448,214,1.488,302,2.691,337,2.055,349,3.041,352,1.927,751,3.813,1334,5.383,1335,4.528,1336,6.114,1337,6.922,1338,6.114,1339,6.114,1340,4.528,1341,4.528]],["title/modules/LoadingIndicatorModule.html",[153,0.826,749,2.445]],["body/modules/LoadingIndicatorModule.html",[3,0.088,4,0.088,9,0.088,33,0.01,41,0.248,44,0.329,45,0.088,46,0.346,78,1.219,114,2.658,115,1.693,150,0.007,151,0.008,152,0.007,153,1.158,155,1.693,156,2.343,157,2.827,158,2.487,159,2.487,160,2.676,166,3.032,167,2.487,168,2.487,170,1.83,171,2.774,172,2.211,173,2.23,749,4.951,751,3.76,1334,5.309,1342,5.309,1343,5.309,1344,5.309,1345,6.029,1346,6.029]],["title/interfaces/MainNavigation.html",[556,0.634,1347,2.994]],["body/interfaces/MainNavigation.html",[0,0.754,3,0.078,4,0.078,9,0.078,14,1.44,15,1.595,17,1.515,19,1.515,21,0.452,32,0.661,33,0.01,34,1.363,41,0.214,42,3.993,44,0.295,45,0.115,46,0.31,84,0.929,136,1.477,150,0.006,151,0.007,152,0.006,194,0.983,197,1.477,203,4.29,365,4.507,394,3.757,395,2.296,399,4.775,400,3.757,404,3.757,432,3.757,556,1.111,557,1.726,572,2.665,591,2.941,967,3.067,1131,3.757,1347,5.249,1348,4.01,1349,5.896,1350,5.097,1351,4.278,1352,4.01,1353,3.757,1354,4.775,1355,4.01,1356,4.01,1357,4.01,1358,3.757,1359,4.01,1360,4.01,1361,4.01,1362,4.01,1363,4.01]],["title/components/ModifyComponent.html",[0,0.473,120,1.239]],["body/components/ModifyComponent.html",[0,0.486,1,0.634,2,1.088,3,0.031,4,0.031,5,1.117,6,0.686,7,0.686,8,0.686,9,0.031,11,1.441,12,2.006,13,0.686,14,2.248,15,2.379,17,0.981,19,0.981,21,0.18,22,1.006,23,2.313,29,0.504,30,1.471,32,0.708,33,0.01,34,0.544,39,1.92,40,2.589,41,0.229,44,0.117,45,0.031,46,0.123,49,2.568,52,0.787,53,1.441,54,1.621,55,1.668,56,0.858,57,0.858,64,1.493,65,2.481,67,1.357,68,1.357,69,2.495,70,0.833,71,0.833,72,0.668,75,0.833,78,0.433,79,1.117,80,1.117,81,0.686,82,1.63,83,0.686,84,0.859,85,0.686,86,0.618,87,0.981,88,1.117,89,0.618,90,0.686,91,0.634,92,0.602,93,1.117,94,0.634,95,0.686,96,0.602,97,0.886,98,0.686,99,0.634,100,0.686,101,0.618,102,0.686,103,0.618,104,0.686,105,1.033,106,0.668,107,1.117,108,0.634,109,0.668,110,0.686,111,0.618,112,1.652,113,1.414,114,0.634,115,0.602,116,0.686,117,0.618,118,0.668,119,0.686,120,1.468,121,0.686,122,0.634,123,0.48,124,1.377,125,0.686,126,0.634,127,1.509,128,0.686,129,0.618,130,0.618,131,0.686,132,0.618,133,0.618,134,0.517,135,0.686,136,0.587,137,0.686,138,0.587,139,0.686,140,0.634,141,0.587,142,0.668,143,0.618,144,1.53,145,0.618,146,0.618,147,1.06,148,0.686,149,0.686,150,0.002,151,0.004,152,0.002,194,0.501,197,0.956,202,2.172,206,1.649,207,1.28,220,0.724,221,1.117,222,0.544,223,0.634,224,0.885,225,0.765,227,0.858,228,0.858,229,0.686,230,0.587,232,0.724,233,0.544,257,1.674,261,1.823,277,0.973,306,3.284,333,1.794,337,0.973,338,1.081,347,1.219,348,1.219,349,0.942,351,0.942,352,0.913,378,3.604,397,1.969,414,0.858,457,1.169,460,3.348,566,2.206,567,2.896,568,2.668,569,2.896,680,2.824,741,1.409,777,1.493,785,1.123,821,3.284,851,3.334,853,2.756,857,1.985,864,3.197,870,1.219,874,1.169,875,1.169,880,2.076,906,3.954,935,4.414,939,2.756,942,3.284,943,3.891,967,2.512,969,1.72,970,1.72,978,3.891,991,3.177,1031,2.295,1033,2.904,1034,1.493,1035,1.594,1036,1.72,1166,1.169,1185,2.432,1187,3.968,1188,1.888,1191,3.077,1225,1.409,1254,3.544,1260,1.72,1266,1.493,1267,3.076,1353,2.432,1364,2.145,1365,3.076,1366,4.419,1367,3.493,1368,3.493,1369,2.801,1370,2.801,1371,2.801,1372,2.801,1373,2.801,1374,2.801,1375,3.493,1376,3.493,1377,3.493,1378,2.145,1379,3.493,1380,2.145,1381,3.493,1382,2.145,1383,3.493,1384,2.145,1385,3.076,1386,2.145,1387,3.076,1388,2.145,1389,3.076,1390,2.145,1391,3.493,1392,2.145,1393,2.145,1394,2.145,1395,2.145,1396,1.72,1397,1.888,1398,2.145,1399,2.145,1400,2.145,1401,2.145,1402,2.145,1403,4.419,1404,2.145,1405,2.145,1406,1.888,1407,2.145,1408,2.145,1409,4.419,1410,2.145,1411,3.493,1412,2.145,1413,2.145,1414,3.493,1415,2.145,1416,3.284,1417,2.145,1418,3.076,1419,1.493,1420,1.888,1421,4.419,1422,1.888,1423,1.72,1424,2.145,1425,2.145,1426,2.145,1427,3.493,1428,3.493,1429,2.801,1430,4.822,1431,6.341,1432,3.493,1433,3.493,1434,3.493,1435,2.145,1436,1.72,1437,1.493,1438,3.493,1439,3.076,1440,3.493,1441,3.076,1442,1.888,1443,2.145]],["title/interfaces/NavigationItem.html",[556,0.634,1351,2.682]],["body/interfaces/NavigationItem.html",[0,0.756,3,0.079,4,0.079,9,0.079,14,1.446,15,1.602,17,1.521,19,1.521,21,0.454,32,0.663,33,0.01,34,1.305,41,0.215,42,3.997,44,0.296,45,0.115,46,0.311,84,0.78,136,1.483,150,0.006,151,0.007,152,0.006,194,0.986,197,1.483,203,3.601,207,1.287,365,4.519,394,3.772,395,2.306,399,4.787,400,3.772,404,3.772,432,3.772,556,1.113,557,1.733,572,2.672,591,2.953,967,3.08,1131,3.772,1347,5.532,1348,4.026,1349,5.11,1350,5.11,1351,4.711,1352,5.905,1353,5.532,1354,5.532,1355,4.026,1356,4.026,1357,4.026,1358,3.772,1359,4.026,1360,4.026,1361,4.026,1362,4.026,1363,4.026]],["title/injectables/NavigationService.html",[380,2.994,632,0.986]],["body/injectables/NavigationService.html",[3,0.077,4,0.077,9,0.077,21,0.445,22,1.956,29,1.249,30,1.338,32,0.655,33,0.01,34,1.165,39,1.491,41,0.265,44,0.29,45,0.077,46,0.305,84,0.77,87,1.491,150,0.006,151,0.007,152,0.006,202,2.784,206,1.637,207,1.271,213,1.699,221,1.699,222,1.347,223,1.57,225,1.894,227,2.126,228,2.126,229,1.699,230,1.454,233,1.347,257,1.745,277,2.411,333,2.607,365,4.461,366,3.946,380,4.727,397,2.156,419,4.258,420,4.676,542,3.312,543,3.697,548,2.894,551,3.946,568,2.781,632,1.557,633,2.191,1294,4.258,1444,5.311,1445,6.789,1446,5.311,1447,6.789,1448,5.311,1449,6.789,1450,5.311,1451,5.311,1452,5.311,1453,4.676,1454,5.311,1455,5.311,1456,5.311,1457,7.887,1458,5.311,1459,5.311,1460,4.676,1461,4.676,1462,5.311,1463,5.311]],["title/interfaces/Order.html",[123,0.962,556,0.634]],["body/interfaces/Order.html",[3,0.084,4,0.084,9,0.084,21,0.486,32,0.822,33,0.01,34,1.345,45,0.113,60,3.165,84,0.658,92,1.631,123,1.606,141,2.291,150,0.006,151,0.008,152,0.006,194,1.03,321,3.36,556,1.058,557,1.857,566,2.988,784,5.08,818,6.053,823,5.794,824,5.671,834,3.816,933,5.337,979,6.252,1464,4.656,1465,4.315,1466,4.315]],["title/interfaces/OrderItem.html",[556,0.634,784,2.682]],["body/interfaces/OrderItem.html",[3,0.088,4,0.088,9,0.088,21,0.506,32,0.796,33,0.01,34,1.318,45,0.115,60,2.348,84,0.936,92,2.319,123,1.351,141,2.317,150,0.007,151,0.008,152,0.007,194,1.055,321,3.407,556,1.085,557,1.933,566,2.216,784,4.949,818,4.491,823,4.491,824,4.207,834,3.971,933,6.137,979,4.846,1464,4.846,1465,4.491,1466,4.491]],["title/components/OrderListItemComponent.html",[0,0.473,122,1.272]],["body/components/OrderListItemComponent.html",[0,0.675,1,1.07,2,1.629,3,0.053,4,0.053,5,1.672,6,1.158,7,1.158,8,1.158,9,0.053,13,1.158,14,2.379,15,2.555,17,1.468,19,1.468,21,0.303,24,3.108,30,1.209,32,0.504,33,0.01,41,0.192,42,2.882,44,0.198,45,0.053,46,0.208,52,1.328,53,1.494,54,1.328,67,2.032,68,1.407,69,3.133,72,1.128,75,1.407,76,1.7,77,1.896,78,0.732,79,1.672,80,1.672,81,1.158,82,2.15,83,1.158,84,0.696,85,1.158,86,1.043,87,1.468,88,1.672,89,1.043,90,1.158,91,1.07,92,1.468,93,1.672,94,1.07,95,1.158,96,1.017,97,1.326,98,1.158,99,1.07,100,1.158,101,1.043,102,1.158,103,1.043,104,1.158,105,1.07,106,1.128,107,1.672,108,1.07,109,1.128,110,1.158,111,1.043,112,0.789,113,1.963,114,1.07,115,1.017,116,1.158,117,1.043,118,1.128,119,1.158,120,1.043,121,1.158,122,1.987,123,1.754,124,2.679,125,1.158,126,1.07,127,1.359,128,1.158,129,1.043,130,1.043,131,1.158,132,1.043,133,1.043,134,0.873,135,1.158,136,0.991,137,1.158,138,0.991,139,1.158,140,1.07,141,1.431,142,1.128,143,1.043,144,1.112,145,1.043,146,1.043,147,1.587,148,1.158,149,1.158,150,0.004,151,0.006,152,0.004,194,0.75,213,1.158,214,1.189,221,1.158,319,2.058,337,1.643,343,2.69,344,2.69,345,2.69,347,2.058,348,2.058,351,2.297,352,2.225,457,1.973,458,2.903,460,3.436,571,2.612,572,2.032,741,2.379,777,4.273,784,4.633,785,1.896,834,2.379,854,4.604,870,2.058,874,2.85,875,2.85,880,2.152,962,4.604,1004,2.258,1035,2.69,1036,2.903,1058,5.919,1165,5.404,1166,2.85,1174,3.188,1175,3.188,1176,3.188,1177,3.188,1178,3.188,1430,4.193,1441,4.604,1442,3.188,1465,2.69,1466,2.69,1467,6.722,1468,3.62,1469,6.138,1470,5.229,1471,3.62,1472,3.62,1473,3.62,1474,5.229,1475,5.229,1476,5.229,1477,5.229,1478,5.229,1479,3.62,1480,3.62,1481,3.62]],["title/modules/OrderingModule.html",[153,0.826,1482,3.196]],["body/modules/OrderingModule.html",[3,0.069,4,0.069,9,0.069,33,0.01,41,0.272,44,0.261,45,0.069,46,0.274,78,0.964,126,2.394,127,1.436,130,2.333,144,1.014,145,2.333,150,0.005,151,0.007,152,0.005,153,0.916,155,1.34,156,1.854,157,2.534,158,1.968,159,2.931,160,1.61,166,2.612,167,1.968,168,1.968,170,1.921,171,2.389,172,1.75,173,1.921,176,2.498,177,2.319,178,2.319,185,2.975,188,2.6,358,3.825,505,3.321,548,2.6,749,4.602,751,2.975,752,3.321,1048,5.05,1056,3.825,1134,4.201,1152,3.545,1482,6.696,1483,4.201,1484,4.201,1485,4.201,1486,4.201,1487,5.637,1488,5.637,1489,5.637,1490,5.637,1491,4.77,1492,4.705,1493,4.201,1494,4.77,1495,4.201,1496,3.545,1497,4.77,1498,4.77,1499,3.825]],["title/modules/OrderingRoutingModule.html",[153,0.826,1487,2.994]],["body/modules/OrderingRoutingModule.html",[0,0.804,3,0.073,4,0.073,9,0.073,33,0.01,41,0.262,44,0.276,45,0.073,46,0.29,127,1.33,130,1.896,132,1.896,144,1.647,145,1.896,150,0.005,151,0.007,152,0.005,155,1.421,160,1.708,170,1.535,173,1.997,184,3.76,196,4.892,219,2.65,220,1.708,221,2.339,248,3.155,249,5.007,250,3.325,251,2.876,252,3.911,253,3.986,254,5.007,255,3.76,256,3.522,257,2.162,258,5.589,259,3.522,260,4.603,261,3.195,262,5.089,264,4.324,265,4.324,266,4.324,267,3.325,358,4.057,537,4.455,758,4.057,1487,4.581,1492,3.76,1495,4.455,1496,3.76,1499,4.057,1500,5.059,1501,5.059,1502,5.059,1503,5.059,1504,5.059]],["title/injectables/OrderingService.html",[632,0.986,1490,2.994]],["body/injectables/OrderingService.html",[3,0.084,4,0.084,9,0.084,21,0.487,22,2.072,29,1.369,30,1.417,32,0.693,33,0.01,34,1.215,39,1.634,41,0.255,44,0.318,45,0.084,46,0.334,84,0.815,123,1.873,150,0.006,151,0.008,152,0.006,206,1.734,207,1.346,230,1.593,233,1.476,333,1.861,397,2.248,480,3.824,632,1.649,633,2.401,711,4.087,764,5.766,785,3.048,1063,4.324,1064,5.675,1066,5.006,1166,3.171,1490,5.006,1505,5.819,1506,5.819,1507,7.191,1508,5.819,1509,5.819,1510,5.124]],["title/interfaces/OrderingState.html",[556,0.634,562,2.682]],["body/interfaces/OrderingState.html",[3,0.076,4,0.076,9,0.076,21,0.439,32,0.65,33,0.01,34,1.222,41,0.254,45,0.121,84,0.595,97,1.331,112,1.623,123,1.664,127,1.504,134,1.266,144,1.767,150,0.006,151,0.007,152,0.006,194,0.966,223,1.552,288,2.86,292,2.646,548,2.86,556,1.225,557,1.679,558,3.449,559,3.449,560,3.273,561,4.202,562,4.641,563,4.202,564,4.202,565,4.36,566,1.925,567,4.23,568,3.898,569,4.23,570,3.273,571,3.342,572,3.387,573,3.119,574,3.273,575,2.552,576,4.667,577,3.273]],["title/injectables/OrderingStoreEffects.html",[632,0.986,1511,3.449]],["body/injectables/OrderingStoreEffects.html",[3,0.066,4,0.066,9,0.066,21,0.383,29,1.076,30,1.371,32,0.671,33,0.01,41,0.263,44,0.25,45,0.066,46,0.262,84,0.519,150,0.005,151,0.007,152,0.005,194,0.883,197,1.685,202,2.73,206,1.103,207,0.856,213,1.969,214,2.022,221,1.463,222,1.16,223,1.352,224,1.887,225,1.631,227,1.831,228,1.831,229,1.463,230,1.252,232,1.544,233,1.16,397,2.238,414,2.785,415,2.076,632,1.412,633,1.887,679,2.6,680,3.756,682,4.233,683,4.056,702,2.493,703,1.947,704,2.307,705,4.572,706,5.579,711,3.224,764,5.579,789,3.185,864,4.034,1074,4.574,1075,4.574,1080,3.399,1152,3.399,1490,5.691,1511,4.936,1512,4.574,1513,6.127,1514,4.574,1515,6.156,1516,7.442,1517,6.156,1518,4.574,1519,6.156,1520,6.156,1521,5.421,1522,6.156,1523,6.156,1524,6.156,1525,6.156,1526,4.574]],["title/modules/OrderingStoreModule.html",[153,0.826,1488,2.994]],["body/modules/OrderingStoreModule.html",[3,0.09,4,0.09,9,0.09,33,0.01,41,0.271,44,0.34,45,0.09,46,0.357,150,0.007,151,0.008,152,0.007,155,1.748,157,2.22,170,1.889,171,2.828,172,2.284,173,2.274,222,1.579,703,2.649,725,4.091,726,4.091,727,4.091,1488,5.217,1511,4.992,1527,6.226,1528,6.009,1529,5.482,1530,6.598,1531,6.226,1532,6.226,1533,6.226]],["title/injectables/OrderingStoreUtilsEffects.html",[632,0.986,1528,3.449]],["body/injectables/OrderingStoreUtilsEffects.html",[3,0.072,4,0.072,9,0.072,21,0.417,29,1.172,30,1.431,32,0.7,33,0.01,41,0.261,44,0.272,45,0.072,46,0.286,84,0.565,150,0.005,151,0.007,152,0.005,194,0.934,197,1.364,206,1.202,207,0.933,213,2.084,214,2.141,222,1.264,230,1.364,232,1.682,233,1.264,395,3.277,397,2.302,632,1.494,633,2.056,679,2.833,680,3.848,682,4.354,683,4.196,685,5.722,702,2.716,703,2.121,704,2.513,707,3.108,789,3.47,907,4.746,1528,5.225,1534,7.7,1535,4.388,1536,7.26,1537,7.26,1538,4.388,1539,6.516,1540,6.516,1541,6.78,1542,4.388,1543,6.516,1544,6.516,1545,4.388,1546,4.388]],["title/interfaces/Product.html",[127,0.869,556,0.634]],["body/interfaces/Product.html",[3,0.076,4,0.076,9,0.076,21,0.441,32,0.847,33,0.01,34,1.418,41,0.165,45,0.076,84,0.892,112,1.149,127,1.365,150,0.006,151,0.007,152,0.006,194,0.968,207,1.668,321,3.432,556,0.777,557,1.685,566,2.884,1186,5.63,1252,6.306,1419,5.475,1547,5.269,1548,6.925,1549,5.844,1550,6.925,1551,6.925,1552,6.925,1553,6.306]],["title/components/ProductCardComponent.html",[0,0.473,126,1.272]],["body/components/ProductCardComponent.html",[0,0.67,1,1.057,2,1.615,3,0.052,4,0.052,5,1.144,6,1.144,7,1.144,8,1.144,9,0.052,13,1.144,14,2.377,15,2.551,17,1.455,19,1.455,21,0.299,22,1.493,24,3.081,30,1.201,32,0.345,33,0.01,34,0.807,39,1.004,40,1.798,41,0.162,42,2.434,44,0.195,45,0.052,46,0.205,52,1.312,53,1.476,54,1.901,55,2.678,56,2.074,57,2.074,58,2.757,59,3.034,60,2.014,61,3.875,65,2.515,67,2.368,68,2.597,69,2.523,70,1.39,71,1.39,72,1.114,73,2.353,74,2.868,75,1.39,76,1.679,77,1.873,78,0.723,79,1.658,80,1.658,81,1.144,82,2.138,83,1.144,84,0.588,85,1.144,86,1.03,87,1.455,88,1.658,89,1.03,90,1.144,91,1.057,92,1.004,93,1.658,94,1.057,95,1.144,96,1.004,97,1.315,98,1.144,99,1.057,100,1.144,101,1.03,102,1.144,103,1.03,104,1.144,105,1.057,106,1.114,107,1.658,108,1.057,109,1.114,110,1.144,111,1.03,112,0.78,113,1.95,114,1.057,115,1.877,116,1.144,117,1.03,118,1.114,119,1.144,120,1.03,121,1.144,122,1.057,123,0.8,124,1.114,125,1.144,126,1.976,127,1.656,128,1.144,129,1.03,130,1.03,131,1.144,132,1.03,133,1.03,134,0.863,135,1.144,136,0.979,137,1.144,138,0.979,139,1.144,140,1.057,141,0.979,142,1.114,143,1.03,144,1.102,145,1.03,146,1.03,147,1.085,148,1.144,149,1.144,150,0.004,151,0.006,152,0.004,194,0.743,213,1.144,214,1.175,269,4.156,270,4.156,284,2.868,302,2.126,303,2.033,304,2.033,306,2.658,319,4.205,338,1.803,343,2.658,344,2.658,345,2.658,349,1.571,351,1.571,352,1.522,395,1.522,457,1.949,742,4.244,851,2.126,857,3.799,859,2.49,874,1.949,875,1.949,878,4.156,967,2.033,1113,2.231,1166,2.825,1265,3.149,1330,3.149,1419,4.244,1436,2.868,1437,4.653,1439,3.149,1492,4.967,1493,5.886,1549,2.658,1554,4.967,1555,3.577,1556,5.183,1557,6.096,1558,5.183,1559,6.684,1560,3.577,1561,3.577,1562,3.577,1563,2.868,1564,2.658,1565,4.564,1566,3.577,1567,3.577,1568,2.658,1569,3.577,1570,2.868,1571,3.577,1572,3.149,1573,3.577,1574,5.183,1575,3.577]],["title/components/ProductEditorComponent.html",[0,0.473,129,1.239]],["body/components/ProductEditorComponent.html",[0,0.417,1,0.511,2,0.91,3,0.025,4,0.025,5,0.553,6,0.553,7,0.553,8,0.553,9,0.091,11,1.206,12,1.722,13,0.553,14,2.177,15,2.276,17,0.821,19,0.821,21,0.145,22,0.842,23,2.024,29,0.407,30,1.564,32,0.71,33,0.01,34,0.896,39,1.83,40,2.518,41,0.214,44,0.094,45,0.025,46,0.099,47,2.985,49,2.992,52,0.634,53,0.714,54,1.828,55,2.592,56,1.519,57,1.519,58,1.84,59,1.326,60,1.135,61,1.53,62,1.285,65,1.84,67,1.733,68,1.733,69,2.041,70,0.672,71,0.672,72,0.91,73,0.785,75,1.474,78,0.35,79,0.935,80,0.935,81,0.553,82,1.426,83,0.553,84,0.714,85,0.553,86,0.498,87,0.821,88,0.935,89,0.498,90,0.553,91,0.511,92,0.486,93,0.935,94,0.511,95,0.553,96,0.486,97,0.741,98,0.553,99,0.511,100,0.553,101,0.498,102,0.553,103,0.498,104,0.553,105,0.511,106,0.539,107,0.935,108,0.511,109,0.539,110,0.553,111,0.498,112,1.087,113,1.214,114,0.511,115,0.486,116,0.553,117,0.498,118,0.539,119,0.553,120,0.498,121,0.553,122,0.511,123,0.387,124,0.539,125,0.553,126,0.511,127,1.633,128,0.553,129,1.285,130,0.498,131,0.553,132,0.498,133,0.498,134,0.417,135,0.553,136,0.473,137,0.553,138,0.473,139,0.553,140,0.511,141,0.473,142,0.539,143,0.498,144,0.621,145,0.498,146,0.498,147,0.887,148,0.553,149,0.553,150,0.002,151,0.003,152,0.002,194,0.419,195,1.987,197,2.2,202,1.988,203,1.987,204,2.781,206,1.202,207,0.933,213,1.214,214,1.246,215,1.987,220,0.584,221,0.935,222,0.439,223,0.511,224,0.714,225,0.617,227,0.692,228,0.692,229,0.553,230,0.473,231,0.906,232,0.584,233,0.439,241,0.983,257,1.637,277,0.785,303,1.661,304,2.833,331,2.493,333,2.084,337,0.785,338,1.913,349,1.667,351,0.76,352,0.736,360,2.156,371,2.535,395,1.615,397,1.659,414,0.692,415,0.785,428,0.983,438,0.943,446,1.523,506,1.204,566,1.072,568,1.987,571,1.615,572,1.936,575,1.421,581,2.651,586,3.214,587,0.906,597,1.079,598,0.841,756,1.079,788,1.387,857,2.156,874,1.593,875,1.593,876,1.285,928,2.573,934,1.523,947,1.204,1031,1.92,1032,3.576,1097,1.822,1113,1.079,1159,1.204,1166,2.43,1185,3.47,1186,2.93,1187,4.184,1190,1.285,1191,2.034,1192,3.042,1193,2.343,1197,3.576,1198,2.343,1201,2.171,1203,1.523,1210,1.523,1215,1.387,1216,1.387,1223,1.204,1224,1.204,1225,1.137,1226,1.387,1227,1.387,1228,1.387,1239,1.387,1240,1.523,1241,1.285,1242,1.523,1245,2.343,1246,1.387,1249,1.523,1252,1.387,1254,1.387,1255,2.641,1260,2.343,1416,1.285,1420,1.523,1423,6.407,1430,1.387,1436,1.387,1460,1.523,1548,2.573,1549,2.171,1551,2.573,1552,2.573,1553,2.343,1564,1.285,1568,4.018,1570,1.387,1576,5.937,1577,3.794,1578,3.794,1579,3.794,1580,3.794,1581,3.794,1582,3.794,1583,2.922,1584,2.922,1585,4.459,1586,4.459,1587,3.927,1588,2.922,1589,2.922,1590,2.922,1591,1.73,1592,1.73,1593,2.922,1594,1.73,1595,4.459,1596,2.922,1597,1.73,1598,1.73,1599,1.73,1600,1.73,1601,1.73,1602,1.73,1603,2.922,1604,1.73,1605,1.523,1606,1.73,1607,1.73,1608,1.523,1609,1.73,1610,1.73,1611,1.523,1612,1.73,1613,1.73,1614,1.73,1615,1.73,1616,1.73,1617,1.73,1618,2.922,1619,1.73,1620,1.73,1621,2.573,1622,2.922,1623,3.794,1624,1.73,1625,1.73,1626,1.73,1627,2.922,1628,1.73,1629,2.922,1630,1.73,1631,1.73,1632,1.73,1633,1.73,1634,1.73,1635,1.73,1636,1.523,1637,1.73,1638,1.73,1639,1.73,1640,1.73,1641,1.73,1642,1.73,1643,2.922,1644,1.73,1645,1.73,1646,5.757,1647,1.73,1648,1.523,1649,1.73,1650,1.73,1651,1.73,1652,1.523,1653,1.523,1654,2.573,1655,1.387,1656,1.73,1657,1.73,1658,1.73,1659,2.922,1660,1.73,1661,2.922,1662,1.73,1663,1.73,1664,1.73,1665,1.73,1666,1.73,1667,1.73,1668,1.73,1669,1.73,1670,1.523,1671,1.73,1672,4.459,1673,2.922,1674,2.922,1675,2.922,1676,2.922,1677,2.922,1678,2.922,1679,2.922,1680,2.922,1681,2.922,1682,1.73,1683,1.73,1684,1.73,1685,1.73,1686,1.73,1687,1.387,1688,1.523]],["title/components/ProductListComponent.html",[0,0.473,130,1.239]],["body/components/ProductListComponent.html",[0,0.613,1,0.908,2,1.443,3,0.045,4,0.045,5,0.982,6,0.982,7,0.982,8,0.982,9,0.045,11,1.91,12,2.53,13,0.982,14,2.344,15,2.522,17,1.3,19,1.3,21,0.257,22,1.334,23,2.817,29,0.722,30,1.508,32,0.599,33,0.01,34,0.721,39,1.87,40,2.705,41,0.234,44,0.168,45,0.045,46,0.176,47,1.971,49,2.412,53,1.267,54,1.126,55,1.748,56,1.229,57,1.229,58,1.267,72,0.957,78,0.621,79,1.481,80,1.481,81,0.982,82,1.985,83,0.982,84,0.704,85,0.982,86,0.885,87,1.3,88,1.481,89,0.885,90,0.982,91,0.908,92,0.862,93,1.481,94,0.908,95,0.982,96,0.862,97,1.175,98,0.982,99,0.908,100,0.982,101,0.885,102,0.982,103,0.885,104,0.982,105,0.908,106,0.957,107,1.481,108,0.908,109,0.957,110,0.982,111,0.885,112,0.67,113,1.783,114,0.908,115,0.862,116,0.982,117,0.885,118,0.957,119,0.982,120,0.885,121,0.982,122,0.908,123,0.687,124,1.736,125,0.982,126,0.908,127,1.684,128,0.982,129,0.885,130,1.788,131,0.982,132,0.885,133,0.885,134,0.741,135,0.982,136,0.841,137,0.982,138,0.841,139,0.982,140,0.908,141,0.841,142,0.957,143,0.885,144,0.985,145,0.885,146,0.885,147,0.932,148,0.982,149,0.982,150,0.003,151,0.005,152,0.003,194,0.664,195,2.919,197,2.168,202,2.387,203,2.919,204,3.871,206,1.117,207,0.867,213,0.982,214,1.009,215,2.919,220,1.037,221,0.982,222,0.779,223,0.908,224,1.267,225,1.095,227,1.229,228,1.229,229,0.982,230,0.841,231,1.608,232,1.037,233,0.779,239,2.138,241,1.746,257,1.009,277,1.394,292,3.53,302,1.825,360,3.168,371,3.528,378,4.13,397,1.606,428,1.746,569,3.168,756,1.915,762,4.977,795,2.463,806,2.463,807,2.463,808,2.463,844,3.713,845,3.713,846,3.441,851,1.825,853,1.915,1031,3.043,1406,2.704,1416,3.441,1418,2.704,1492,5.796,1554,5.796,1648,4.078,1655,3.713,1689,3.071,1690,5.574,1691,4.631,1692,6.207,1693,4.631,1694,4.631,1695,3.071,1696,3.071,1697,3.071,1698,3.071,1699,4.631,1700,3.071,1701,3.071,1702,3.071,1703,3.071,1704,3.071,1705,3.071,1706,4.631,1707,3.071,1708,3.071,1709,4.631,1710,4.631]],["title/components/ProductPageComponent.html",[0,0.473,132,1.239]],["body/components/ProductPageComponent.html",[0,0.524,1,0.71,2,1.193,3,0.035,4,0.035,5,0.769,6,0.769,7,0.769,8,0.769,9,0.035,11,1.579,12,2.166,13,0.769,14,2.281,15,2.428,17,1.075,19,1.075,21,0.201,22,1.103,23,2.47,29,0.565,30,1.465,32,0.611,33,0.01,34,1.034,39,1.778,40,2.527,41,0.232,42,2.24,44,0.131,45,0.035,46,0.138,47,1.629,49,3.026,52,0.881,53,0.991,54,1.75,55,2.243,56,0.962,57,0.962,58,1.579,59,1.738,60,1.487,61,2.005,65,1.579,67,2.46,68,2.115,69,2.507,70,1.854,71,1.854,72,0.749,73,2.166,74,1.927,75,1.854,76,1.128,77,1.258,78,0.486,79,1.224,80,1.224,81,0.769,82,1.741,83,0.769,84,0.718,85,0.769,86,0.692,87,1.075,88,1.224,89,0.692,90,0.769,91,0.71,92,1.075,93,1.224,94,0.71,95,0.769,96,0.675,97,0.971,98,0.769,99,0.71,100,0.769,101,0.692,102,0.769,103,0.692,104,0.769,105,0.71,106,0.749,107,1.224,108,0.71,109,0.749,110,0.769,111,0.692,112,0.524,113,1.526,114,0.71,115,0.675,116,0.769,117,0.692,118,0.749,119,0.769,120,0.692,121,0.769,122,0.71,123,0.537,124,0.749,125,0.769,126,0.71,127,1.66,128,0.769,129,0.692,130,0.692,131,0.769,132,1.568,133,0.692,134,0.58,135,0.769,136,0.658,137,0.769,138,0.658,139,0.769,140,0.71,141,0.658,142,0.749,143,0.692,144,0.814,145,0.692,146,0.692,147,1.162,148,0.769,149,0.769,150,0.003,151,0.004,152,0.003,190,2.116,191,3.371,192,4.202,193,3.371,194,0.549,195,2.499,197,1.994,202,2.335,203,2.005,204,3.394,205,2.116,206,1.151,207,0.893,213,1.224,214,1.258,215,2.499,220,0.811,221,1.224,222,0.61,223,0.71,224,0.991,225,0.857,227,0.962,228,0.962,229,0.769,230,0.658,231,1.258,232,0.811,233,0.61,239,1.673,241,1.366,257,0.789,269,3.07,270,3.07,284,1.927,292,3.193,302,1.428,303,2.176,304,2.176,305,2.116,321,0.991,331,2.516,333,1.224,337,1.091,340,1.579,347,1.366,348,1.366,349,1.682,350,3.07,351,1.056,352,1.023,360,2.712,371,3.093,397,1.375,413,1.786,414,0.962,415,1.091,428,1.366,453,1.499,565,1.212,566,0.881,598,2.32,742,1.673,743,1.673,755,3.576,756,1.499,762,4.364,789,1.673,795,1.927,806,1.927,807,1.927,808,1.927,844,3.07,845,3.07,846,3.546,850,1.786,851,1.428,853,1.499,857,2.712,874,1.31,875,1.31,876,1.786,1033,1.579,1034,1.673,1241,1.786,1416,2.845,1496,5.625,1513,3.371,1549,1.786,1553,1.927,1554,5.625,1564,1.786,1570,1.927,1572,2.116,1621,2.116,1655,3.07,1688,2.116,1711,4.772,1712,3.828,1713,5.442,1714,2.403,1715,3.828,1716,3.828,1717,2.403,1718,3.828,1719,2.403,1720,2.403,1721,2.403,1722,2.403,1723,2.403,1724,2.403,1725,2.403,1726,2.403,1727,2.403,1728,2.403,1729,2.403,1730,2.403,1731,2.403,1732,2.116,1733,2.403,1734,3.828,1735,2.403,1736,2.403,1737,3.828,1738,3.828,1739,3.828,1740,3.828,1741,3.828,1742,3.828,1743,3.828,1744,3.828,1745,3.828,1746,3.828,1747,3.828,1748,3.828,1749,2.403,1750,2.403,1751,2.403]],["title/modules/ProductPageModule.html",[153,0.826,1489,2.994]],["body/modules/ProductPageModule.html",[3,0.085,4,0.085,9,0.085,14,1.566,33,0.01,41,0.262,44,0.321,45,0.085,46,0.337,78,1.187,127,1.187,132,2.463,150,0.006,151,0.008,152,0.006,153,1.128,155,1.648,156,2.281,157,2.794,158,2.422,159,2.422,160,1.981,166,2.983,167,2.422,168,2.422,170,2.194,171,2.729,172,2.153,173,2.194,176,3.074,177,2.854,178,2.854,184,4.362,188,3.199,353,5.618,887,5.169,1489,6.091,1496,4.362,1554,4.362,1752,5.169,1753,5.169,1754,5.87,1755,5.87]],["title/guards/RedirectIfFullyAuthenticated.html",[251,2.445,623,3.196]],["body/guards/RedirectIfFullyAuthenticated.html",[3,0.078,4,0.078,9,0.078,11,2.217,21,0.45,22,1.971,25,3.532,29,1.264,30,1.348,32,0.518,33,0.01,34,1.065,39,1.509,41,0.269,44,0.294,45,0.078,46,0.308,84,0.609,150,0.006,151,0.007,152,0.006,197,1.471,202,2.792,206,1.296,207,1.006,220,1.814,221,1.719,222,1.363,223,1.589,224,2.217,225,1.917,227,2.151,228,2.151,229,1.719,230,1.471,232,1.814,233,1.363,260,4.971,277,2.44,333,2.407,378,4.83,395,2.287,397,2.168,414,2.151,623,5.084,632,1.569,711,2.815,1166,2.929,1756,4.31,1757,5.375,1758,5.375,1759,5.375,1760,5.375,1761,5.375,1762,5.375,1763,5.375,1764,5.375,1765,4.733,1766,5.375,1767,5.375,1768,5.375]],["title/modules/ResourceManagementModule.html",[153,0.826,1769,3.196]],["body/modules/ResourceManagementModule.html",[3,0.061,4,0.061,9,0.061,33,0.01,41,0.276,44,0.228,45,0.061,46,0.24,78,0.845,111,2.243,112,0.912,120,2.243,127,0.845,129,2.243,143,2.243,144,0.889,150,0.005,151,0.006,152,0.005,153,0.803,155,1.174,156,1.624,157,2.368,158,1.725,159,2.74,160,1.411,165,4.426,166,2.388,167,1.725,168,1.725,170,1.757,171,2.185,172,1.533,173,1.757,174,5.098,175,3.681,176,2.19,177,2.033,178,2.033,179,3.107,180,2.607,181,2.911,185,2.607,188,2.279,505,2.911,542,2.607,543,4.03,545,3.353,587,2.19,596,2.911,610,5.098,611,5.098,612,3.681,615,5.098,616,3.681,749,4.426,751,2.607,752,2.911,936,3.353,1045,5.116,1046,5.116,1047,5.116,1048,4.856,1053,3.681,1054,3.681,1056,3.353,1161,3.353,1187,2.19,1189,3.353,1576,3.107,1769,6.712,1770,3.681,1771,3.681,1772,3.681,1773,3.681,1774,5.421,1775,5.421,1776,5.421,1777,4.181,1778,4.181,1779,5.848,1780,3.681,1781,3.681,1782,3.681,1783,4.181,1784,3.353]],["title/modules/ResourceManagementRoutingModule.html",[153,0.826,1774,2.994]],["body/modules/ResourceManagementRoutingModule.html",[0,0.854,3,0.074,4,0.074,9,0.074,33,0.01,41,0.266,44,0.278,45,0.074,46,0.292,111,1.905,112,1.442,120,1.905,127,1.337,129,1.905,143,1.905,144,1.561,150,0.006,151,0.007,152,0.006,155,1.431,160,1.721,170,1.547,173,2.007,196,4.784,219,2.67,220,1.721,248,3.179,249,5.019,250,3.35,251,2.898,252,3.931,253,4,254,5.019,255,3.788,256,3.549,257,2.172,258,5.603,259,3.549,260,4.617,261,3.204,262,5.104,264,3.35,265,3.35,266,3.35,267,3.35,543,3.549,545,4.088,1187,2.67,1189,4.088,1191,5.407,1365,4.489,1576,3.788,1774,4.604,1779,6.463,1780,4.489,1784,4.088]],["title/injectables/ResourceManagementService.html",[632,0.986,1776,2.994]],["body/injectables/ResourceManagementService.html",[3,0.047,4,0.047,9,0.092,21,0.27,22,1.383,29,0.758,30,1.598,32,0.782,33,0.01,34,1.405,39,2.249,41,0.231,44,0.176,45,0.047,46,0.185,84,0.938,112,1.721,127,1.596,144,1.446,150,0.003,151,0.005,152,0.003,197,0.882,206,1.956,207,1.518,230,0.882,232,1.088,233,0.818,257,2.089,321,2.367,333,2.562,397,2.502,415,2.179,438,1.756,480,2.118,482,2.838,566,2.844,632,1.101,633,1.33,711,4.631,756,2.01,785,1.688,1063,2.395,1064,4.426,1066,3.343,1187,4.294,1369,3.85,1370,3.85,1371,3.85,1372,3.85,1373,3.85,1374,3.85,1385,4.228,1387,4.228,1389,4.228,1419,2.244,1568,2.395,1776,3.343,1785,8.198,1786,3.223,1787,4.228,1788,4.801,1789,4.228,1790,4.801,1791,4.228,1792,5.738,1793,6.358,1794,3.223,1795,4.801,1796,3.223,1797,4.801,1798,3.223,1799,4.801,1800,5.098,1801,3.223,1802,4.801,1803,3.223,1804,4.801,1805,3.223,1806,4.801,1807,3.223,1808,4.801,1809,3.223,1810,3.223,1811,3.223,1812,3.223,1813,4.801,1814,3.223,1815,4.801,1816,5.738,1817,3.223,1818,3.223,1819,3.223,1820,3.223,1821,3.223,1822,3.223,1823,3.223,1824,4.801,1825,3.223,1826,3.223,1827,3.223,1828,3.223,1829,3.223,1830,3.223,1831,3.223]],["title/interfaces/ResourceManagementState.html",[556,0.634,563,2.682]],["body/interfaces/ResourceManagementState.html",[3,0.077,4,0.077,9,0.077,21,0.444,32,0.511,33,0.01,34,1.227,41,0.254,45,0.121,84,0.601,97,1.344,112,1.63,123,1.672,127,1.511,134,1.278,144,1.676,150,0.006,151,0.007,152,0.006,194,0.972,207,1.269,223,1.567,288,2.888,292,2.672,548,2.888,556,1.228,557,1.695,558,3.483,559,3.483,560,3.305,561,4.229,562,4.229,563,4.663,564,4.229,565,3.974,566,1.944,567,4.25,568,3.916,569,4.25,570,3.305,571,3.605,572,3.434,573,3.15,574,3.305,575,2.577,576,3.15,577,3.305]],["title/injectables/ResourceManagementStoreEffects.html",[632,0.986,1832,3.449]],["body/injectables/ResourceManagementStoreEffects.html",[3,0.031,4,0.031,9,0.031,21,0.178,29,0.499,30,1.441,32,0.705,33,0.01,41,0.219,44,0.116,45,0.031,46,0.122,84,0.24,112,0.755,127,1.449,144,0.736,150,0.002,151,0.004,152,0.002,194,0.496,197,0.947,202,2.162,206,0.512,207,0.397,213,2.293,214,2.355,221,0.678,222,0.538,223,0.627,224,0.875,225,0.756,227,0.849,228,0.849,229,0.678,230,0.58,232,0.716,233,0.538,257,1.137,333,2.105,397,2.358,414,3.236,415,0.963,542,1.323,560,2.735,575,4.155,632,0.794,633,0.875,679,1.205,680,2.809,682,4.461,683,4.435,690,2.41,702,1.156,703,0.902,704,1.069,705,1.394,711,4.262,716,6.211,756,1.323,1074,5.967,1075,5.967,1080,1.576,1187,3.897,1225,1.394,1369,3.517,1370,3.517,1371,3.517,1372,3.517,1373,3.517,1374,3.517,1419,2.41,1521,7.07,1550,3.048,1568,2.572,1587,3.862,1776,3.523,1781,1.867,1782,1.867,1787,3.862,1789,3.862,1791,3.862,1832,2.776,1833,5.53,1834,2.121,1835,4.385,1836,2.121,1837,3.461,1838,3.461,1839,8.029,1840,8.029,1841,5.982,1842,5.982,1843,8.029,1844,2.121,1845,3.461,1846,3.461,1847,3.461,1848,4.456,1849,2.121,1850,3.461,1851,3.461,1852,6.582,1853,2.121,1854,5.061,1855,3.461,1856,2.121,1857,3.461,1858,2.121,1859,3.461,1860,3.461,1861,2.121,1862,3.461,1863,3.461,1864,2.121,1865,3.461,1866,3.461,1867,5.061,1868,2.121,1869,3.461,1870,3.461,1871,5.061,1872,2.121,1873,3.461,1874,3.461,1875,2.121,1876,3.461,1877,3.461,1878,3.461,1879,3.461,1880,3.461,1881,3.461,1882,3.461,1883,2.121,1884,1.867]],["title/modules/ResourceManagementStoreModule.html",[153,0.826,1775,2.994]],["body/modules/ResourceManagementStoreModule.html",[3,0.088,4,0.088,9,0.088,33,0.01,41,0.272,44,0.332,45,0.088,46,0.349,150,0.007,151,0.008,152,0.007,155,1.708,157,2.17,170,1.846,171,2.789,172,2.232,173,2.242,222,1.543,542,4.964,543,4.236,703,2.589,725,3.998,726,3.998,727,3.998,1187,3.186,1775,5.145,1832,4.879,1833,4.521,1885,6.084,1886,6.507,1887,6.084,1888,5.926,1889,5.357,1890,6.084,1891,6.084,1892,6.084]],["title/injectables/ResourceManagementUtilsStoreEffects.html",[632,0.986,1888,3.449]],["body/injectables/ResourceManagementUtilsStoreEffects.html",[3,0.071,4,0.071,9,0.071,21,0.411,29,1.155,30,1.42,32,0.695,33,0.01,41,0.26,44,0.268,45,0.071,46,0.282,84,0.557,150,0.005,151,0.007,152,0.005,194,0.925,197,1.344,206,1.184,207,0.919,213,2.064,214,2.12,222,1.246,230,1.344,232,1.657,233,1.246,395,3.258,397,2.291,542,3.063,632,1.48,633,2.026,679,2.791,680,3.832,682,4.334,683,4.172,702,2.676,703,2.09,704,2.476,707,3.063,907,4.729,1187,4.009,1225,3.227,1535,4.324,1538,4.324,1541,6.741,1542,4.324,1545,4.324,1546,4.324,1833,5.689,1884,4.324,1888,5.175,1889,6.741,1893,7.208,1894,7.208,1895,6.453,1896,7.656,1897,6.453,1898,6.453,1899,6.453]],["title/guards/ResourcesLoadedGuard.html",[251,2.445,254,2.682]],["body/guards/ResourcesLoadedGuard.html",[3,0.076,4,0.076,9,0.076,11,2.157,21,0.438,22,1.936,29,1.229,30,1.324,32,0.648,33,0.01,39,1.468,41,0.264,44,0.286,45,0.076,46,0.3,84,0.762,150,0.006,151,0.007,152,0.006,197,1.431,202,2.774,206,1.621,207,1.258,220,1.764,221,1.672,222,1.326,223,1.546,225,2.796,227,2.092,228,2.092,229,1.672,230,1.431,232,1.764,233,1.326,254,4.192,260,4.661,277,2.373,333,2.376,378,4.799,395,2.225,397,2.14,414,2.092,535,3.639,574,3.26,632,1.541,1166,2.849,1274,4.603,1294,4.192,1756,4.192,1900,7.428,1901,5.227,1902,5.227,1903,6.721,1904,7.841,1905,7.841,1906,5.227,1907,5.227,1908,5.227,1909,5.227,1910,5.227,1911,5.227,1912,5.227,1913,5.227]],["title/components/RestaurantAuthComponent.html",[0,0.473,133,1.239]],["body/components/RestaurantAuthComponent.html",[0,0.533,1,0.729,2,1.217,3,0.036,4,0.036,5,0.788,6,0.788,7,0.788,8,0.788,9,0.036,11,1.612,12,2.203,13,0.788,14,2.288,15,2.438,17,1.097,19,1.097,21,0.206,22,1.126,23,2.506,25,2.567,29,0.58,30,1.476,32,0.647,33,0.01,34,0.859,39,1.798,40,2.327,41,0.234,44,0.135,45,0.036,46,0.141,47,2.065,49,3.204,52,0.904,54,1.433,55,1.474,56,1.564,57,1.942,58,2.002,59,1.119,60,0.958,61,2.046,64,1.716,65,1.017,67,1.885,68,2.607,69,2.416,70,0.958,71,0.958,72,0.768,73,2.506,75,2.145,76,1.834,78,0.498,79,1.25,80,1.25,81,0.788,82,1.766,83,0.788,84,0.761,85,0.788,86,0.71,87,1.097,88,1.25,89,0.71,90,0.788,91,0.729,92,0.692,93,1.25,94,0.729,95,0.788,96,0.692,97,1.527,98,0.788,99,0.729,100,0.788,101,0.71,102,0.788,103,0.71,104,0.788,105,0.729,106,0.768,107,1.25,108,0.729,109,0.768,110,0.788,111,0.71,112,0.538,113,1.552,114,0.729,115,1.55,116,0.788,117,0.71,118,0.768,119,0.788,120,0.71,121,0.788,122,0.729,123,0.551,124,0.768,125,0.788,126,0.729,127,1.116,128,0.788,129,0.71,130,0.71,131,0.788,132,0.71,133,1.591,134,1.678,135,0.788,136,0.675,137,0.788,138,0.675,139,0.788,140,0.729,141,0.675,142,0.768,143,0.71,144,0.831,145,0.71,146,0.71,147,0.748,148,0.788,149,0.788,150,0.003,151,0.004,152,0.003,194,0.56,197,1.905,201,3.844,202,2.103,206,0.942,207,0.731,208,3.606,219,1.291,221,0.788,222,0.625,223,0.729,224,1.017,225,0.879,230,0.675,233,0.625,257,1.594,277,1.119,333,1.552,338,3.035,349,1.716,397,1.734,575,1.899,579,1.62,581,3.282,584,3.955,586,3.577,587,1.291,588,1.716,590,2.72,591,2.129,592,2.72,598,1.199,619,1.977,620,6.11,635,4.103,636,4.861,642,4.985,652,2.171,653,1.977,662,3.844,665,5.38,708,1.832,744,2.72,850,1.832,857,2.22,864,1.243,869,1.977,874,1.343,875,1.343,982,1.832,1004,2.436,1201,2.903,1223,3.378,1224,1.716,1255,2.72,1266,1.716,1331,1.977,1437,1.716,1563,1.977,1687,3.133,1914,7.62,1915,2.171,1916,4.273,1917,3.44,1918,4.273,1919,4.852,1920,3.907,1921,5.521,1922,4.861,1923,3.907,1924,2.465,1925,3.907,1926,2.465,1927,2.465,1928,2.465,1929,2.465,1930,2.465,1931,2.171,1932,2.171,1933,2.465,1934,2.465,1935,2.171,1936,2.171,1937,2.171,1938,2.465,1939,2.465,1940,2.171,1941,2.171,1942,2.171,1943,3.907,1944,3.907,1945,2.465,1946,2.465,1947,2.171,1948,2.465,1949,2.171,1950,2.465,1951,2.465,1952,2.465,1953,2.465,1954,2.171,1955,2.465,1956,2.465,1957,2.171,1958,2.465,1959,5.521,1960,3.907,1961,3.907,1962,5.521,1963,5.521,1964,3.907,1965,3.907,1966,2.171,1967,2.171,1968,3.44,1969,2.171]],["title/interfaces/RestaurantAuthResponse.html",[556,0.634,710,3.449]],["body/interfaces/RestaurantAuthResponse.html",[3,0.065,4,0.065,9,0.065,21,0.375,25,2.941,32,0.711,33,0.01,34,1.2,41,0.262,44,0.244,45,0.065,46,0.257,84,0.507,115,1.257,134,1.079,141,2.019,150,0.005,151,0.007,152,0.005,194,0.869,197,1.66,202,1.47,220,1.51,222,1.135,226,2.941,228,1.791,229,1.431,230,1.225,232,1.51,233,1.135,257,1.993,261,3.043,333,1.431,378,3.911,395,1.904,397,2.29,414,2.754,415,2.031,438,3.75,535,3.115,556,0.66,557,1.431,566,1.641,571,1.904,575,2.949,606,4.521,622,3.588,632,1.391,635,3.325,673,3.325,674,3.94,675,3.94,676,3.94,677,3.94,678,3.94,680,3.23,682,4.332,683,4.201,684,3.94,685,3.325,686,3.94,687,3.94,689,3.94,690,5.135,691,3.94,693,3.94,694,3.94,696,3.94,697,3.94,699,3.94,700,3.94,702,2.439,703,1.904,704,2.256,705,2.941,706,3.588,707,2.791,708,3.325,709,3.94,710,5.517,711,2.344,712,3.94,713,5.341,714,4.863,715,3.94,716,4.863,717,5.341,718,3.94,719,3.94,720,3.94,721,3.94,722,3.94,723,3.94,1097,3.783]],["title/interfaces/RestaurantCredentials.html",[556,0.634,642,3.196]],["body/interfaces/RestaurantCredentials.html",[3,0.093,4,0.093,9,0.093,21,0.536,32,0.785,33,0.01,34,1.392,45,0.093,84,0.955,150,0.007,151,0.008,152,0.007,194,1.093,556,0.944,557,2.049,642,5.664,662,5.863,665,6.753,1970,6.405,1971,5.64]],["title/injectables/RestaurantService.html",[632,0.986,1128,2.826]],["body/injectables/RestaurantService.html",[3,0.063,4,0.063,9,0.063,21,0.361,22,1.705,29,1.015,30,1.616,32,0.791,33,0.01,34,1.409,39,2.261,41,0.227,44,0.236,45,0.063,46,0.248,84,0.93,112,0.941,123,0.965,127,0.872,141,1.62,144,0.918,150,0.005,151,0.006,152,0.005,206,1.978,207,1.535,230,1.181,233,1.095,275,5.211,276,5.211,288,3.225,292,2.984,333,2.575,397,2.513,480,2.836,632,1.357,633,1.781,711,4.517,785,2.26,1063,3.207,1064,5.058,1066,4.12,1128,3.888,1972,4.316,1973,5.917,1974,5.917,1975,5.917,1976,5.917,1977,5.917,1978,4.316,1979,5.917,1980,4.316,1981,5.917,1982,4.316,1983,5.917,1984,4.316,1985,5.917,1986,4.316,1987,5.917,1988,4.316,1989,5.917,1990,4.316,1991,5.917,1992,4.316,1993,4.316,1994,4.316,1995,4.316,1996,4.316,1997,4.316,1998,4.316,1999,4.316,2000,4.316,2001,5.917,2002,4.316]],["title/interfaces/RestaurantState.html",[556,0.634,564,2.682]],["body/interfaces/RestaurantState.html",[3,0.067,4,0.067,9,0.067,21,0.388,32,0.849,33,0.01,34,1.349,41,0.244,45,0.117,84,0.849,97,1.176,112,1.702,123,1.745,127,1.577,134,1.119,144,1.708,150,0.005,151,0.007,152,0.005,194,0.891,223,1.371,288,4.079,292,3.774,548,2.528,556,1.184,557,1.483,558,3.048,559,3.048,560,2.892,561,3.875,562,3.875,563,3.875,564,4.37,565,3.774,566,2.745,567,4.565,568,4.206,569,4.565,570,4.668,571,3.491,572,3.367,573,4.449,574,4.668,575,2.255,576,2.757,577,2.892,1097,4.668]],["title/modules/RestaurantStoreModule.html",[153,0.826,2003,2.994]],["body/modules/RestaurantStoreModule.html",[3,0.09,4,0.09,9,0.09,33,0.01,41,0.27,44,0.337,45,0.09,46,0.354,150,0.007,151,0.008,152,0.007,155,1.732,157,2.2,170,1.872,171,2.812,172,2.262,173,2.261,222,1.565,229,2.383,703,2.625,725,4.053,726,4.053,727,4.053,1529,5.432,2003,5.188,2004,4.053,2005,4.946,2006,5.975,2007,5.975,2008,6.562,2009,6.168,2010,6.168,2011,6.168]],["title/injectables/RestaurnatStoreAuthEffects.html",[632,0.986,2005,3.449]],["body/injectables/RestaurnatStoreAuthEffects.html",[3,0.053,4,0.053,9,0.053,21,0.303,28,4.564,29,0.853,30,1.464,32,0.717,33,0.01,34,1.047,41,0.25,44,0.198,45,0.053,46,0.208,84,0.869,150,0.004,151,0.006,152,0.004,194,0.75,197,1.681,201,4.683,206,0.874,207,0.679,208,4.564,213,2.281,214,2.343,219,1.899,220,1.224,222,0.92,226,2.382,229,2.451,230,0.992,232,1.224,233,0.92,333,2.151,378,4.355,397,2.367,414,3.067,415,3.478,438,2.852,492,2.907,566,2.726,571,2.227,632,1.2,633,1.496,679,2.061,680,3.598,682,4.478,683,4.422,702,1.976,703,1.543,704,1.828,707,3.831,1293,2.907,1765,4.609,1848,5.923,2004,5.035,2005,4.197,2012,6.144,2013,3.625,2014,6.142,2015,6.142,2016,6.142,2017,6.142,2018,6.142,2019,6.726,2020,3.625,2021,5.234,2022,5.234,2023,5.234,2024,3.625,2025,5.234,2026,5.234,2027,5.234,2028,3.625,2029,5.234,2030,5.234,2031,4.609,2032,3.625,2033,5.234,2034,5.234,2035,5.234,2036,6.726,2037,5.234,2038,3.625,2039,5.234,2040,5.234,2041,5.234,2042,3.625]],["title/injectables/RestaurnatStoreResourceEffects.html",[632,0.986,2006,3.449]],["body/injectables/RestaurnatStoreResourceEffects.html",[3,0.049,4,0.049,9,0.049,21,0.28,29,1.162,30,1.424,32,0.697,33,0.01,41,0.245,44,0.183,45,0.049,46,0.192,84,0.38,150,0.004,151,0.005,152,0.004,194,0.708,197,1.773,202,2.456,206,0.808,207,0.627,213,2.21,214,2.269,220,1.13,222,0.849,223,0.99,229,2.391,230,0.916,232,1.13,378,4.249,397,2.328,414,2.349,415,1.52,567,3.682,568,3.392,569,3.682,570,4.04,571,2.102,573,4.561,632,1.133,633,1.381,679,1.903,680,3.51,682,4.403,683,4.342,685,3.67,690,5.342,702,1.825,703,1.425,704,1.688,705,5.147,707,2.088,785,1.753,982,3.67,1128,4.912,1166,4.182,1293,2.685,1636,4.349,2004,4.912,2006,3.96,2012,5.994,2031,4.349,2043,3.348,2044,5.868,2045,5.868,2046,5.868,2047,5.868,2048,5.868,2049,3.348,2050,7.673,2051,4.939,2052,4.939,2053,4.939,2054,4.939,2055,7.673,2056,3.348,2057,4.939,2058,4.939,2059,3.348,2060,4.939,2061,4.939,2062,4.939,2063,3.348,2064,4.939,2065,4.939,2066,3.348,2067,4.939,2068,4.939,2069,4.939,2070,3.348,2071,2.948]],["title/injectables/RestaurnatStoreSettingEffects.html",[632,0.986,2007,3.449]],["body/injectables/RestaurnatStoreSettingEffects.html",[3,0.057,4,0.057,9,0.057,21,0.329,29,0.925,30,1.375,32,0.673,33,0.01,34,1.087,41,0.254,44,0.215,45,0.057,46,0.226,84,0.446,150,0.004,151,0.006,152,0.004,194,0.795,197,1.519,202,2.578,206,0.949,207,0.737,213,2.056,214,2.112,221,1.259,222,0.998,223,1.163,224,1.623,225,1.403,227,1.575,229,2.354,230,1.077,232,1.328,233,0.998,285,3.155,288,3.804,292,3.52,333,1.775,397,2.261,414,2.946,415,1.786,632,1.273,633,1.623,679,2.236,680,3.685,682,4.278,683,4.162,690,3.863,702,2.144,703,1.674,704,1.984,705,5.158,1074,5.187,1075,5.187,1080,2.924,1128,5.158,1510,5.66,2004,4.837,2007,4.449,2012,5.902,2071,3.465,2072,3.935,2073,6.428,2074,6.428,2075,6.428,2076,3.935,2077,5.549,2078,5.549,2079,5.549,2080,5.549,2081,5.549,2082,5.549,2083,5.549,2084,7.849,2085,3.935,2086,5.549,2087,6.981,2088,5.549,2089,6.981,2090,6.981,2091,3.935,2092,5.549,2093,5.549,2094,3.935]],["title/modules/RootStoreModule.html",[153,0.826,469,2.994]],["body/modules/RootStoreModule.html",[3,0.087,4,0.087,9,0.087,33,0.01,41,0.264,44,0.327,45,0.087,46,0.344,78,1.21,134,1.444,150,0.006,151,0.008,152,0.006,153,1.15,155,1.682,156,2.327,157,2.61,158,2.471,159,2.471,160,2.021,166,3.019,167,2.471,168,2.471,170,2.221,171,2.762,172,2.197,173,2.221,222,1.519,229,1.916,469,5.981,504,5.273,505,4.169,703,2.549,725,3.935,726,3.935,727,3.935,2003,5.981,2004,3.935,2095,5.273,2096,5.273,2097,5.989,2098,5.989]],["title/components/SidenavComponent.html",[0,0.473,136,1.177]],["body/components/SidenavComponent.html",[0,0.604,1,0.888,2,1.418,3,0.044,4,0.044,5,0.96,6,0.96,7,0.96,8,0.96,9,0.044,13,0.96,14,2.338,15,2.514,17,1.278,19,1.278,21,0.251,22,1.311,24,2.706,30,1.464,32,0.695,33,0.01,34,1.156,39,0.843,40,1.041,41,0.172,42,3.385,44,0.164,45,0.089,46,0.172,49,2.697,52,1.101,53,1.878,54,1.101,55,1.718,59,1.363,65,1.239,67,2.136,68,2.384,69,2.974,70,1.769,71,2.136,72,0.935,73,2.496,75,2.802,76,2.881,77,1.572,78,0.607,79,1.456,80,1.456,81,0.96,82,1.962,83,0.96,84,0.696,85,0.96,86,0.865,87,1.278,88,1.456,89,0.865,90,0.96,91,0.888,92,0.843,93,1.456,94,0.888,95,0.96,96,0.843,97,1.155,98,0.96,99,0.888,100,0.96,101,0.865,102,0.96,103,0.865,104,0.96,105,0.888,106,0.935,107,1.456,108,0.888,109,0.935,110,0.96,111,0.865,112,0.655,113,1.759,114,0.888,115,0.843,116,0.96,117,0.865,118,0.935,119,0.96,120,0.865,121,0.96,122,0.888,123,0.671,124,0.935,125,0.96,126,0.888,127,1.24,128,0.96,129,0.865,130,0.865,131,0.96,132,0.865,133,0.865,134,0.724,135,0.96,136,1.679,137,0.96,138,0.822,139,0.96,140,0.888,141,0.822,142,0.935,143,0.865,144,0.968,145,0.865,146,0.865,147,0.911,148,0.96,149,0.96,150,0.003,151,0.005,152,0.003,194,0.653,197,1.505,203,2.384,213,0.96,214,0.986,303,1.706,304,1.706,319,4.222,331,1.973,337,1.363,338,3.325,340,1.973,349,2.415,350,2.407,351,1.319,352,1.278,365,4.738,392,2.09,394,3.169,395,1.937,399,4.271,400,3.169,404,2.09,432,2.09,453,1.872,455,1.872,457,2.481,459,3.65,460,2.991,556,0.81,572,2.384,591,3.782,595,3.383,598,2.673,743,2.09,744,3.169,777,2.09,823,2.231,864,1.514,870,2.587,873,2.644,874,1.636,875,1.636,876,3.383,967,3.945,993,2.09,1131,2.09,1266,2.09,1347,3.169,1348,2.231,1349,3.383,1350,4.086,1351,3.429,1352,3.383,1353,3.169,1354,3.169,1355,3.383,1356,4.086,1357,2.231,1358,3.828,1359,4.086,1360,3.383,1361,4.086,1362,4.086,1363,4.559,1564,2.231,1565,2.644,2099,3.002,2100,3.002,2101,3.002,2102,3.002,2103,3.002,2104,3.002,2105,3.002,2106,3.002,2107,3.002,2108,4.552,2109,4.552,2110,3.002,2111,3.002,2112,3.002,2113,3.002,2114,3.002,2115,3.002,2116,3.002,2117,3.002,2118,5.498,2119,3.002,2120,3.002]],["title/interfaces/SidenavData.html",[366,3.196,556,0.634]],["body/interfaces/SidenavData.html",[3,0.09,4,0.09,9,0.09,21,0.518,32,0.803,33,0.01,34,1.347,41,0.193,45,0.09,150,0.007,151,0.008,152,0.007,194,1.07,366,5.545,419,4.958,556,0.911,557,1.978,572,3.114,591,4.536,967,4.731,1351,5.191,1358,5.794,2121,5.444,2122,6.183,2123,8.323,2124,6.183]],["title/components/SnackbarComponent.html",[0,0.473,138,1.177]],["body/components/SnackbarComponent.html",[0,0.705,1,1.158,2,1.723,3,0.057,4,0.057,5,1.253,6,1.253,7,1.253,8,1.253,9,0.057,13,1.253,14,2.395,15,2.599,17,1.553,19,1.553,21,0.328,29,1.301,30,1.264,32,0.736,33,0.01,34,0.998,41,0.2,44,0.214,45,0.057,46,0.225,49,2.963,52,1.437,54,1.437,55,1.478,56,1.568,57,2.214,72,1.22,75,1.522,76,1.839,77,2.052,78,0.792,79,1.769,80,1.769,81,1.253,82,2.229,83,1.253,84,0.727,85,1.253,86,1.129,87,1.553,88,1.769,89,1.129,90,1.253,91,1.158,92,1.1,93,1.769,94,1.158,95,1.253,96,1.1,97,1.403,98,1.253,99,1.158,100,1.253,101,1.129,102,1.253,103,1.129,104,1.253,105,1.158,106,1.22,107,1.769,108,1.158,109,1.22,110,1.253,111,1.129,112,0.854,113,2.051,114,1.158,115,1.1,116,1.253,117,1.129,118,1.22,119,1.253,120,1.129,121,1.253,122,1.158,123,0.876,124,1.22,125,1.253,126,1.158,127,1.408,128,1.253,129,1.129,130,1.129,131,1.253,132,1.129,133,1.129,134,0.945,135,1.253,136,1.072,137,1.253,138,1.907,139,1.253,140,1.158,141,1.072,142,1.22,143,1.129,144,1.176,145,1.129,146,1.129,147,1.189,148,1.253,149,1.253,150,0.004,151,0.006,152,0.004,194,0.793,206,0.945,207,0.733,261,2.874,331,2.574,351,1.721,352,1.667,392,2.727,704,1.975,864,1.975,997,2.727,1000,2.727,1003,3.851,1033,2.574,1034,2.727,1035,2.911,1093,6.116,1096,3.141,1097,3.999,1104,3.141,1109,4.871,1116,4.871,2125,3.917,2126,6.412,2127,5.532,2128,7.348,2129,7.348,2130,3.917,2131,5.532,2132,3.917,2133,3.917,2134,3.917,2135,2.727,2136,2.574,2137,5.532,2138,5.532,2139,3.917]],["title/interfaces/SnackbarConfig.html",[556,0.634,937,2.994]],["body/interfaces/SnackbarConfig.html",[3,0.067,4,0.067,9,0.067,21,0.386,32,0.773,33,0.01,34,1.213,40,2.424,41,0.218,44,0.252,45,0.101,46,0.265,58,1.903,73,3.172,138,1.263,150,0.005,151,0.007,152,0.005,194,0.888,207,1.501,233,1.17,257,2.034,261,3.38,321,2.883,453,5.002,455,2.878,556,0.913,557,1.476,598,2.243,632,1.42,859,3.212,864,3.524,870,3.972,880,4.439,907,2.622,937,5.423,991,3.861,992,5.193,993,4.865,994,6.088,997,4.865,1000,4.865,1002,5.383,1003,5.872,1004,4.658,1097,3.861,1113,2.878,2135,3.212,2136,3.032,2140,3.7,2141,5.55,2142,4.965,2143,3.429,2144,3.7,2145,3.7,2146,3.7,2147,3.7,2148,3.7,2149,3.7,2150,3.7,2151,3.7,2152,3.7,2153,3.7,2154,3.7,2155,3.7,2156,3.7,2157,4.965,2158,3.7,2159,3.7,2160,3.7,2161,3.7]],["title/modules/SnackbarModule.html",[153,0.826,1048,2.682]],["body/modules/SnackbarModule.html",[3,0.082,4,0.082,9,0.082,33,0.01,41,0.264,44,0.308,45,0.082,46,0.323,78,1.139,138,2.458,150,0.006,151,0.008,152,0.006,153,1.082,155,1.582,156,2.19,157,2.743,158,2.325,159,3.173,160,2.596,166,2.908,167,2.325,168,2.325,170,1.71,171,2.66,172,2.067,173,2.139,176,2.951,177,2.74,178,2.74,188,3.071,513,5.238,907,4.811,1048,5.462,1152,4.188,2135,3.923,2136,3.703,2143,4.188,2162,4.962,2163,4.962,2164,4.962,2165,4.962,2166,5.635,2167,7.049]],["title/interfaces/SnackbarPosition.html",[556,0.634,2141,3.196]],["body/interfaces/SnackbarPosition.html",[3,0.068,4,0.068,9,0.068,21,0.393,32,0.604,33,0.01,34,1.22,40,2.445,41,0.22,44,0.256,45,0.102,46,0.269,58,2.908,73,3.557,138,1.285,150,0.005,151,0.007,152,0.005,194,0.898,233,1.191,257,2.058,261,3.103,321,1.937,453,4.397,455,4.397,556,0.923,557,1.502,598,3.428,632,1.437,859,4.908,864,3.554,870,4.454,880,3.723,907,2.669,937,5.236,991,3.907,992,5.989,993,5.611,994,5.589,997,4.908,1000,4.908,1002,4.942,1003,5.455,1004,3.907,1113,4.397,2135,3.269,2136,3.085,2140,3.765,2141,5.239,2142,5.023,2143,3.489,2144,3.765,2145,3.765,2146,3.765,2147,3.765,2148,3.765,2149,3.765,2150,3.765,2151,3.765,2152,3.765,2153,3.765,2154,3.765,2155,3.765,2156,3.765,2157,5.023,2158,3.765,2159,3.765,2160,3.765,2161,3.765]],["title/injectables/SnackbarService.html",[632,0.986,907,2.445]],["body/injectables/SnackbarService.html",[3,0.065,4,0.065,9,0.065,21,0.374,22,1.745,29,1.051,30,1.452,32,0.711,33,0.01,34,1.304,39,1.93,40,2.756,41,0.215,44,0.244,45,0.1,46,0.256,58,1.843,73,3.12,84,0.836,138,1.223,150,0.005,151,0.007,152,0.005,206,1.778,207,1.38,233,1.133,257,1.99,261,3.041,321,1.843,453,4.287,455,2.786,556,0.893,598,2.172,632,1.389,633,1.843,859,3.11,864,3.466,870,3.907,880,3.601,907,3.443,937,5.531,991,4.287,992,5.108,993,4.786,994,5.477,997,5.364,1000,4.786,1002,4.843,1003,5.531,1004,3.778,1113,2.786,1159,4.786,2135,3.11,2136,2.936,2140,3.582,2141,4.502,2142,5.91,2143,3.32,2144,4.858,2145,3.582,2146,3.582,2147,3.582,2148,3.582,2149,3.582,2150,3.582,2151,3.582,2152,3.582,2153,4.858,2154,3.582,2155,3.582,2156,3.582,2157,4.858,2158,4.858,2159,3.582,2160,3.582,2161,3.582,2168,6.058,2169,6.058,2170,6.058,2171,4.467,2172,4.467,2173,4.467,2174,4.467,2175,4.467]],["title/components/StatusModifierComponent.html",[0,0.473,140,1.272]],["body/components/StatusModifierComponent.html",[0,0.642,1,0.982,2,1.53,3,0.048,4,0.048,5,1.063,6,1.063,7,1.063,8,1.063,9,0.048,13,1.063,14,2.361,15,2.525,17,1.379,19,1.379,21,0.278,22,1.415,29,0.782,30,1.357,32,0.719,33,0.01,34,0.909,39,0.933,40,1.704,41,0.182,44,0.182,45,0.048,46,0.191,49,3.172,52,1.219,53,1.371,54,1.801,55,2.436,56,1.33,57,1.33,67,2.27,68,1.908,69,2.436,70,1.908,71,1.908,72,1.53,75,1.908,76,1.56,77,1.74,78,0.672,79,1.571,80,1.571,81,1.063,82,2.064,83,1.063,84,0.662,85,1.063,86,0.957,87,1.379,88,1.571,89,0.957,90,1.063,91,0.982,92,0.933,93,1.571,94,0.982,95,1.063,96,0.933,97,1.246,98,1.063,99,0.982,100,1.063,101,0.957,102,1.063,103,0.957,104,1.063,105,0.982,106,1.035,107,1.571,108,0.982,109,1.035,110,1.063,111,0.957,112,0.725,113,1.869,114,0.982,115,0.933,116,1.063,117,0.957,118,1.035,119,1.063,120,0.957,121,1.063,122,0.982,123,0.743,124,1.035,125,1.063,126,0.982,127,1.305,128,1.063,129,0.957,130,0.957,131,1.063,132,0.957,133,0.957,134,0.801,135,1.063,136,0.91,137,1.063,138,0.91,139,1.063,140,1.908,141,2.177,142,2.685,143,0.957,144,1.044,145,0.957,146,0.957,147,1.49,148,1.063,149,1.063,150,0.004,151,0.005,152,0.004,194,0.704,206,0.801,207,0.622,221,1.063,261,2.663,303,1.889,304,1.889,337,2.229,349,1.46,351,1.46,352,1.414,392,2.314,457,1.811,680,1.56,740,2.665,741,3.228,939,3.063,957,5.145,1090,2.926,1091,5.145,1092,4.325,1093,5.78,1094,6.064,1096,2.665,1097,3.644,1098,5.117,1101,2.926,1102,4.325,1104,2.665,1105,2.926,1106,2.314,1113,2.073,1114,2.926,2176,7.209,2177,7.209,2178,6.454,2179,4.912,2180,3.323,2181,3.323,2182,3.323,2183,3.323,2184,3.323,2185,4.912,2186,4.912,2187,4.912,2188,4.912,2189,4.912,2190,4.912,2191,4.912]],["title/interfaces/SubNavigation.html",[556,0.634,1354,2.994]],["body/interfaces/SubNavigation.html",[0,0.754,3,0.078,4,0.078,9,0.078,14,1.44,15,1.595,17,1.515,19,1.515,21,0.452,32,0.661,33,0.01,34,1.363,41,0.214,42,3.993,44,0.295,45,0.115,46,0.31,84,0.929,136,1.477,150,0.006,151,0.007,152,0.006,194,0.983,197,1.477,203,4.29,365,4.507,394,3.757,395,2.296,399,4.775,400,3.757,404,3.757,432,3.757,556,1.111,557,1.726,572,2.665,591,2.941,967,3.067,1131,3.757,1347,4.775,1348,4.01,1349,5.896,1350,5.097,1351,4.278,1352,4.01,1353,3.757,1354,5.249,1355,4.01,1356,4.01,1357,4.01,1358,3.757,1359,4.01,1360,4.01,1361,4.01,1362,4.01,1363,4.01]],["title/interfaces/Subgroup.html",[556,0.634,1186,2.826]],["body/interfaces/Subgroup.html",[3,0.092,4,0.092,9,0.092,21,0.532,32,0.732,33,0.01,34,1.382,45,0.11,84,0.973,112,1.387,150,0.007,151,0.008,152,0.007,194,1.088,207,1.421,556,1.119,557,2.034,566,3.149,1184,5.6,1185,4.427,1186,5.331]],["title/interfaces/Table.html",[144,0.915,556,0.634]],["body/interfaces/Table.html",[3,0.093,4,0.093,9,0.093,21,0.537,32,0.785,33,0.01,34,1.359,45,0.093,84,0.956,144,1.623,150,0.007,151,0.008,152,0.007,194,1.094,321,3.36,556,0.946,557,2.054,566,3.091,1800,6.758,2192,6.42]],["title/components/TableEditorComponent.html",[0,0.473,143,1.239]],["body/components/TableEditorComponent.html",[0,0.563,1,0.793,2,1.301,3,0.039,4,0.039,5,0.858,6,0.858,7,0.858,8,0.858,9,0.039,11,1.722,12,2.327,13,0.858,14,2.311,15,2.472,17,1.172,19,1.172,21,0.225,22,1.203,23,2.625,29,0.631,30,1.51,32,0.604,33,0.01,34,0.418,39,1.76,40,2.403,41,0.239,44,0.147,45,0.039,46,0.154,47,2.667,49,2.923,52,0.984,53,1.107,54,0.984,55,1.013,56,1.074,57,1.074,58,1.722,59,1.218,60,1.042,61,1.405,62,1.994,65,1.107,67,1.042,68,1.991,72,1.301,78,0.542,79,1.335,80,1.335,81,0.858,82,1.85,83,0.858,84,0.752,85,0.858,86,0.773,87,1.172,88,1.335,89,0.773,90,0.858,91,0.793,92,0.753,93,1.335,94,0.793,95,0.858,96,0.753,97,1.059,98,0.858,99,0.793,100,0.858,101,0.773,102,0.858,103,0.773,104,0.858,105,0.793,106,0.836,107,1.335,108,0.793,109,0.836,110,0.858,111,0.773,112,0.585,113,1.639,114,0.793,115,0.753,116,0.858,117,0.773,118,0.836,119,0.858,120,0.773,121,0.858,122,0.793,123,0.6,124,0.836,125,0.858,126,0.793,127,1.169,128,0.858,129,0.773,130,0.773,131,0.858,132,0.773,133,0.773,134,0.647,135,0.858,136,0.734,137,0.858,138,0.734,139,0.858,140,0.793,141,0.734,142,0.836,143,1.666,144,1.796,145,0.773,146,0.773,147,0.814,148,0.858,149,0.858,150,0.003,151,0.005,152,0.003,194,0.599,195,2.684,197,2.097,202,2.353,203,2.684,204,3.607,206,1.007,207,1.083,213,0.858,214,0.881,215,2.684,220,0.905,221,0.858,222,0.681,223,0.793,224,1.107,225,0.957,227,1.074,228,1.074,229,0.858,230,0.734,231,1.405,232,0.905,233,0.681,241,1.525,277,1.218,321,1.107,333,1.639,338,2.105,360,2.913,371,3.287,397,1.477,414,1.074,415,1.218,428,1.525,438,1.462,566,1.531,571,2.181,581,3.725,586,3.944,587,1.405,595,1.994,596,1.868,597,1.673,598,1.304,785,1.405,821,1.994,824,1.868,947,1.868,1159,1.868,1187,4.076,1190,1.994,1191,2.907,1192,4.11,1193,3.348,1197,4.638,1198,3.348,1201,3.103,1215,3.348,1216,2.151,1223,1.868,1224,1.868,1225,1.763,1226,2.151,1227,2.151,1228,2.151,1239,2.151,1241,1.994,1245,3.348,1246,2.151,1255,2.907,1422,6.853,1429,2.151,1605,2.362,1608,2.362,1611,2.362,1652,2.362,1653,2.362,1654,2.362,1732,2.362,1784,6.241,1800,4.11,2193,5.125,2194,5.784,2195,2.683,2196,4.175,2197,2.683,2198,2.683,2199,2.683,2200,2.683,2201,2.683,2202,4.175,2203,2.683,2204,4.175,2205,2.683,2206,2.683,2207,2.683,2208,2.683,2209,2.683,2210,2.683,2211,4.175,2212,2.683,2213,2.683,2214,5.784,2215,4.175,2216,4.175,2217,4.175]],["title/components/TableSelectorComponent.html",[0,0.473,145,1.239]],["body/components/TableSelectorComponent.html",[0,0.561,1,0.788,2,1.294,3,0.039,4,0.039,5,0.853,6,0.853,7,0.853,8,0.853,9,0.039,11,1.714,12,2.318,13,0.853,14,2.321,15,2.439,17,1.167,19,1.167,21,0.223,22,1.197,23,2.617,29,0.627,30,1.447,32,0.603,33,0.01,39,1.619,40,2.48,41,0.234,44,0.146,45,0.039,46,0.153,47,1.768,49,2.918,52,0.978,53,1.714,54,2.114,55,2.609,56,1.067,57,1.067,58,2.106,59,1.886,60,1.615,61,1.397,65,2.106,67,1.615,68,1.615,69,3.008,70,1.036,71,2.24,72,0.831,75,1.615,76,1.252,77,1.397,78,0.539,79,1.329,80,1.329,81,0.853,82,1.844,83,0.853,84,0.654,85,0.853,86,0.768,87,1.167,88,1.329,89,0.768,90,0.853,91,0.788,92,0.749,93,1.329,94,0.788,95,0.853,96,0.749,97,1.054,98,0.853,99,0.788,100,0.853,101,0.768,102,0.853,103,0.768,104,0.853,105,0.788,106,0.831,107,1.329,108,0.788,109,0.831,110,0.853,111,0.768,112,0.582,113,1.633,114,0.788,115,0.749,116,0.853,117,0.768,118,0.831,119,0.853,120,0.768,121,0.853,122,0.788,123,0.596,124,0.831,125,0.853,126,0.788,127,1.165,128,0.853,129,0.768,130,0.768,131,0.853,132,0.768,133,0.768,134,0.643,135,0.853,136,0.73,137,0.853,138,0.73,139,0.853,140,0.788,141,0.73,142,0.831,143,0.768,144,1.786,145,1.661,146,0.768,147,1.261,148,0.853,149,0.853,150,0.003,151,0.005,152,0.003,194,0.596,195,2.674,197,1.812,202,2.349,206,1.002,207,0.778,213,0.853,214,0.876,215,2.674,221,1.844,222,0.676,223,0.788,224,1.1,225,0.951,227,1.067,228,1.067,229,0.853,230,0.73,231,1.397,232,0.9,233,0.676,277,1.21,302,1.585,303,2.362,304,2.362,306,1.982,309,2.348,310,4.496,311,3.659,327,2.348,337,1.21,338,1.345,346,2.138,349,1.171,351,1.826,352,1.135,360,2.902,371,3.277,397,1.471,428,1.516,457,2.783,459,3.332,460,2.731,567,3.277,576,3.714,597,1.663,741,1.752,744,2.893,786,2.348,787,3.332,789,1.857,790,2.348,793,2.348,821,4.284,841,3.659,851,1.585,853,1.663,857,2.362,858,3.659,1031,2.731,1396,2.138,1397,2.348,1429,4.623,1437,2.893,1499,6.022,2218,7.51,2219,5.106,2220,5.106,2221,5.765,2222,4.156,2223,2.667,2224,2.667,2225,2.667,2226,4.156,2227,2.667,2228,2.667,2229,2.667,2230,2.667,2231,2.667,2232,2.667,2233,2.667,2234,2.667,2235,2.667,2236,2.667,2237,2.667,2238,2.667,2239,4.156,2240,4.156,2241,2.667,2242,4.156,2243,4.156,2244,5.765,2245,4.156,2246,2.667,2247,2.348,2248,2.667,2249,2.667,2250,2.667,2251,2.667,2252,2.667,2253,2.667]],["title/components/UserAuthComponent.html",[0,0.473,146,1.239]],["body/components/UserAuthComponent.html",[0,0.549,1,0.761,2,1.259,3,0.037,4,0.037,5,0.823,6,0.823,7,0.823,8,0.823,9,0.037,11,1.668,12,2.266,13,0.823,14,2.3,15,2.456,17,1.135,19,1.135,21,0.215,22,1.165,23,2.567,29,0.605,30,1.465,32,0.658,33,0.01,39,1.832,40,2.366,41,0.232,44,0.141,45,0.037,46,0.148,47,2.124,49,3.227,52,0.944,54,1.483,55,1.526,56,1.618,57,1.998,58,2.059,59,1.169,60,1,61,2.117,64,1.792,65,1.062,67,1.939,68,2.534,69,2.462,70,1,71,1,72,0.802,73,1.835,75,2.197,76,1.898,78,0.52,79,1.293,80,1.293,81,0.823,82,1.809,83,0.823,84,0.74,85,0.823,86,0.742,87,1.135,88,1.293,89,0.742,90,0.823,91,0.761,92,0.723,93,1.293,94,0.761,95,0.823,96,0.723,97,1.559,98,0.823,99,0.761,100,0.823,101,0.742,102,0.823,103,0.742,104,0.823,105,0.761,106,0.802,107,1.293,108,0.761,109,0.802,110,0.823,111,0.742,112,0.561,113,1.597,114,0.761,115,1.588,116,0.823,117,0.742,118,0.802,119,0.823,120,0.742,121,0.823,122,0.761,123,0.576,124,0.802,125,0.823,126,0.761,127,1.143,128,0.823,129,0.742,130,0.742,131,0.823,132,0.742,133,0.742,134,0.621,135,0.823,136,0.705,137,0.823,138,0.705,139,0.823,140,0.761,141,0.705,142,0.802,143,0.742,144,0.86,145,0.742,146,1.629,147,2.144,148,0.823,149,0.823,150,0.003,151,0.004,152,0.003,194,0.58,197,1.785,202,2.143,206,0.975,207,0.757,221,0.823,222,0.653,223,0.761,224,1.062,225,0.918,230,0.705,233,0.653,257,1.64,277,1.169,333,1.293,338,2.517,349,1.776,397,1.771,575,1.966,579,1.692,581,3.361,584,4.038,586,3.653,587,1.348,588,1.792,590,2.814,591,2.203,592,1.792,598,1.252,619,2.064,626,6.078,647,5.069,653,2.064,654,2.267,661,4.535,662,3.937,708,1.913,744,2.814,850,1.913,857,2.298,864,1.298,869,2.064,874,1.403,875,1.403,982,1.913,1004,2.521,1223,3.475,1224,1.792,1255,2.814,1266,1.792,1331,2.064,1437,1.792,1563,2.064,1687,3.242,1915,2.267,1916,4.395,1917,3.56,1918,4.395,1922,4.98,1931,3.56,1932,2.267,1935,2.267,1936,2.267,1937,2.267,1940,2.267,1941,2.267,1942,2.267,1947,2.267,1949,2.267,1954,2.267,1957,2.267,1966,2.267,1967,2.267,1968,3.56,1969,2.267,2254,7.579,2255,4.991,2256,4.042,2257,5.655,2258,5.655,2259,5.655,2260,4.042,2261,2.574,2262,2.574,2263,2.574,2264,2.574,2265,2.574,2266,2.574,2267,2.574,2268,2.574,2269,2.574,2270,4.042,2271,2.574,2272,2.574,2273,2.574,2274,2.574,2275,2.574,2276,2.574,2277,2.574,2278,5.655,2279,4.042,2280,4.042,2281,4.042,2282,6.523,2283,4.042,2284,4.042]],["title/interfaces/UserCredentials.html",[556,0.634,647,3.196]],["body/interfaces/UserCredentials.html",[3,0.095,4,0.095,9,0.095,21,0.548,32,0.745,33,0.01,34,1.365,45,0.095,150,0.007,151,0.008,152,0.007,194,1.107,556,0.965,557,2.094,647,5.737,661,6.801,662,5.905,1971,5.764,2285,6.546]],["title/dependencies.html",[156,2.013,2286,3.576]],["body/dependencies.html",[33,0.01,44,0.294,87,1.512,150,0.006,151,0.007,152,0.006,156,2.093,172,1.975,177,3.331,178,2.619,220,1.818,222,1.738,230,1.474,406,6.04,407,4.318,409,4.318,411,4.318,477,4.318,484,6.032,485,5.493,492,4.318,494,4.742,497,4.742,498,4.742,587,2.82,703,2.292,856,4.742,2136,3.539,2287,5.385,2288,8.501,2289,5.385,2290,6.85,2291,5.385,2292,5.385,2293,5.385,2294,5.385,2295,6.85,2296,5.385,2297,5.385,2298,7.533,2299,5.385,2300,5.385,2301,7.533,2302,5.385,2303,5.385,2304,5.385,2305,5.385,2306,5.385,2307,5.385,2308,5.385,2309,5.385,2310,5.385,2311,5.385,2312,5.385,2313,7.533,2314,5.385,2315,5.385,2316,4.318,2317,5.385,2318,5.385,2319,5.385,2320,5.385,2321,5.385,2322,5.385,2323,5.385,2324,5.385,2325,5.385,2326,5.385,2327,5.385,2328,5.385,2329,5.385]],["title/miscellaneous/functions.html",[2316,4.155,2330,2.657]],["body/miscellaneous/functions.html",[21,0.341,33,0.01,34,0.634,39,2.382,60,1.582,84,1.004,123,0.911,144,1.209,150,0.004,151,0.006,152,0.004,206,2.136,207,1.658,225,2.659,229,1.303,470,3.586,507,3.586,520,5.006,533,3.026,565,3.574,568,2.977,572,2.544,639,3.586,704,4.194,729,5.006,755,4.899,757,3.586,784,2.54,805,3.586,818,3.026,820,3.586,824,3.958,830,3.586,891,3.586,1023,3.586,1024,5.006,1084,5.006,1157,3.586,1187,2.977,1190,4.224,1269,3.586,1270,5.006,1316,3.586,1318,3.586,1351,2.54,1396,4.558,1423,3.266,1453,5.006,1461,3.586,1530,5.006,1576,3.026,1670,3.586,1833,3.026,1886,5.006,2004,2.676,2008,5.006,2121,3.586,2316,3.266,2330,3.026,2331,4.073,2332,5.685,2333,5.685,2334,4.073,2335,5.685,2336,6.549,2337,5.685,2338,4.073,2339,5.685,2340,5.685,2341,4.073,2342,5.685,2343,4.073,2344,5.685,2345,7.722,2346,5.685,2347,4.073,2348,5.685,2349,4.073,2350,5.685,2351,5.685,2352,4.073,2353,5.685,2354,5.685,2355,5.685,2356,5.685,2357,4.073,2358,4.073,2359,4.073,2360,4.073,2361,4.073,2362,4.073,2363,4.073,2364,4.073,2365,4.073,2366,4.073,2367,7.722,2368,7.087,2369,4.073,2370,4.073,2371,4.073,2372,4.073,2373,4.073,2374,4.073,2375,4.073,2376,4.073,2377,4.073,2378,4.073,2379,5.685,2380,4.073,2381,4.073,2382,4.073,2383,4.073]],["title/index.html",[21,0.36,2384,3.787]],["body/index.html",[1,1.591,2,0.903,33,0.01,78,0.586,86,1.55,89,1.55,91,2.106,94,2.106,96,1.511,99,2.106,101,1.55,103,1.55,105,2.106,108,2.106,111,1.55,114,2.106,117,1.55,120,1.55,122,1.591,126,1.591,129,1.55,130,1.55,132,1.55,133,1.55,136,1.95,138,1.95,140,2.106,143,1.55,145,1.55,146,1.55,150,0.003,151,0.005,152,0.003,153,0.557,154,5.889,155,0.814,156,1.126,157,1.033,158,1.196,159,1.196,160,0.978,161,2.552,162,2.552,163,2.552,164,3.745,165,4.505,166,1.828,167,1.196,168,1.196,253,1.579,353,4.681,354,2.552,355,2.552,356,2.552,380,3.745,462,5.806,463,2.552,464,2.552,465,2.552,466,2.552,467,3.745,468,5.744,469,4.52,557,0.927,599,6.131,600,2.552,601,2.552,602,2.552,603,2.552,604,3.745,605,3.745,606,3.535,633,1.196,745,2.552,746,2.552,747,2.552,748,2.552,749,4.367,846,2.154,881,5.709,882,2.552,883,2.552,884,2.552,885,3.745,906,3.355,907,3.058,1037,6.415,1038,2.552,1039,2.552,1040,2.552,1041,2.552,1042,2.552,1043,3.745,1044,3.745,1045,4.681,1046,4.498,1047,4.681,1048,4.791,1049,3.745,1118,2.552,1119,2.552,1120,2.552,1123,2.552,1124,2.552,1126,2.552,1127,2.552,1128,3.535,1148,2.552,1149,2.552,1179,2.552,1180,2.552,1181,2.552,1342,2.552,1343,2.552,1344,2.552,1482,6.286,1483,2.552,1484,2.552,1485,2.552,1486,2.552,1487,3.745,1488,3.745,1489,4.959,1490,3.745,1752,2.552,1753,2.552,1756,2.324,1769,6.472,1770,2.552,1771,2.552,1772,2.552,1773,2.552,1774,3.745,1775,3.745,1776,3.745,2003,3.745,2095,2.552,2096,2.552,2162,2.552,2163,2.552,2164,2.552,2165,2.552,2384,2.552,2385,2.898,2386,2.898,2387,2.898,2388,2.898,2389,2.898]],["title/modules.html",[155,1.658]],["body/modules.html",[33,0.007,150,0.006,151,0.007,152,0.006,154,3.9,155,1.474,164,3.654,165,2.983,353,3.449,462,3.9,467,3.654,468,3.654,469,3.654,485,7.208,599,3.9,604,3.654,605,3.654,749,2.983,881,3.9,885,3.654,1037,3.9,1043,3.654,1044,3.654,1045,3.449,1046,3.449,1047,3.449,1048,3.273,1482,3.9,1487,3.654,1488,3.654,1489,3.654,1769,3.9,1774,3.654,1775,3.654,2003,3.654,2247,7.771,2390,8.989,2391,8.989,2392,9.158,2393,8.826]],["title/routes.html",[253,3.217]],["body/routes.html",[33,0.009,150,0.008,151,0.009,152,0.008,253,3.871]],["title/miscellaneous/typealiases.html",[2330,2.657,2394,5.182]],["body/miscellaneous/typealiases.html",[21,0.576,32,0.664,33,0.009,150,0.007,151,0.009,152,0.007,834,4.523,933,5.908,1464,5.52,1465,5.115,1466,5.115,2330,5.115,2395,6.883,2396,6.883]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":319,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/SidenavComponent.html":{}}}],["0.12",{"_index":1566,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["0.24",{"_index":1567,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["0.4",{"_index":1178,"title":{},"body":{"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{}}}],["0.5",{"_index":2139,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["0.5rem",{"_index":741,"title":{},"body":{"components/ButtonOutlinedComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{}}}],["0.6",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["0.6.0",{"_index":2322,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":1117,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["0.85rem",{"_index":2252,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["0.87",{"_index":2112,"title":{},"body":{"components/SidenavComponent.html":{}}}],["0.8rem",{"_index":1032,"title":{},"body":{"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ProductEditorComponent.html":{}}}],["0.9.1",{"_index":2329,"title":{},"body":{"dependencies.html":{}}}],["0.9rem",{"_index":1266,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/UserAuthComponent.html":{}}}],["000000",{"_index":1176,"title":{},"body":{"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{}}}],["02.ogg",{"_index":1010,"title":{},"body":{"components/ChefComponent.html":{}}}],["1",{"_index":331,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/ChefComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{}}}],["1.1rem",{"_index":869,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["1.2rem",{"_index":873,"title":{},"body":{"components/CheckoutComponent.html":{},"components/SidenavComponent.html":{}}}],["1.3",{"_index":1573,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["1.4.0",{"_index":2295,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":350,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{}}}],["1.8rem",{"_index":339,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["1.9.0",{"_index":2327,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":597,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["11.0.1",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["13.0.2",{"_index":2306,"title":{},"body":{"dependencies.html":{}}}],["150px",{"_index":306,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/TableSelectorComponent.html":{}}}],["17",{"_index":2387,"title":{},"body":{"index.html":{}}}],["1px",{"_index":742,"title":{},"body":{"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductPageComponent.html":{}}}],["1rem",{"_index":68,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["2",{"_index":846,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"index.html":{}}}],["2.0.8",{"_index":2319,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2312,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":1330,"title":{},"body":{"components/LoadResourcesComponent.html":{},"components/ProductCardComponent.html":{}}}],["212px",{"_index":1479,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["225px",{"_index":1686,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["24",{"_index":1339,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["24px",{"_index":2115,"title":{},"body":{"components/SidenavComponent.html":{}}}],["25",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["2500",{"_index":2154,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["250px",{"_index":1265,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductCardComponent.html":{}}}],["26",{"_index":2388,"title":{},"body":{"index.html":{}}}],["27",{"_index":2386,"title":{},"body":{"index.html":{}}}],["270px",{"_index":1569,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["280px",{"_index":1435,"title":{},"body":{"components/ModifyComponent.html":{}}}],["28px",{"_index":1480,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["29",{"_index":2385,"title":{},"body":{"index.html":{}}}],["2px",{"_index":345,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{}}}],["2rem",{"_index":876,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{}}}],["3.3.0",{"_index":2317,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":2159,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["300px",{"_index":1564,"title":{},"body":{"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{}}}],["30px",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["32px",{"_index":1688,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{}}}],["3500",{"_index":995,"title":{},"body":{"components/ChefComponent.html":{}}}],["350px",{"_index":1436,"title":{},"body":{"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{}}}],["3px",{"_index":1175,"title":{},"body":{"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{}}}],["3rem",{"_index":850,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["4.0.0",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":2324,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":877,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["400px",{"_index":64,"title":{},"body":{"components/AccountComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["40px",{"_index":1478,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["48",{"_index":2389,"title":{},"body":{"index.html":{}}}],["4rem",{"_index":1331,"title":{},"body":{"components/LoadResourcesComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["5.0.0",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":2291,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":342,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["500",{"_index":744,"title":{},"body":{"components/ButtonOutlinedComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["500px",{"_index":1750,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["599px)\"]).subscribe((state",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["5rem",{"_index":1574,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["6.5.1",{"_index":2325,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":77,"title":{},"body":{"components/AccountComponent.html":{},"components/AmountSelectorComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{}}}],["600px",{"_index":858,"title":{},"body":{"components/CheckoutComponent.html":{},"components/TableSelectorComponent.html":{}}}],["60px",{"_index":1443,"title":{},"body":{"components/ModifyComponent.html":{}}}],["7.14.0",{"_index":2314,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":860,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["700",{"_index":2116,"title":{},"body":{"components/SidenavComponent.html":{}}}],["75px",{"_index":2250,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["8.1.0",{"_index":2309,"title":{},"body":{"dependencies.html":{}}}],["8.1.2",{"_index":2288,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":2290,"title":{},"body":{"dependencies.html":{}}}],["8.6.0",{"_index":2301,"title":{},"body":{"dependencies.html":{}}}],["8.9.1",{"_index":2315,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":305,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/ProductPageComponent.html":{}}}],["800",{"_index":2114,"title":{},"body":{"components/SidenavComponent.html":{}}}],["800px",{"_index":62,"title":{},"body":{"components/AccountComponent.html":{},"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["9",{"_index":1654,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["90",{"_index":1682,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["9]+[0",{"_index":1653,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["9_]+/g",{"_index":829,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["_event",{"_index":1642,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["_index",{"_index":923,"title":{},"body":{"components/ChefComponent.html":{}}}],["_next",{"_index":1907,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["absolute",{"_index":2110,"title":{},"body":{"components/SidenavComponent.html":{}}}],["abstractcontrol",{"_index":1221,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["accessors",{"_index":1201,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{}}}],["account",{"_index":16,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminRoutingModule.html":{}}}],["account'},{'name",{"_index":85,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["account.component.html",{"_index":20,"title":{},"body":{"components/AccountComponent.html":{}}}],["account.component.scss",{"_index":18,"title":{},"body":{"components/AccountComponent.html":{}}}],["account/account.component",{"_index":182,"title":{},"body":{"modules/AdminModule.html":{}}}],["account_circle",{"_index":1951,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["accountcomponent",{"_index":1,"title":{"components/AccountComponent.html":{}},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["action",{"_index":704,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/ChefStoreEffects.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SnackbarComponent.html":{},"miscellaneous/functions.html":{}}}],["action.group.name",{"_index":1841,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["action.id",{"_index":2036,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["action.name",{"_index":1848,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{},"injectables/RestaurnatStoreAuthEffects.html":{}}}],["action.numberofseats",{"_index":1847,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["action.product",{"_index":1879,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["action.product.name",{"_index":1867,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["action.restaurantid).pipe",{"_index":2052,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["action.table.name",{"_index":1871,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["actionname",{"_index":1000,"title":{},"body":{"components/ChefComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["actions",{"_index":680,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/ConfirmationDialogComponent.html":{},"components/ModifyComponent.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/StatusModifierComponent.html":{}}}],["activatedroute",{"_index":204,"title":{},"body":{"components/AdminPageComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableEditorComponent.html":{}}}],["activatedroutesnapshot",{"_index":1904,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["active",{"_index":823,"title":{},"body":{"components/CheckoutComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/SidenavComponent.html":{}}}],["activeorders",{"_index":570,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["actual_component",{"_index":149,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["add",{"_index":336,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/GroupEditorComponent.html":{}}}],["add_photo_alternate",{"_index":1676,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["add_shopping_cart",{"_index":1747,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["addextrasubgroup",{"_index":1195,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["addgroup",{"_index":1787,"title":{},"body":{"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["addgroup(group",{"_index":1795,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["addproduct",{"_index":1788,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["addproduct(product",{"_index":1797,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["addtable",{"_index":1789,"title":{},"body":{"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["addtable(name",{"_index":1799,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["addtocart",{"_index":1513,"title":{},"body":{"injectables/OrderingStoreEffects.html":{},"components/ProductPageComponent.html":{}}}],["addtocart(product",{"_index":1716,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["admin",{"_index":87,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"dependencies.html":{}}}],["admin.admin_page.account.restaurant_name",{"_index":50,"title":{},"body":{"components/AccountComponent.html":{}}}],["admin.admin_page.account.sign_out",{"_index":51,"title":{},"body":{"components/AccountComponent.html":{}}}],["admin.admin_page.account.user_email_title",{"_index":48,"title":{},"body":{"components/AccountComponent.html":{}}}],["admin.admin_settings.language_english",{"_index":296,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["admin.admin_settings.language_hungarian",{"_index":295,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["admin.admin_settings.select_currency",{"_index":297,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["admin.admin_settings.select_language",{"_index":294,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["admin/account",{"_index":1311,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["adminmodule",{"_index":154,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"index.html":{},"modules.html":{}}}],["adminnavigationdata",{"_index":1450,"title":{},"body":{"injectables/NavigationService.html":{}}}],["adminpagecomponent",{"_index":86,"title":{"components/AdminPageComponent.html":{}},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["adminroutingmodule",{"_index":164,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["adminsettingscomponent",{"_index":89,"title":{"components/AdminSettingsComponent.html":{}},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["afauth",{"_index":208,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/AuthService.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurnatStoreAuthEffects.html":{}}}],["afs",{"_index":1066,"title":{},"body":{"injectables/ChefService.html":{},"components/GroupEditorComponent.html":{},"injectables/OrderingService.html":{},"injectables/ResourceManagementService.html":{},"injectables/RestaurantService.html":{}}}],["afstorage",{"_index":1792,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["afterclosed",{"_index":955,"title":{},"body":{"components/ChefComponent.html":{}}}],["alertonneworder",{"_index":897,"title":{},"body":{"components/ChefComponent.html":{}}}],["aliases",{"_index":2395,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":59,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/CheckoutComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["allergens",{"_index":1548,"title":{},"body":{"interfaces/Product.html":{},"components/ProductEditorComponent.html":{}}}],["allowed",{"_index":2249,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["alpha",{"_index":1177,"title":{},"body":{"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{}}}],["amount",{"_index":92,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["amountselectorcomponent",{"_index":91,"title":{"components/AmountSelectorComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["amountselectormodule",{"_index":353,"title":{"modules/AmountSelectorModule.html":{}},"body":{"modules/AmountSelectorModule.html":{},"modules/CheckoutModule.html":{},"modules/ProductPageModule.html":{},"index.html":{},"modules.html":{}}}],["android",{"_index":2308,"title":{},"body":{"dependencies.html":{}}}],["angular/animations",{"_index":2287,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2289,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/cdk/portal",{"_index":1144,"title":{},"body":{"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{}}}],["angular/common",{"_index":172,"title":{},"body":{"modules/AdminModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AuthModule.html":{},"modules/AuthStoreModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ChefStoreModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/OrderingStoreModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementStoreModule.html":{},"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurantService.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":219,"title":{},"body":{"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurnatStoreAuthEffects.html":{}}}],["angular/fire/database",{"_index":609,"title":{},"body":{"modules/AuthModule.html":{}}}],["angular/fire/firestore",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChefService.html":{},"components/GroupEditorComponent.html":{},"injectables/OrderingService.html":{},"injectables/ResourceManagementService.html":{},"injectables/RestaurantService.html":{}}}],["angular/fire/storage",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"injectables/ResourceManagementService.html":{}}}],["angular/forms",{"_index":587,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"modules/ResourceManagementModule.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/UserAuthComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2292,"title":{},"body":{"dependencies.html":{}}}],["angular/material/dialog",{"_index":1106,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/StatusModifierComponent.html":{}}}],["angular/material/form",{"_index":612,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResourceManagementModule.html":{}}}],["angular/material/icon",{"_index":614,"title":{},"body":{"modules/AuthModule.html":{}}}],["angular/material/input",{"_index":616,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResourceManagementModule.html":{}}}],["angular/material/radio",{"_index":1052,"title":{},"body":{"modules/ChefModule.html":{}}}],["angular/material/select",{"_index":175,"title":{},"body":{"modules/AdminModule.html":{},"modules/ResourceManagementModule.html":{}}}],["angular/material/sidenav",{"_index":1131,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["angular/material/snack",{"_index":2135,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["angular/material/tabs",{"_index":618,"title":{},"body":{"modules/AuthModule.html":{}}}],["angular/material/tree",{"_index":1133,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/platform",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":220,"title":{},"body":{"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthStoreEffects.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/CoreModule.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"modules/OrderingRoutingModule.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementRoutingModule.html":{},"guards/ResourcesLoadedGuard.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"components/TableEditorComponent.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":201,"title":{},"body":{"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurnatStoreAuthEffects.html":{}}}],["angularfireauthguard",{"_index":249,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["angularfireauthmodule",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabasemodule",{"_index":608,"title":{},"body":{"modules/AuthModule.html":{}}}],["angularfiremodule",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestorage",{"_index":1793,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["angularfirestoragemodule",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":1064,"title":{},"body":{"injectables/ChefService.html":{},"components/GroupEditorComponent.html":{},"injectables/OrderingService.html":{},"injectables/ResourceManagementService.html":{},"injectables/RestaurantService.html":{}}}],["angularfirestoremodule",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["animated",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["animations",{"_index":1170,"title":{},"body":{"components/ExpansionPanelComponent.html":{}}}],["app",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["app.component",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":94,"title":{"components/AppComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["appmodule",{"_index":462,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":467,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":223,"title":{"interfaces/AppState.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["areresourcesloaded",{"_index":574,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"guards/ResourcesLoadedGuard.html":{},"interfaces/RestaurantState.html":{}}}],["array",{"_index":1349,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["askconfirmation",{"_index":1368,"title":{},"body":{"components/ModifyComponent.html":{}}}],["askconfirmation(config",{"_index":1377,"title":{},"body":{"components/ModifyComponent.html":{}}}],["assets/i18n",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":843,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["async)?.name",{"_index":841,"title":{},"body":{"components/CheckoutComponent.html":{},"components/TableSelectorComponent.html":{}}}],["attachimage",{"_index":1583,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["attachimage(event",{"_index":1590,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["audio",{"_index":1008,"title":{},"body":{"components/ChefComponent.html":{}}}],["audio(\"assets/sounds/notification_decorative",{"_index":1009,"title":{},"body":{"components/ChefComponent.html":{}}}],["audio.load",{"_index":1011,"title":{},"body":{"components/ChefComponent.html":{}}}],["audio.play",{"_index":1012,"title":{},"body":{"components/ChefComponent.html":{}}}],["auth",{"_index":97,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"interfaces/ChefState.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"interfaces/OrderingState.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"interfaces/ResourceManagementState.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantState.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["auth'},{'name",{"_index":135,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["auth.actions",{"_index":709,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["auth.component",{"_index":621,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["auth.component.html",{"_index":1917,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["auth.component.scss",{"_index":1916,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["auth.component.ts",{"_index":1915,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["auth.component.ts:17",{"_index":2267,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.component.ts:18",{"_index":1932,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["auth.component.ts:19",{"_index":1931,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["auth.component.ts:20",{"_index":1923,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.component.ts:23",{"_index":2264,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.component.ts:24",{"_index":1929,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.component.ts:29",{"_index":2265,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.component.ts:30",{"_index":1924,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.component.ts:34",{"_index":2263,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.component.ts:35",{"_index":1928,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.component.ts:39",{"_index":2266,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.component.ts:40",{"_index":1930,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.component.ts:43",{"_index":2262,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.component.ts:44",{"_index":1927,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.component.ts:69",{"_index":2261,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.component.ts:71",{"_index":1926,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.component.ts:79",{"_index":1934,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.effects",{"_index":728,"title":{},"body":{"modules/AuthStoreModule.html":{}}}],["auth.effects.ts",{"_index":2013,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["auth.effects.ts:12",{"_index":2020,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["auth.effects.ts:15",{"_index":2038,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["auth.effects.ts:26",{"_index":2024,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["auth.effects.ts:37",{"_index":2042,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["auth.effects.ts:45",{"_index":2028,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["auth.effects.ts:52",{"_index":2032,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["auth.reducer",{"_index":730,"title":{},"body":{"modules/AuthStoreModule.html":{}}}],["auth.restaurant.create",{"_index":1959,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.restaurant.create_restaurant",{"_index":1960,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.restaurant.error_wrong_password_or_restaurant",{"_index":1965,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.restaurant.join",{"_index":1963,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.restaurant.join_restaurant",{"_index":1964,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.restaurant.unexpected_error",{"_index":1962,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.restaurnat.password_min_char_length",{"_index":1955,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.restaurnat.password_placeholder",{"_index":1953,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.restaurnat.restaurant_name_min_char_length",{"_index":1952,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.restaurnat.restaurant_name_placeholder",{"_index":1950,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.restaurnat.restaurant_name_taken",{"_index":1961,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["auth.user.email_placeholder",{"_index":2274,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.user.error_email_format",{"_index":2280,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.user.error_email_is_taken",{"_index":2281,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.user.error_user_not_found",{"_index":2283,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.user.error_wrong_password",{"_index":2284,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.user.login",{"_index":2282,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.user.password_min_char_length",{"_index":2276,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.user.password_placeholder",{"_index":2275,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.user.register",{"_index":2278,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth.user.registeration",{"_index":2279,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["auth/restaurant",{"_index":620,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/RestaurantAuthComponent.html":{}}}],["auth/user",{"_index":626,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/UserAuthComponent.html":{}}}],["authentication",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authentication/restaurant",{"_index":715,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["autherror",{"_index":1918,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["authformcomponent",{"_index":96,"title":{"components/AuthFormComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["authformdata",{"_index":584,"title":{"interfaces/AuthFormData.html":{}},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["authguardpipe",{"_index":262,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["authmodule",{"_index":599,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"index.html":{},"modules.html":{}}}],["authorizationsuccess",{"_index":675,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["authreducer",{"_index":729,"title":{},"body":{"modules/AuthStoreModule.html":{},"miscellaneous/functions.html":{}}}],["authreducer(state",{"_index":2358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authroutingmodule",{"_index":604,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["authservice",{"_index":606,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"index.html":{}}}],["authstate",{"_index":561,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{}}}],["authstoreactions",{"_index":708,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"components/UserAuthComponent.html":{}}}],["authstoreactions.authsuccess",{"_index":713,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["authstoreactions.setisloading",{"_index":687,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["authstoreeffects",{"_index":673,"title":{"injectables/AuthStoreEffects.html":{}},"body":{"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["authstoremodule",{"_index":605,"title":{"modules/AuthStoreModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthStoreModule.html":{},"index.html":{},"modules.html":{}}}],["authstoreselectors",{"_index":1936,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["auto",{"_index":853,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableSelectorComponent.html":{}}}],["autofocus",{"_index":944,"title":{},"body":{"components/ChefComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{}}}],["available",{"_index":2247,"title":{},"body":{"components/TableSelectorComponent.html":{},"modules.html":{}}}],["availabletables",{"_index":2219,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["backdrop",{"_index":943,"title":{},"body":{"components/ChefComponent.html":{},"components/ModifyComponent.html":{}}}],["backdropclass",{"_index":942,"title":{},"body":{"components/ChefComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/ModifyComponent.html":{}}}],["background",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{}}}],["bar",{"_index":2136,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["behaviorsubject",{"_index":934,"title":{},"body":{"components/ChefComponent.html":{},"components/ProductEditorComponent.html":{}}}],["behaviorsubject(undefined",{"_index":928,"title":{},"body":{"components/ChefComponent.html":{},"components/ProductEditorComponent.html":{}}}],["between",{"_index":1034,"title":{},"body":{"components/ChefComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/ModifyComponent.html":{},"components/ProductPageComponent.html":{},"components/SnackbarComponent.html":{}}}],["bg",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/SidenavComponent.html":{},"components/TableSelectorComponent.html":{}}}],["bg2",{"_index":1036,"title":{},"body":{"components/ChefComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{}}}],["body",{"_index":1174,"title":{},"body":{"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{}}}],["bolder",{"_index":74,"title":{},"body":{"components/AccountComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductPageComponent.html":{}}}],["boolean",{"_index":572,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"components/ButtonOutlinedComponent.html":{},"components/ChefComponent.html":{},"interfaces/ChefState.html":{},"components/ConfirmationDialogComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/LoadResourcesComponent.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/OrderListItemComponent.html":{},"interfaces/OrderingState.html":{},"components/ProductEditorComponent.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"interfaces/SubNavigation.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":158,"title":{},"body":{"modules/AdminModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"index.html":{}}}],["border",{"_index":340,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{}}}],["bottom",{"_index":598,"title":{},"body":{"components/AuthFormComponent.html":{},"components/CheckoutComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/TableEditorComponent.html":{},"components/UserAuthComponent.html":{}}}],["box",{"_index":343,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{}}}],["breakpointobserver",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["breakpointstate",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":2392,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["buildnavigationdatafromgroups",{"_index":2332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildnavigationdatafromgroups(groups",{"_index":2360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["button",{"_index":72,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["buttonoutlinedcomponent",{"_index":99,"title":{"components/ButtonOutlinedComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["buttonoutlinedmodule",{"_index":165,"title":{"modules/ButtonOutlinedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/CoreModule.html":{},"modules/ResourceManagementModule.html":{},"index.html":{},"modules.html":{}}}],["canactivate",{"_index":260,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementRoutingModule.html":{},"guards/ResourcesLoadedGuard.html":{}}}],["canactivate(_next",{"_index":1903,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["cancel",{"_index":970,"title":{},"body":{"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ModifyComponent.html":{}}}],["capacitor/android",{"_index":2294,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":2296,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":1556,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["card'},{'name",{"_index":128,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["card.component",{"_index":1494,"title":{},"body":{"modules/OrderingModule.html":{}}}],["card.component.html",{"_index":1558,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["card.component.scss",{"_index":1557,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["card.component.ts",{"_index":1555,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["card.component.ts:10",{"_index":1562,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["card.component.ts:11",{"_index":1560,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["card.component.ts:13",{"_index":1561,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["card/product",{"_index":1493,"title":{},"body":{"modules/OrderingModule.html":{},"components/ProductCardComponent.html":{}}}],["cart",{"_index":565,"title":{"interfaces/Cart.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"components/ProductPageComponent.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{},"miscellaneous/functions.html":{}}}],["cart.items.length",{"_index":812,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cart.items.map(item",{"_index":813,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cartisempty",{"_index":835,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cartitem",{"_index":755,"title":{"interfaces/CartItem.html":{}},"body":{"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"components/ProductPageComponent.html":{},"miscellaneous/functions.html":{}}}],["cartitems",{"_index":2363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cartitems.map(item",{"_index":831,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["case",{"_index":1457,"title":{},"body":{"injectables/NavigationService.html":{}}}],["catcherror",{"_index":705,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["catcherror((_error",{"_index":1842,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["catcherror((error",{"_index":716,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["cd",{"_index":278,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["center",{"_index":58,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/CheckoutComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["central1",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["changedetection",{"_index":269,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductPageComponent.html":{}}}],["changedetectionstrategy",{"_index":284,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductPageComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":270,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductPageComponent.html":{}}}],["changedetectorref",{"_index":279,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["changesidenavmodeonscreensizechange",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["charts",{"_index":2305,"title":{},"body":{"dependencies.html":{}}}],["check_circle",{"_index":1029,"title":{},"body":{"components/ChefComponent.html":{}}}],["check_circle_outline",{"_index":1474,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["checkout",{"_index":758,"title":{},"body":{"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/OrderingRoutingModule.html":{}}}],["checkout'},{'name",{"_index":102,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["checkout.component",{"_index":889,"title":{},"body":{"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{}}}],["checkout.component.html",{"_index":760,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.component.scss",{"_index":759,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutcomponent",{"_index":101,"title":{"components/CheckoutComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["checkoutmodule",{"_index":881,"title":{"modules/CheckoutModule.html":{}},"body":{"modules/CheckoutModule.html":{},"index.html":{},"modules.html":{}}}],["checkoutroutingmodule",{"_index":885,"title":{"modules/CheckoutRoutingModule.html":{}},"body":{"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["chef",{"_index":551,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"injectables/NavigationService.html":{}}}],["chef'},{'name",{"_index":104,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["chef.actions",{"_index":1081,"title":{},"body":{"injectables/ChefStoreEffects.html":{}}}],["chef.component",{"_index":1057,"title":{},"body":{"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{}}}],["chef.component.html",{"_index":893,"title":{},"body":{"components/ChefComponent.html":{}}}],["chef.component.scss",{"_index":892,"title":{},"body":{"components/ChefComponent.html":{}}}],["chef.confirmation_dialog.action_cancel",{"_index":973,"title":{},"body":{"components/ChefComponent.html":{}}}],["chef.confirmation_dialog.action_confirm",{"_index":974,"title":{},"body":{"components/ChefComponent.html":{}}}],["chef.confirmation_dialog.text",{"_index":972,"title":{},"body":{"components/ChefComponent.html":{}}}],["chef.confirmation_dialog.title",{"_index":971,"title":{},"body":{"components/ChefComponent.html":{}}}],["chef.effects",{"_index":1083,"title":{},"body":{"modules/ChefStoreModule.html":{}}}],["chef.no_orders",{"_index":1030,"title":{},"body":{"components/ChefComponent.html":{}}}],["chef.reducer",{"_index":1085,"title":{},"body":{"modules/ChefStoreModule.html":{}}}],["chef.snackbar.action_label",{"_index":1001,"title":{},"body":{"components/ChefComponent.html":{}}}],["chef.snackbar.text",{"_index":996,"title":{},"body":{"components/ChefComponent.html":{}}}],["chef.status_modifier_dialog.action_close",{"_index":2189,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["chef.status_modifier_dialog.action_save",{"_index":2190,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["chef.status_modifier_dialog.order_item_status_preparing",{"_index":2187,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["chef.status_modifier_dialog.order_item_status_ready",{"_index":2188,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["chef.status_modifier_dialog.order_item_status_rejected",{"_index":2186,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["chef.status_modifier_dialog.title",{"_index":2185,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["chefcomponent",{"_index":103,"title":{"components/ChefComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["chefmodule",{"_index":1037,"title":{"modules/ChefModule.html":{}},"body":{"modules/ChefModule.html":{},"index.html":{},"modules.html":{}}}],["chefnavigationdata",{"_index":1451,"title":{},"body":{"injectables/NavigationService.html":{}}}],["chefreducer",{"_index":1084,"title":{},"body":{"modules/ChefStoreModule.html":{},"miscellaneous/functions.html":{}}}],["chefreducer(state",{"_index":2362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chefroutingmodule",{"_index":1043,"title":{"modules/ChefRoutingModule.html":{}},"body":{"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["chefservice",{"_index":1049,"title":{"injectables/ChefService.html":{}},"body":{"modules/ChefModule.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"index.html":{}}}],["chefstate",{"_index":577,"title":{"interfaces/ChefState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{}}}],["chefstoreactions",{"_index":940,"title":{},"body":{"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{}}}],["chefstoreactions.setisloading",{"_index":1078,"title":{},"body":{"injectables/ChefStoreEffects.html":{}}}],["chefstoreeffects",{"_index":1070,"title":{"injectables/ChefStoreEffects.html":{}},"body":{"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{}}}],["chefstoremodule",{"_index":1044,"title":{"modules/ChefStoreModule.html":{}},"body":{"modules/ChefModule.html":{},"modules/ChefStoreModule.html":{},"index.html":{},"modules.html":{}}}],["chefstoreselectores",{"_index":941,"title":{},"body":{"components/ChefComponent.html":{}}}],["class",{"_index":46,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurantService.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["close",{"_index":1115,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["cluster_adminmodule",{"_index":161,"title":{},"body":{"modules/AdminModule.html":{},"index.html":{}}}],["cluster_adminmodule_declarations",{"_index":162,"title":{},"body":{"modules/AdminModule.html":{},"index.html":{}}}],["cluster_adminmodule_imports",{"_index":163,"title":{},"body":{"modules/AdminModule.html":{},"index.html":{}}}],["cluster_amountselectormodule",{"_index":354,"title":{},"body":{"modules/AmountSelectorModule.html":{},"index.html":{}}}],["cluster_amountselectormodule_declarations",{"_index":355,"title":{},"body":{"modules/AmountSelectorModule.html":{},"index.html":{}}}],["cluster_amountselectormodule_exports",{"_index":356,"title":{},"body":{"modules/AmountSelectorModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authmodule",{"_index":600,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_declarations",{"_index":601,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_imports",{"_index":602,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_providers",{"_index":603,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_buttonoutlinedmodule",{"_index":745,"title":{},"body":{"modules/ButtonOutlinedModule.html":{},"index.html":{}}}],["cluster_buttonoutlinedmodule_declarations",{"_index":746,"title":{},"body":{"modules/ButtonOutlinedModule.html":{},"index.html":{}}}],["cluster_buttonoutlinedmodule_exports",{"_index":748,"title":{},"body":{"modules/ButtonOutlinedModule.html":{},"index.html":{}}}],["cluster_buttonoutlinedmodule_imports",{"_index":747,"title":{},"body":{"modules/ButtonOutlinedModule.html":{},"index.html":{}}}],["cluster_checkoutmodule",{"_index":882,"title":{},"body":{"modules/CheckoutModule.html":{},"index.html":{}}}],["cluster_checkoutmodule_declarations",{"_index":883,"title":{},"body":{"modules/CheckoutModule.html":{},"index.html":{}}}],["cluster_checkoutmodule_imports",{"_index":884,"title":{},"body":{"modules/CheckoutModule.html":{},"index.html":{}}}],["cluster_chefmodule",{"_index":1038,"title":{},"body":{"modules/ChefModule.html":{},"index.html":{}}}],["cluster_chefmodule_declarations",{"_index":1039,"title":{},"body":{"modules/ChefModule.html":{},"index.html":{}}}],["cluster_chefmodule_exports",{"_index":1041,"title":{},"body":{"modules/ChefModule.html":{},"index.html":{}}}],["cluster_chefmodule_imports",{"_index":1040,"title":{},"body":{"modules/ChefModule.html":{},"index.html":{}}}],["cluster_chefmodule_providers",{"_index":1042,"title":{},"body":{"modules/ChefModule.html":{},"index.html":{}}}],["cluster_confirmationdialogmodule",{"_index":1118,"title":{},"body":{"modules/ConfirmationDialogModule.html":{},"index.html":{}}}],["cluster_confirmationdialogmodule_declarations",{"_index":1119,"title":{},"body":{"modules/ConfirmationDialogModule.html":{},"index.html":{}}}],["cluster_confirmationdialogmodule_exports",{"_index":1120,"title":{},"body":{"modules/ConfirmationDialogModule.html":{},"index.html":{}}}],["cluster_coremodule",{"_index":1123,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_declarations",{"_index":1124,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_exports",{"_index":1126,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_imports",{"_index":1125,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_providers",{"_index":1127,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_dialogmodule",{"_index":1148,"title":{},"body":{"modules/DialogModule.html":{},"index.html":{}}}],["cluster_dialogmodule_providers",{"_index":1149,"title":{},"body":{"modules/DialogModule.html":{},"index.html":{}}}],["cluster_expansionpanelmodule",{"_index":1179,"title":{},"body":{"modules/ExpansionPanelModule.html":{},"index.html":{}}}],["cluster_expansionpanelmodule_declarations",{"_index":1180,"title":{},"body":{"modules/ExpansionPanelModule.html":{},"index.html":{}}}],["cluster_expansionpanelmodule_exports",{"_index":1181,"title":{},"body":{"modules/ExpansionPanelModule.html":{},"index.html":{}}}],["cluster_loadingindicatormodule",{"_index":1342,"title":{},"body":{"modules/LoadingIndicatorModule.html":{},"index.html":{}}}],["cluster_loadingindicatormodule_declarations",{"_index":1343,"title":{},"body":{"modules/LoadingIndicatorModule.html":{},"index.html":{}}}],["cluster_loadingindicatormodule_exports",{"_index":1344,"title":{},"body":{"modules/LoadingIndicatorModule.html":{},"index.html":{}}}],["cluster_orderingmodule",{"_index":1483,"title":{},"body":{"modules/OrderingModule.html":{},"index.html":{}}}],["cluster_orderingmodule_declarations",{"_index":1484,"title":{},"body":{"modules/OrderingModule.html":{},"index.html":{}}}],["cluster_orderingmodule_imports",{"_index":1485,"title":{},"body":{"modules/OrderingModule.html":{},"index.html":{}}}],["cluster_orderingmodule_providers",{"_index":1486,"title":{},"body":{"modules/OrderingModule.html":{},"index.html":{}}}],["cluster_productpagemodule",{"_index":1752,"title":{},"body":{"modules/ProductPageModule.html":{},"index.html":{}}}],["cluster_productpagemodule_declarations",{"_index":1753,"title":{},"body":{"modules/ProductPageModule.html":{},"index.html":{}}}],["cluster_productpagemodule_imports",{"_index":1754,"title":{},"body":{"modules/ProductPageModule.html":{}}}],["cluster_resourcemanagementmodule",{"_index":1770,"title":{},"body":{"modules/ResourceManagementModule.html":{},"index.html":{}}}],["cluster_resourcemanagementmodule_declarations",{"_index":1771,"title":{},"body":{"modules/ResourceManagementModule.html":{},"index.html":{}}}],["cluster_resourcemanagementmodule_imports",{"_index":1772,"title":{},"body":{"modules/ResourceManagementModule.html":{},"index.html":{}}}],["cluster_resourcemanagementmodule_providers",{"_index":1773,"title":{},"body":{"modules/ResourceManagementModule.html":{},"index.html":{}}}],["cluster_rootstoremodule",{"_index":2095,"title":{},"body":{"modules/RootStoreModule.html":{},"index.html":{}}}],["cluster_rootstoremodule_imports",{"_index":2096,"title":{},"body":{"modules/RootStoreModule.html":{},"index.html":{}}}],["cluster_snackbarmodule",{"_index":2162,"title":{},"body":{"modules/SnackbarModule.html":{},"index.html":{}}}],["cluster_snackbarmodule_declarations",{"_index":2163,"title":{},"body":{"modules/SnackbarModule.html":{},"index.html":{}}}],["cluster_snackbarmodule_exports",{"_index":2164,"title":{},"body":{"modules/SnackbarModule.html":{},"index.html":{}}}],["cluster_snackbarmodule_providers",{"_index":2165,"title":{},"body":{"modules/SnackbarModule.html":{},"index.html":{}}}],["collapse",{"_index":861,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["collection",{"_index":2383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["collection(`restaurants/${restaurantid}/orders",{"_index":1997,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["color",{"_index":69,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["column",{"_index":304,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{}}}],["columns",{"_index":1442,"title":{},"body":{"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{}}}],["combinelatest",{"_index":787,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoadResourcesComponent.html":{},"components/TableSelectorComponent.html":{}}}],["combinelatest([this.cart",{"_index":801,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["combinelatest([this.isloading",{"_index":1306,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["commonmodule",{"_index":171,"title":{},"body":{"modules/AdminModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AuthModule.html":{},"modules/AuthStoreModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ChefStoreModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/OrderingStoreModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementStoreModule.html":{},"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{}}}],["component",{"_index":0,"title":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthRoutingModule.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefRoutingModule.html":{},"components/ConfirmationDialogComponent.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingRoutingModule.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ResourceManagementRoutingModule.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["component_template",{"_index":83,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["componenttype",{"_index":1143,"title":{},"body":{"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{}}}],["concatmap",{"_index":706,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/OrderingStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["concatmap((response",{"_index":719,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["config",{"_index":991,"title":{},"body":{"components/ChefComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/ModifyComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["config).afterclosed",{"_index":1426,"title":{},"body":{"components/ModifyComponent.html":{}}}],["config.data",{"_index":2146,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["config.duration",{"_index":2147,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["config.panelclass",{"_index":2152,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["config.position.horizontal",{"_index":2149,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["config.position.vertical",{"_index":2151,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["confirm",{"_index":1095,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["confirmation",{"_index":106,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["confirmationdialogcomponent",{"_index":105,"title":{"components/ConfirmationDialogComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["confirmationdialogmodule",{"_index":1045,"title":{"modules/ConfirmationDialogModule.html":{}},"body":{"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/ResourceManagementModule.html":{},"index.html":{},"modules.html":{}}}],["confirmed",{"_index":978,"title":{},"body":{"components/ChefComponent.html":{},"components/ModifyComponent.html":{}}}],["confrim",{"_index":969,"title":{},"body":{"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ModifyComponent.html":{}}}],["const",{"_index":257,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefRoutingModule.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"modules/OrderingRoutingModule.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/UserAuthComponent.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"components/ConfirmationDialogComponent.html":{},"injectables/DialogService.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":2181,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["constructor(actions",{"_index":679,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/ChefStoreEffects.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["constructor(afauth",{"_index":200,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/AuthService.html":{}}}],["constructor(afs",{"_index":1063,"title":{},"body":{"injectables/ChefService.html":{},"injectables/OrderingService.html":{},"injectables/ResourceManagementService.html":{},"injectables/RestaurantService.html":{}}}],["constructor(data",{"_index":1096,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{}}}],["constructor(dialog",{"_index":1154,"title":{},"body":{"injectables/DialogService.html":{}}}],["constructor(platform",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":233,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["constructor(route",{"_index":1714,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["constructor(snackbar",{"_index":2171,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["constructor(store",{"_index":277,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["container",{"_index":53,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["content",{"_index":57,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["controldata.hint",{"_index":594,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["controldata.icon",{"_index":593,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["converttonaifempty",{"_index":1712,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["converttonaifempty(input",{"_index":1718,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["converttonaifempty(product.allergens",{"_index":1742,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["converttonaifempty(product.description",{"_index":1738,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["converttonaifempty(product.ingredients",{"_index":1740,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["converttonaifempty(product.preparationtime",{"_index":1744,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["converttoorder",{"_index":2335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converttoorder(cart",{"_index":805,"title":{},"body":{"components/CheckoutComponent.html":{},"miscellaneous/functions.html":{}}}],["converttoorderitems",{"_index":2337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converttoorderitems(cart.items",{"_index":822,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["converttoorderitems(cartitems",{"_index":830,"title":{},"body":{"components/CheckoutComponent.html":{},"miscellaneous/functions.html":{}}}],["cordova",{"_index":2307,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["core/load",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/models/app",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["core/sidenav/service/navigation.service",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["core/sidenav/sidenav",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["core/sidenav/sidenav.component",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["coremodule",{"_index":468,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["correspongingsubgroup",{"_index":1659,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["cover",{"_index":1571,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["create_restaurant_url",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{}}}],["createeffect",{"_index":682,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/ChefStoreEffects.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["createrestaurant",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["createrestaurant(undefined",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["createsubgroupformgroup",{"_index":1196,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["createsubgroupformgroup(subgroup",{"_index":1205,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["createtranslateloader",{"_index":520,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":507,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["credential",{"_index":66,"title":{},"body":{"components/AccountComponent.html":{}}}],["credentials.model",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["credentials.model.ts",{"_index":1971,"title":{},"body":{"interfaces/RestaurantCredentials.html":{},"interfaces/UserCredentials.html":{}}}],["curr",{"_index":816,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["currency",{"_index":292,"title":{},"body":{"components/AdminSettingsComponent.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"components/CheckoutComponent.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"interfaces/ResourceManagementState.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["currency:\"symbol",{"_index":844,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{}}}],["current",{"_index":2379,"title":{},"body":{"miscellaneous/functions.html":{}}}],["currentordersid",{"_index":894,"title":{},"body":{"components/ChefComponent.html":{}}}],["cursor",{"_index":351,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{}}}],["danger",{"_index":880,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["data",{"_index":261,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthStoreEffects.html":{},"components/ChefComponent.html":{},"modules/ChefRoutingModule.html":{},"components/ConfirmationDialogComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/ModifyComponent.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"interfaces/RestaurantAuthResponse.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{}}}],["data.actionname",{"_index":2138,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.actions.cancel",{"_index":1111,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["data.actions.confrim",{"_index":1112,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["data.model",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"injectables/NavigationService.html":{}}}],["data.model.ts",{"_index":2122,"title":{},"body":{"interfaces/SidenavData.html":{}}}],["data.optionaltext",{"_index":1110,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["data.status",{"_index":2183,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["data.subtext",{"_index":2137,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.text",{"_index":1109,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/SnackbarComponent.html":{}}}],["data.title",{"_index":1108,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["datas",{"_index":1455,"title":{},"body":{"injectables/NavigationService.html":{}}}],["datas/ordering.ts",{"_index":2359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datas/sidenav",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"injectables/NavigationService.html":{},"interfaces/SidenavData.html":{}}}],["date.now",{"_index":819,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["declarations",{"_index":157,"title":{},"body":{"modules/AdminModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthStoreModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ChefStoreModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/OrderingStoreModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementStoreModule.html":{},"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"index.html":{}}}],["decoration",{"_index":2120,"title":{},"body":{"components/SidenavComponent.html":{}}}],["decorators",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{}}}],["decrease",{"_index":312,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["default",{"_index":213,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/NavigationService.html":{},"components/OrderListItemComponent.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SidenavComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["default_currency_code",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultdata",{"_index":1452,"title":{},"body":{"injectables/NavigationService.html":{}}}],["defaultlanguage",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"components/ConfirmationDialogComponent.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"components/OrderListItemComponent.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["delete",{"_index":1431,"title":{},"body":{"components/ModifyComponent.html":{}}}],["deleted",{"_index":1852,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["deletegroup",{"_index":1369,"title":{},"body":{"components/ModifyComponent.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["deletegroup(group",{"_index":1379,"title":{},"body":{"components/ModifyComponent.html":{}}}],["deletegroup(id",{"_index":1802,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["deleteimage",{"_index":1790,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["deleteimage(imageurl",{"_index":1804,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["deleteproduct",{"_index":1370,"title":{},"body":{"components/ModifyComponent.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["deleteproduct(id",{"_index":1806,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["deleteproduct(product",{"_index":1381,"title":{},"body":{"components/ModifyComponent.html":{}}}],["deleteproductimage",{"_index":1835,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["deletetable",{"_index":1371,"title":{},"body":{"components/ModifyComponent.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["deletetable(id",{"_index":1808,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["deletetable(table",{"_index":1383,"title":{},"body":{"components/ModifyComponent.html":{}}}],["dependencies",{"_index":156,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"dependencies.html":{},"index.html":{}}}],["deps",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":1549,"title":{},"body":{"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{}}}],["details",{"_index":63,"title":{},"body":{"components/AccountComponent.html":{}}}],["devtools",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dialog",{"_index":939,"title":{},"body":{"components/ChefComponent.html":{},"modules/ChefModule.html":{},"components/ConfirmationDialogComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/ModifyComponent.html":{},"components/StatusModifierComponent.html":{}}}],["dialog'},{'name",{"_index":107,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["dialog.component",{"_index":1122,"title":{},"body":{"modules/ConfirmationDialogModule.html":{}}}],["dialog.component.html",{"_index":1092,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/StatusModifierComponent.html":{}}}],["dialog.component.scss",{"_index":1091,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/StatusModifierComponent.html":{}}}],["dialog.component.ts",{"_index":1090,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/StatusModifierComponent.html":{}}}],["dialog.component.ts:10",{"_index":2179,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["dialog.component.ts:12",{"_index":1102,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/StatusModifierComponent.html":{}}}],["dialog.component.ts:16",{"_index":2180,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["dialog.component.ts:18",{"_index":1103,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1100,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:9",{"_index":1099,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.module.ts",{"_index":1121,"title":{},"body":{"modules/ConfirmationDialogModule.html":{}}}],["dialog/confirmation",{"_index":1089,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{}}}],["dialog/status",{"_index":2177,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["dialogconfig",{"_index":935,"title":{"interfaces/DialogConfig.html":{}},"body":{"components/ChefComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/ModifyComponent.html":{}}}],["dialogdata",{"_index":966,"title":{},"body":{"components/ChefComponent.html":{}}}],["dialogmodule",{"_index":1046,"title":{"modules/DialogModule.html":{}},"body":{"modules/ChefModule.html":{},"modules/DialogModule.html":{},"modules/ResourceManagementModule.html":{},"index.html":{},"modules.html":{}}}],["dialogref",{"_index":1094,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/StatusModifierComponent.html":{}}}],["dialogservice",{"_index":906,"title":{"injectables/DialogService.html":{}},"body":{"components/ChefComponent.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ModifyComponent.html":{},"index.html":{}}}],["direction",{"_index":303,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{}}}],["directive",{"_index":81,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["directives",{"_index":148,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["disabled",{"_index":346,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/TableSelectorComponent.html":{}}}],["dispatch",{"_index":1541,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["display",{"_index":54,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["distinctuntilchanged",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["done",{"_index":979,"title":{},"body":{"components/ChefComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{}}}],["duration",{"_index":994,"title":{},"body":{"components/ChefComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":2293,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":1430,"title":{},"body":{"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductEditorComponent.html":{}}}],["editgroup",{"_index":1372,"title":{},"body":{"components/ModifyComponent.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["editgroup(group",{"_index":1385,"title":{},"body":{"components/ModifyComponent.html":{},"injectables/ResourceManagementService.html":{}}}],["edititemstatus",{"_index":898,"title":{},"body":{"components/ChefComponent.html":{}}}],["edititemstatus(orderitem",{"_index":910,"title":{},"body":{"components/ChefComponent.html":{}}}],["editor",{"_index":1191,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"modules/ResourceManagementRoutingModule.html":{},"components/TableEditorComponent.html":{}}}],["editor'},{'name",{"_index":113,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["editor.component",{"_index":1779,"title":{},"body":{"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["editor.component.html",{"_index":1193,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["editor.component.scss",{"_index":1192,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["editor.component.ts",{"_index":1190,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["editor.component.ts:101",{"_index":1220,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["editor.component.ts:109",{"_index":1604,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:115",{"_index":1597,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:131",{"_index":1613,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:148",{"_index":1594,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":2199,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["editor.component.ts:19",{"_index":1216,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":1608,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["editor.component.ts:21",{"_index":1215,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["editor.component.ts:22",{"_index":1214,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["editor.component.ts:23",{"_index":1203,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":1610,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:25",{"_index":1611,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":1606,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":1210,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{}}}],["editor.component.ts:28",{"_index":1607,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":1609,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:30",{"_index":1605,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["editor.component.ts:31",{"_index":1589,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:32",{"_index":1213,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["editor.component.ts:34",{"_index":2198,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["editor.component.ts:35",{"_index":1600,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:40",{"_index":1204,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":2195,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":1601,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":1212,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["editor.component.ts:46",{"_index":1599,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":1602,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:53",{"_index":1218,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["editor.component.ts:57",{"_index":1207,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":2197,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["editor.component.ts:65",{"_index":1591,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:66",{"_index":2201,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":1209,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["editor.component.ts:80",{"_index":1592,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts:89",{"_index":1206,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["editor.component.ts:98",{"_index":1598,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor/group",{"_index":1189,"title":{},"body":{"components/GroupEditorComponent.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["editor/product",{"_index":1576,"title":{},"body":{"components/ProductEditorComponent.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["editor/table",{"_index":1784,"title":{},"body":{"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"components/TableEditorComponent.html":{}}}],["editproduct",{"_index":1373,"title":{},"body":{"components/ModifyComponent.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["editproduct(product",{"_index":1387,"title":{},"body":{"components/ModifyComponent.html":{},"injectables/ResourceManagementService.html":{}}}],["edittable",{"_index":1374,"title":{},"body":{"components/ModifyComponent.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["edittable(table",{"_index":1389,"title":{},"body":{"components/ModifyComponent.html":{},"injectables/ResourceManagementService.html":{}}}],["effects",{"_index":1529,"title":{},"body":{"modules/OrderingStoreModule.html":{},"modules/RestaurantStoreModule.html":{}}}],["effectsmodule",{"_index":726,"title":{},"body":{"modules/AuthStoreModule.html":{},"modules/ChefStoreModule.html":{},"modules/OrderingStoreModule.html":{},"modules/ResourceManagementStoreModule.html":{},"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{}}}],["effectsmodule.forfeature([authstoreeffects",{"_index":732,"title":{},"body":{"modules/AuthStoreModule.html":{}}}],["effectsmodule.forfeature([chefstoreeffects",{"_index":1087,"title":{},"body":{"modules/ChefStoreModule.html":{}}}],["effectsmodule.forfeature([orderingstoreeffects",{"_index":1533,"title":{},"body":{"modules/OrderingStoreModule.html":{}}}],["effectsmodule.forfeature([resourcemanagementstoreeffects",{"_index":1892,"title":{},"body":{"modules/ResourceManagementStoreModule.html":{}}}],["effectsmodule.forfeature([restaurnatstoreautheffects",{"_index":2011,"title":{},"body":{"modules/RestaurantStoreModule.html":{}}}],["effectsmodule.forroot",{"_index":2098,"title":{},"body":{"modules/RootStoreModule.html":{}}}],["element",{"_index":80,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["ellipsis",{"_index":1438,"title":{},"body":{"components/ModifyComponent.html":{}}}],["email",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{}}}],["empty",{"_index":2084,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["end",{"_index":1113,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{}}}],["entrycomponents",{"_index":513,"title":{},"body":{"modules/AppModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/SnackbarModule.html":{}}}],["environment",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.production",{"_index":527,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment.prod",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":575,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"interfaces/ChefState.html":{},"components/LoadResourcesComponent.html":{},"interfaces/OrderingState.html":{},"components/ProductEditorComponent.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantState.html":{},"components/UserAuthComponent.html":{}}}],["error.error",{"_index":723,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["eur",{"_index":299,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["event",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/ProductEditorComponent.html":{}}}],["event.target.files[0",{"_index":1627,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["eventemitter",{"_index":37,"title":{},"body":{"components/AccountComponent.html":{},"components/AmountSelectorComponent.html":{}}}],["events",{"_index":1341,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["expand.animation",{"_index":1169,"title":{},"body":{"components/ExpansionPanelComponent.html":{}}}],["expand_less",{"_index":1171,"title":{},"body":{"components/ExpansionPanelComponent.html":{}}}],["expand_more",{"_index":1172,"title":{},"body":{"components/ExpansionPanelComponent.html":{}}}],["expandanimation",{"_index":1168,"title":{},"body":{"components/ExpansionPanelComponent.html":{}}}],["expansion",{"_index":109,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["expansionpanelcomponent",{"_index":108,"title":{"components/ExpansionPanelComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["expansionpanelmodule",{"_index":1047,"title":{"modules/ExpansionPanelModule.html":{}},"body":{"modules/ChefModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/ResourceManagementModule.html":{},"index.html":{},"modules.html":{}}}],["export",{"_index":45,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{}}}],["exports",{"_index":160,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"index.html":{}}}],["failed",{"_index":1329,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["failedresources",{"_index":573,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"components/LoadResourcesComponent.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["false",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthStoreEffects.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/LoadResourcesComponent.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"interfaces/RestaurantAuthResponse.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["fc78f.cloudfunctions.net/createrestaurant",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["fc78f.cloudfunctions.net/joinrestaurant",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["field",{"_index":596,"title":{},"body":{"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/GroupEditorComponent.html":{},"modules/ResourceManagementModule.html":{},"components/TableEditorComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{}}}],["fileformaterror",{"_index":1577,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["filereader",{"_index":1640,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["files",{"_index":1626,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["filetype",{"_index":2364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filetype.search(/image/gi",{"_index":1671,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["filter",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ChefComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductPageComponent.html":{}}}],["filter(([isloading",{"_index":1307,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["filter((event",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["filter((language",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["filter((orders",{"_index":1020,"title":{},"body":{"components/ChefComponent.html":{}}}],["filter(productid",{"_index":1733,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["filtercriteria",{"_index":1706,"title":{},"body":{"components/ProductListComponent.html":{}}}],["filteredsubgroups",{"_index":1578,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["filterproducts",{"_index":1692,"title":{},"body":{"components/ProductListComponent.html":{}}}],["firebase",{"_index":2313,"title":{},"body":{"dependencies.html":{}}}],["first",{"_index":788,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ProductEditorComponent.html":{}}}],["fixed",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["flex",{"_index":55,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["flow",{"_index":1684,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["font",{"_index":75,"title":{},"body":{"components/AccountComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["footer",{"_index":1575,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["form",{"_index":581,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/UserAuthComponent.html":{}}}],["form'},{'name",{"_index":98,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["form.component",{"_index":619,"title":{},"body":{"modules/AuthModule.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["form.component.html",{"_index":583,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{}}}],["form.component.scss",{"_index":582,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{}}}],["form.component.ts",{"_index":580,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{}}}],["form.component.ts:23",{"_index":585,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.controls.email.value",{"_index":2277,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["form.controls.password.value",{"_index":1957,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["form.controls.restaurantname.value",{"_index":1956,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["form/auth",{"_index":579,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"interfaces/FormControlData.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["formarray",{"_index":1222,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["formcontrol",{"_index":1223,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/UserAuthComponent.html":{}}}],["formcontrol(group",{"_index":1253,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["formcontrol(product",{"_index":1646,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["formcontrol(subgroup.id",{"_index":1256,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["formcontrol(subgroup.name",{"_index":1257,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["formcontrol(table",{"_index":2211,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["formcontrol(this.afs.createid",{"_index":1258,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["formcontroldata",{"_index":589,"title":{"interfaces/FormControlData.html":{}},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{}}}],["formcontrols",{"_index":588,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["formgroup",{"_index":586,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/UserAuthComponent.html":{}}}],["forminitializer",{"_index":1197,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["from(this.afauth.auth.createuserwithemailandpassword(email",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afauth.auth.signinwithemailandpassword(email",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afs.doc(`restaurants/${restaurantid}/groups/${group.id}`).update(group",{"_index":1821,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["from(this.afs.doc(`restaurants/${restaurantid}/groups/${id}`).delete",{"_index":1822,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["from(this.afs.doc(`restaurants/${restaurantid}/groups/${id}`).set",{"_index":1820,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["from(this.afs.doc(`restaurants/${restaurantid}/orders/${order.id}`).set(order",{"_index":1509,"title":{},"body":{"injectables/OrderingService.html":{}}}],["from(this.afs.doc(`restaurants/${restaurantid}/products/${id}`).delete",{"_index":1830,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["from(this.afs.doc(`restaurants/${restaurantid}/products/${id}`).set",{"_index":1823,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["from(this.afs.doc(`restaurants/${restaurantid}/products/${product.id}`).update(product",{"_index":1829,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["from(this.afs.doc(`restaurants/${restaurantid}/tables/${id}`).delete",{"_index":1819,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["from(this.afs.doc(`restaurants/${restaurantid}/tables/${id}`).set",{"_index":1817,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["from(this.afs.doc(`restaurants/${restaurantid}/tables/${table.id}`).update(table",{"_index":1818,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["from(this.afstorage.storage.reffromurl(imageurl).delete",{"_index":1831,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["from(this.localstorage.get(\"restaurant\")).pipe",{"_index":2022,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["from(this.localstorage.remove(\"restaurant\")).pipe(map",{"_index":2026,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["from(this.localstorage.set(\"restaurant",{"_index":2035,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["full",{"_index":265,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["function",{"_index":506,"title":{},"body":{"modules/AppModule.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{}}}],["functions",{"_index":2316,"title":{"miscellaneous/functions.html":{}},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["generateid",{"_index":2339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generateid(timestamp",{"_index":820,"title":{},"body":{"components/CheckoutComponent.html":{},"miscellaneous/functions.html":{}}}],["getcorrespondinggroup",{"_index":1584,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["getcorrespondinggroup(subgroupid",{"_index":1593,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["getgroup",{"_index":1219,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["getgroups",{"_index":1973,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["getgroups(restaurantid",{"_index":1979,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["getnavdata",{"_index":1445,"title":{},"body":{"injectables/NavigationService.html":{}}}],["getnavdata(modulename",{"_index":1447,"title":{},"body":{"injectables/NavigationService.html":{}}}],["getneworders",{"_index":899,"title":{},"body":{"components/ChefComponent.html":{}}}],["getorderingnavigationdata",{"_index":1453,"title":{},"body":{"injectables/NavigationService.html":{},"miscellaneous/functions.html":{}}}],["getorderingnavigationdata(groups",{"_index":1461,"title":{},"body":{"injectables/NavigationService.html":{},"miscellaneous/functions.html":{}}}],["getordersbystatus",{"_index":1974,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["getordersbystatus(status",{"_index":1981,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["getproduct",{"_index":1612,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["getproducts",{"_index":1975,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["getproducts(restaurantid",{"_index":1983,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["getrestaurantcredentials",{"_index":1920,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["getrestaurantcredentials(form",{"_index":1925,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["getsettings",{"_index":1976,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["getsettings(restaurantid",{"_index":1985,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["getsubgroupcontrolls",{"_index":1217,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["gettable",{"_index":2200,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["gettables",{"_index":1977,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["gettables(restaurantid",{"_index":1987,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["getusercredentials",{"_index":2256,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["getusercredentials(form",{"_index":2260,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["getuserid",{"_index":1933,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["graph",{"_index":2393,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":867,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["grid",{"_index":1441,"title":{},"body":{"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{}}}],["group",{"_index":112,"title":{"interfaces/Group.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"interfaces/ChefState.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"interfaces/OrderingState.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"interfaces/Subgroup.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["group.id",{"_index":1414,"title":{},"body":{"components/ModifyComponent.html":{}}}],["group.name",{"_index":1254,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{}}}],["group.subgroups.find((subgroup",{"_index":1660,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["group.subgroups.foreach((subgroup",{"_index":1249,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{}}}],["group.subgroups.map((subgroup",{"_index":1424,"title":{},"body":{"components/ModifyComponent.html":{}}}],["group.subgroups.some((subgroup",{"_index":1669,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["groupeditorcomponent",{"_index":111,"title":{"components/GroupEditorComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["groupname",{"_index":1252,"title":{},"body":{"components/GroupEditorComponent.html":{},"interfaces/Product.html":{},"components/ProductEditorComponent.html":{}}}],["groups",{"_index":568,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"interfaces/OrderingState.html":{},"components/ProductEditorComponent.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"miscellaneous/functions.html":{}}}],["groups.foreach((group",{"_index":1637,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["grouptoedit",{"_index":1194,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["guard",{"_index":251,"title":{"guards/RedirectIfFullyAuthenticated.html":{},"guards/ResourcesLoadedGuard.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["guards",{"_index":1756,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{},"guards/ResourcesLoadedGuard.html":{},"index.html":{}}}],["h2",{"_index":2246,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["h5",{"_index":1332,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["hammerjs",{"_index":2318,"title":{},"body":{"dependencies.html":{}}}],["handlerestaurantauth",{"_index":718,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["handleuserauth",{"_index":712,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["hasbackdrop",{"_index":1140,"title":{},"body":{"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{}}}],["hasiteminpreparingstatus",{"_index":900,"title":{},"body":{"components/ChefComponent.html":{}}}],["hasiteminpreparingstatus(order",{"_index":913,"title":{},"body":{"components/ChefComponent.html":{}}}],["hastruefield",{"_index":2340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hastruefield(failedresources",{"_index":1308,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["hastruefield(isloading",{"_index":1309,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["hastruefield(object",{"_index":1316,"title":{},"body":{"components/LoadResourcesComponent.html":{},"miscellaneous/functions.html":{}}}],["header",{"_index":1173,"title":{},"body":{"components/ExpansionPanelComponent.html":{}}}],["height",{"_index":61,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/GroupEditorComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["hidden",{"_index":1439,"title":{},"body":{"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{}}}],["hint",{"_index":592,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["horizontal",{"_index":992,"title":{},"body":{"components/ChefComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["horizontalposition",{"_index":2148,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["host",{"_index":302,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableSelectorComponent.html":{}}}],["hover",{"_index":1035,"title":{},"body":{"components/ChefComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/SnackbarComponent.html":{}}}],["html",{"_index":79,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["http",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["httpclient",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["httpclientmodule",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["httpparams",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set(\"name",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://us",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["huf",{"_index":298,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["hun",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":591,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"interfaces/SubNavigation.html":{},"components/UserAuthComponent.html":{}}}],["icons",{"_index":348,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductPageComponent.html":{}}}],["id",{"_index":566,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"interfaces/ChefState.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"interfaces/OrderingState.html":{},"interfaces/Product.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{}}}],["image",{"_index":1568,"title":{},"body":{"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["imageloading",{"_index":1579,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["imagepath",{"_index":1550,"title":{},"body":{"interfaces/Product.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["imagepreviewsrc",{"_index":1580,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["imageref",{"_index":1824,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["imageref.getdownloadurl",{"_index":1828,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["imagerequirederror",{"_index":1581,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["imageurl",{"_index":1419,"title":{},"body":{"components/ModifyComponent.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["img",{"_index":1570,"title":{},"body":{"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["import(\\\"./admin/admin.module\\\").then(m",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import(\\\"./auth/auth.module\\\").then(m",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import(\\\"./checkout\\\").then(m",{"_index":1503,"title":{},"body":{"modules/OrderingRoutingModule.html":{}}}],["import(\\\"./chef/chef.module\\\").then(m",{"_index":552,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import(\\\"./ordering/ordering.module\\\").then(m",{"_index":549,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import(\\\"./resource",{"_index":544,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/AuthStoreModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"modules/ChefStoreModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/OrderingStoreModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"modules/ResourceManagementStoreModule.html":{},"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{}}}],["increase",{"_index":313,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"components/ButtonOutlinedComponent.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"components/ConfirmationDialogComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indicator",{"_index":1336,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator'},{'name",{"_index":116,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["indicator.component",{"_index":1346,"title":{},"body":{"modules/LoadingIndicatorModule.html":{}}}],["indicator.component.scss",{"_index":1337,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.svg",{"_index":1338,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":1335,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:9",{"_index":1340,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.module",{"_index":752,"title":{},"body":{"modules/ButtonOutlinedModule.html":{},"modules/ChefModule.html":{},"modules/CoreModule.html":{},"modules/OrderingModule.html":{},"modules/ResourceManagementModule.html":{}}}],["indicator.module.ts",{"_index":1345,"title":{},"body":{"modules/LoadingIndicatorModule.html":{}}}],["indicator/loading",{"_index":751,"title":{},"body":{"modules/ButtonOutlinedModule.html":{},"modules/ChefModule.html":{},"modules/CoreModule.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/ResourceManagementModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{}}}],["ingredients",{"_index":1551,"title":{},"body":{"interfaces/Product.html":{},"components/ProductEditorComponent.html":{}}}],["inherit",{"_index":2119,"title":{},"body":{"components/SidenavComponent.html":{}}}],["initcurrency",{"_index":762,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{}}}],["initcurrentordersid",{"_index":901,"title":{},"body":{"components/ChefComponent.html":{}}}],["initform",{"_index":1198,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["initform(group",{"_index":1208,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["initform(product",{"_index":1596,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["initform(table",{"_index":2196,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["initializeapp",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["initialvalue",{"_index":314,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["initpath",{"_index":198,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["initproduct",{"_index":1713,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["initredirecturl",{"_index":1275,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["initrestaurantformdata",{"_index":1921,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["initrestaurantname",{"_index":199,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["initsidenavdata",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["initsubgroups",{"_index":1585,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["inittables",{"_index":2221,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["inittotalamount",{"_index":763,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["inituserformdata",{"_index":2257,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["inject",{"_index":1104,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1101,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/StatusModifierComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":2131,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["injectable",{"_index":632,"title":{"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"injectables/DialogService.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"injectables/SnackbarService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["injectables",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"injectables/DialogService.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"injectables/SnackbarService.html":{},"index.html":{}}}],["injectiontoken",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["injectiontoken(\"defaultcurrency",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["inner",{"_index":2113,"title":{},"body":{"components/SidenavComponent.html":{}}}],["input",{"_index":42,"title":{},"body":{"components/AccountComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"components/ButtonOutlinedComponent.html":{},"interfaces/FormControlData.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["inputs",{"_index":24,"title":{},"body":{"components/AccountComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/SidenavComponent.html":{}}}],["instanceof",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["interface",{"_index":556,"title":{"interfaces/AppState.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthState.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"interfaces/ChefState.html":{},"interfaces/DialogConfig.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"interfaces/OrderingState.html":{},"interfaces/Product.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"interfaces/RestaurantState.html":{},"interfaces/SidenavData.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"interfaces/UserCredentials.html":{}},"body":{"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"interfaces/ChefState.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"interfaces/OrderingState.html":{},"interfaces/Product.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"interfaces/RestaurantState.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"interfaces/UserCredentials.html":{}}}],["interfaces",{"_index":557,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthState.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"interfaces/ChefState.html":{},"interfaces/DialogConfig.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"interfaces/OrderingState.html":{},"interfaces/Product.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"interfaces/RestaurantState.html":{},"interfaces/SidenavData.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"interfaces/UserCredentials.html":{},"index.html":{}}}],["ionic",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["ionic/storage",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicmodule.forroot",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["isimagetype",{"_index":2342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isimagetype(event.target.files[0].type",{"_index":1628,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["isimagetype(filetype",{"_index":1670,"title":{},"body":{"components/ProductEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["isloading",{"_index":571,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"components/ChefComponent.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/OrderListItemComponent.html":{},"interfaces/OrderingState.html":{},"components/ProductEditorComponent.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"components/TableEditorComponent.html":{}}}],["isnull",{"_index":1760,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["isnull(restaurant.restaurantid",{"_index":1766,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["isundefined",{"_index":1761,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["isundefined(restaurant.restaurantid",{"_index":1767,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["item",{"_index":777,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/SidenavComponent.html":{}}}],["item'},{'name",{"_index":125,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["item.amount",{"_index":832,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["item.amount).reduce((total",{"_index":815,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["item.component",{"_index":1059,"title":{},"body":{"modules/ChefModule.html":{}}}],["item.component.html",{"_index":1470,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["item.component.scss",{"_index":1469,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["item.component.ts",{"_index":1468,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["item.component.ts:10",{"_index":1472,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["item.component.ts:11",{"_index":1471,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["item.component.ts:12",{"_index":1473,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["item.name",{"_index":961,"title":{},"body":{"components/ChefComponent.html":{}}}],["item.product",{"_index":798,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["item.product.name",{"_index":833,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["item.product.price",{"_index":814,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["item.status",{"_index":981,"title":{},"body":{"components/ChefComponent.html":{}}}],["item/order",{"_index":1058,"title":{},"body":{"modules/ChefModule.html":{},"components/OrderListItemComponent.html":{}}}],["itemalreadyincart",{"_index":2344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["itemalreadyincart(oldcart",{"_index":2366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["items",{"_index":60,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"miscellaneous/functions.html":{}}}],["itemtobeadded",{"_index":2367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jasmine",{"_index":2320,"title":{},"body":{"dependencies.html":{}}}],["join_restaurant_url",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["joinrestaurant",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{},"components/RestaurantAuthComponent.html":{}}}],["joinrestaurant(undefined",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["joinsubgroups",{"_index":1375,"title":{},"body":{"components/ModifyComponent.html":{}}}],["joinsubgroups(group",{"_index":1391,"title":{},"body":{"components/ModifyComponent.html":{}}}],["joinusertorestaurant",{"_index":676,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["js",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["justify",{"_index":56,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["key",{"_index":1317,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["knownorder",{"_index":2346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["knownorder(knownorderids",{"_index":1023,"title":{},"body":{"components/ChefComponent.html":{},"miscellaneous/functions.html":{}}}],["knownorder(this.currentordersid$.value",{"_index":1016,"title":{},"body":{"components/ChefComponent.html":{}}}],["knownorderid",{"_index":1026,"title":{},"body":{"components/ChefComponent.html":{}}}],["knownorderids",{"_index":2374,"title":{},"body":{"miscellaneous/functions.html":{}}}],["knownorderids.some((knownorderid",{"_index":1025,"title":{},"body":{"components/ChefComponent.html":{}}}],["label",{"_index":1687,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["language",{"_index":288,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["last",{"_index":1815,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["layout",{"_index":865,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["layoutmodule",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadResourcesComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["legend",{"_index":78,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"components/RestaurantAuthComponent.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"modules/SnackbarModule.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["light",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/ChefComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/SidenavComponent.html":{},"components/TableSelectorComponent.html":{}}}],["line",{"_index":1572,"title":{},"body":{"components/ProductCardComponent.html":{},"components/ProductPageComponent.html":{}}}],["list",{"_index":124,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["list'},{'name",{"_index":131,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["list.component",{"_index":1495,"title":{},"body":{"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{}}}],["list.component.html",{"_index":1691,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.scss",{"_index":1690,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts",{"_index":1689,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:16",{"_index":1702,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:17",{"_index":1701,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:18",{"_index":1694,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:22",{"_index":1698,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:27",{"_index":1697,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:31",{"_index":1700,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:35",{"_index":1696,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:41",{"_index":1695,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list/product",{"_index":1492,"title":{},"body":{"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"components/ProductCardComponent.html":{},"components/ProductListComponent.html":{}}}],["literal",{"_index":1097,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/ProductEditorComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantState.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"components/StatusModifierComponent.html":{}}}],["load",{"_index":118,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"modules/CoreModule.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["loadactiveorders",{"_index":2044,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["loadchildren",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/OrderingRoutingModule.html":{}}}],["loaded.guard",{"_index":256,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/CoreModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["loaded.guard.ts",{"_index":1901,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["loaded.guard.ts:10",{"_index":1902,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["loaded.guard.ts:13",{"_index":1906,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["loader",{"_index":498,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loadgroups",{"_index":2045,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["loading",{"_index":115,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["loading_resources.button_sign_out",{"_index":1328,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["loading_resources.button_try_again",{"_index":1327,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["loading_resources.could_not_load_resource",{"_index":1326,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["loading_resources.failed",{"_index":1325,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["loading_resources.loaded",{"_index":1324,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["loading_resources.resource_groups",{"_index":1322,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["loading_resources.resource_products",{"_index":1323,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["loading_resources.resource_table",{"_index":1321,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["loading_resources.title",{"_index":1320,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["loadingindicatorcomponent",{"_index":114,"title":{"components/LoadingIndicatorComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["loadingindicatormodule",{"_index":749,"title":{"modules/LoadingIndicatorModule.html":{}},"body":{"modules/ButtonOutlinedModule.html":{},"modules/ChefModule.html":{},"modules/CoreModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/ResourceManagementModule.html":{},"index.html":{},"modules.html":{}}}],["loadproducts",{"_index":2046,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["loadresourcesandsettings",{"_index":1276,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["loadresourcescomponent",{"_index":117,"title":{"components/LoadResourcesComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"modules/CoreModule.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["loadresourcessuccess",{"_index":2047,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["loadrestaurantfromlocalstorage",{"_index":2014,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["loadsettings",{"_index":2073,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["loadtables",{"_index":2048,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["localstorage",{"_index":2018,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["lock",{"_index":1954,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["lodash",{"_index":2323,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":2258,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["loginuser",{"_index":677,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["loginwithemailandpassword",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginwithemailandpassword(undefined",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["logonly",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["m.adminmodule",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.authmodule",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.checkoutmodule",{"_index":1504,"title":{},"body":{"modules/OrderingRoutingModule.html":{}}}],["m.chefmodule",{"_index":553,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.orderingmodule",{"_index":550,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.resourcemanagementmodule",{"_index":547,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":1352,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["mainnavigation",{"_index":1347,"title":{"interfaces/MainNavigation.html":{}},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["management",{"_index":543,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/NavigationService.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"modules/ResourceManagementStoreModule.html":{}}}],["management.actions",{"_index":1884,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["management.effects",{"_index":1885,"title":{},"body":{"modules/ResourceManagementStoreModule.html":{}}}],["management.effects.ts",{"_index":1834,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:115",{"_index":1875,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:128",{"_index":1868,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:13",{"_index":1836,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:141",{"_index":1856,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:154",{"_index":1858,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:16",{"_index":1849,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:29",{"_index":1872,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:42",{"_index":1861,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:55",{"_index":1844,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:68",{"_index":1864,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:81",{"_index":1853,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.effects.ts:94",{"_index":1883,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["management.module.ts",{"_index":1777,"title":{},"body":{"modules/ResourceManagementModule.html":{}}}],["management.module\\\").then(m",{"_index":546,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["management.reducer",{"_index":1887,"title":{},"body":{"modules/ResourceManagementStoreModule.html":{}}}],["management.reducer.ts",{"_index":2350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["management.service",{"_index":1782,"title":{},"body":{"modules/ResourceManagementModule.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["management.service.ts",{"_index":1786,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:10",{"_index":1794,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:13",{"_index":1801,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:18",{"_index":1812,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:22",{"_index":1809,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:26",{"_index":1796,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:31",{"_index":1810,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:35",{"_index":1803,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:39",{"_index":1798,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:44",{"_index":1814,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:55",{"_index":1811,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:59",{"_index":1807,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management.service.ts:63",{"_index":1805,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management/group",{"_index":1188,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts",{"_index":1364,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:101",{"_index":1388,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:105",{"_index":1392,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:109",{"_index":1378,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:27",{"_index":1395,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:28",{"_index":1394,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:29",{"_index":1376,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:33",{"_index":1393,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:39",{"_index":1384,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:57",{"_index":1380,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:75",{"_index":1382,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:93",{"_index":1390,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/modify/modify.component.ts:97",{"_index":1386,"title":{},"body":{"components/ModifyComponent.html":{}}}],["management/product",{"_index":1423,"title":{},"body":{"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["management/resource",{"_index":545,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["management/services/resource",{"_index":1785,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["management/store/resource",{"_index":1833,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"miscellaneous/functions.html":{}}}],["management/table",{"_index":1422,"title":{},"body":{"components/ModifyComponent.html":{},"components/TableEditorComponent.html":{}}}],["managemet",{"_index":1889,"title":{},"body":{"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["map",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/OrderingStoreEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{}}}],["map((activeorders",{"_index":2053,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["map((groups",{"_index":1636,"title":{},"body":{"components/ProductEditorComponent.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["map((imageurl",{"_index":1878,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["map((navstart",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["map((orders",{"_index":984,"title":{},"body":{"components/ChefComponent.html":{}}}],["map((params",{"_index":1240,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{}}}],["map((products",{"_index":2061,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["map((restaurant",{"_index":1765,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{},"injectables/RestaurnatStoreAuthEffects.html":{}}}],["map((tables",{"_index":2068,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["map(areresourcesloaded",{"_index":1910,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["map(cart",{"_index":811,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["map(params",{"_index":1732,"title":{},"body":{"components/ProductPageComponent.html":{},"components/TableEditorComponent.html":{}}}],["map(sortbyname",{"_index":1403,"title":{},"body":{"components/ModifyComponent.html":{}}}],["marbles",{"_index":2321,"title":{},"body":{"dependencies.html":{}}}],["margin",{"_index":338,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/AuthFormComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["markorderasdone",{"_index":902,"title":{},"body":{"components/ChefComponent.html":{}}}],["markorderasdone(order",{"_index":916,"title":{},"body":{"components/ChefComponent.html":{}}}],["mat",{"_index":595,"title":{},"body":{"components/AuthFormComponent.html":{},"components/GroupEditorComponent.html":{},"components/SidenavComponent.html":{},"components/TableEditorComponent.html":{}}}],["mat_dialog_data",{"_index":1105,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/StatusModifierComponent.html":{}}}],["mat_snack_bar_data",{"_index":2134,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["matching",{"_index":151,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["matdialog",{"_index":1145,"title":{},"body":{"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{}}}],["matdialogmodule",{"_index":1151,"title":{},"body":{"modules/DialogModule.html":{}}}],["matdialogref",{"_index":1098,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/StatusModifierComponent.html":{}}}],["material",{"_index":347,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductPageComponent.html":{}}}],["matformfieldmodule",{"_index":611,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResourceManagementModule.html":{}}}],["maticonmodule",{"_index":613,"title":{},"body":{"modules/AuthModule.html":{}}}],["matinputmodule",{"_index":615,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResourceManagementModule.html":{}}}],["matradiomodule",{"_index":1051,"title":{},"body":{"modules/ChefModule.html":{}}}],["matselectmodule",{"_index":174,"title":{},"body":{"modules/AdminModule.html":{},"modules/ResourceManagementModule.html":{}}}],["matsidenav",{"_index":1350,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["matsidenavmodule",{"_index":1130,"title":{},"body":{"modules/CoreModule.html":{}}}],["matsnackbar",{"_index":2142,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["matsnackbarmodule",{"_index":2167,"title":{},"body":{"modules/SnackbarModule.html":{}}}],["matsnackbarref",{"_index":2129,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["mattabsmodule",{"_index":617,"title":{},"body":{"modules/AuthModule.html":{}}}],["mattreemodule",{"_index":1132,"title":{},"body":{"modules/CoreModule.html":{}}}],["max",{"_index":857,"title":{},"body":{"components/CheckoutComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["maxage",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["maxheight",{"_index":1141,"title":{},"body":{"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{}}}],["maxvalue",{"_index":315,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["maxwidth",{"_index":1142,"title":{},"body":{"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{}}}],["media",{"_index":855,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["menu",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["merge",{"_index":1510,"title":{},"body":{"injectables/OrderingService.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["message",{"_index":1969,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"components/ConfirmationDialogComponent.html":{},"injectables/DialogService.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurantService.html":{},"components/SidenavComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["min",{"_index":1437,"title":{},"body":{"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["minvalue",{"_index":316,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["miscellaneous",{"_index":2330,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mode",{"_index":1359,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["models/app",{"_index":1294,"title":{},"body":{"components/LoadResourcesComponent.html":{},"injectables/NavigationService.html":{},"guards/ResourcesLoadedGuard.html":{}}}],["models/restaurant",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{},"components/RestaurantAuthComponent.html":{}}}],["models/user",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"components/UserAuthComponent.html":{}}}],["modifier",{"_index":142,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["modify",{"_index":1365,"title":{},"body":{"components/ModifyComponent.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["modify'},{'name",{"_index":121,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["modify.component.html",{"_index":1367,"title":{},"body":{"components/ModifyComponent.html":{}}}],["modify.component.scss",{"_index":1366,"title":{},"body":{"components/ModifyComponent.html":{}}}],["modify/modify.component",{"_index":1780,"title":{},"body":{"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["modifycomponent",{"_index":120,"title":{"components/ModifyComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["module",{"_index":153,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/AuthStoreModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"modules/ChefStoreModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/OrderingStoreModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"modules/ResourceManagementStoreModule.html":{},"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"index.html":{}}}],["modulename",{"_index":1449,"title":{},"body":{"injectables/NavigationService.html":{}}}],["modules",{"_index":155,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/AuthStoreModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"modules/ChefStoreModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/OrderingStoreModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"modules/ResourceManagementStoreModule.html":{},"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"index.html":{},"modules.html":{}}}],["mute",{"_index":895,"title":{},"body":{"components/ChefComponent.html":{}}}],["n/a",{"_index":1730,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["name",{"_index":84,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"components/ConfirmationDialogComponent.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"miscellaneous/functions.html":{}}}],["name).set(\"password",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["narrow\":\"0.2",{"_index":845,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{}}}],["native/core",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["native/splash",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nav",{"_index":2118,"title":{},"body":{"components/SidenavComponent.html":{}}}],["navigateto",{"_index":714,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"components/LoadResourcesComponent.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["navigationdata",{"_index":1358,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"interfaces/SubNavigation.html":{}}}],["navigationitem",{"_index":1351,"title":{"interfaces/NavigationItem.html":{}},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"interfaces/SubNavigation.html":{},"miscellaneous/functions.html":{}}}],["navigations",{"_index":2117,"title":{},"body":{"components/SidenavComponent.html":{}}}],["navigationservice",{"_index":380,"title":{"injectables/NavigationService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/NavigationService.html":{},"index.html":{}}}],["navigationstart",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem.main.name",{"_index":2108,"title":{},"body":{"components/SidenavComponent.html":{}}}],["navservice",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["navstart.url.split(\"/\")[1",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["new",{"_index":47,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["neworderid",{"_index":1017,"title":{},"body":{"components/ChefComponent.html":{}}}],["neworders",{"_index":988,"title":{},"body":{"components/ChefComponent.html":{}}}],["neworders$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((neworders",{"_index":990,"title":{},"body":{"components/ChefComponent.html":{}}}],["neworders.length",{"_index":998,"title":{},"body":{"components/ChefComponent.html":{}}}],["neworders.push(orders.find((order",{"_index":1018,"title":{},"body":{"components/ChefComponent.html":{}}}],["neworders[0].tablename",{"_index":999,"title":{},"body":{"components/ChefComponent.html":{}}}],["newordersid",{"_index":1014,"title":{},"body":{"components/ChefComponent.html":{}}}],["newordersid.foreach((neworderid",{"_index":1015,"title":{},"body":{"components/ChefComponent.html":{}}}],["ngmodule",{"_index":173,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/AuthStoreModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"modules/ChefStoreModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/OrderingStoreModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"modules/ResourceManagementStoreModule.html":{},"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{}}}],["ngondestroy",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AmountSelectorComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["ngrx/effects",{"_index":703,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":222,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":195,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["ngx",{"_index":177,"title":{},"body":{"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/SnackbarModule.html":{},"dependencies.html":{}}}],["none",{"_index":337,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{}}}],["noorders",{"_index":1027,"title":{},"body":{"components/ChefComponent.html":{}}}],["nowrap",{"_index":1440,"title":{},"body":{"components/ModifyComponent.html":{}}}],["null",{"_index":982,"title":{},"body":{"components/ChefComponent.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"components/UserAuthComponent.html":{}}}],["number",{"_index":321,"title":{},"body":{"components/AmountSelectorComponent.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/GroupEditorComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"interfaces/Product.html":{},"components/ProductPageComponent.html":{},"injectables/ResourceManagementService.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{}}}],["numberofseats",{"_index":1800,"title":{},"body":{"injectables/ResourceManagementService.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{}}}],["object",{"_index":1318,"title":{},"body":{"components/LoadResourcesComponent.html":{},"miscellaneous/functions.html":{}}}],["object.keys",{"_index":1289,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["object.values(object).find((value",{"_index":1319,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["objectkeys",{"_index":1273,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["observable",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["occupied",{"_index":2248,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["occupiedtablenames",{"_index":2237,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["occupiedtablenames.includes(table.name",{"_index":2240,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["occupiedtables",{"_index":2220,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["of(adminnavigationdata",{"_index":1458,"title":{},"body":{"injectables/NavigationService.html":{}}}],["of(authstoreactions.seterror",{"_index":717,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["of(chefnavigationdata",{"_index":1462,"title":{},"body":{"injectables/NavigationService.html":{}}}],["of(defaultdata",{"_index":1463,"title":{},"body":{"injectables/NavigationService.html":{}}}],["of(orderingstoreactions.openerrorsnackbar",{"_index":1524,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["of(resourcemanagementstoreactions.errorresponse",{"_index":1843,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["of(resourcemanagementstoreactions.errorresponse(error",{"_index":1882,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["of(resourcenavigationdata",{"_index":1459,"title":{},"body":{"injectables/NavigationService.html":{}}}],["of(restaurantstoreresourceactions.failedtoloadresource",{"_index":2055,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["of(this.afs.doc(`restaurants/${restaurantid}/orders/${order.id}`).update(order",{"_index":1069,"title":{},"body":{"injectables/ChefService.html":{}}}],["of(this.afs.doc(`settingsbyrestaurants/${restaurantid}`).update",{"_index":2001,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["oftype",{"_index":702,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/ChefStoreEffects.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["oftype(authstoreactions.authsuccess",{"_index":684,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["oftype(authstoreactions.createrestaurant",{"_index":689,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["oftype(authstoreactions.joinusertorestaurant",{"_index":693,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["oftype(authstoreactions.loginuser",{"_index":696,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["oftype(authstoreactions.registeruser",{"_index":699,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["oftype(chefstoreactions.updateorder",{"_index":1073,"title":{},"body":{"injectables/ChefStoreEffects.html":{}}}],["oftype(orderingstoreactions.addtocart",{"_index":1515,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["oftype(orderingstoreactions.openerrorsnackbar",{"_index":1539,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{}}}],["oftype(orderingstoreactions.opensuccesssnackbar",{"_index":1543,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{}}}],["oftype(orderingstoreactions.placeorder",{"_index":1519,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.addgroup",{"_index":1837,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.addproduct",{"_index":1876,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.addtable",{"_index":1845,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.deletegroup",{"_index":1850,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.deleteproduct",{"_index":1854,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.deletetable",{"_index":1859,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.editgroup",{"_index":1862,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.editproduct",{"_index":1865,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.edittable",{"_index":1869,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.errorresponse",{"_index":1895,"title":{},"body":{"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.saveproduct",{"_index":1873,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["oftype(resourcemanagementstoreactions.successresponse",{"_index":1898,"title":{},"body":{"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["oftype(restaurantstoreauthactions.loadrestaurantfromlocalstorage",{"_index":2021,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["oftype(restaurantstoreauthactions.removerestaurant",{"_index":2025,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["oftype(restaurantstoreauthactions.removesuccess",{"_index":2029,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["oftype(restaurantstoreauthactions.saverestauranttolocalstorage",{"_index":2033,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["oftype(restaurantstoreauthactions.signout",{"_index":2039,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["oftype(restaurantstoreresourceactions.loadresources",{"_index":2050,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["oftype(restaurantstoreresourceactions.loadresourcessuccess",{"_index":2064,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["oftype(restaurantstoresettingactions.loadrestaurantsettings",{"_index":2077,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["oftype(restaurantstoresettingactions.saverestaurantcurrency",{"_index":2086,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["oftype(restaurantstoresettingactions.saverestaurantlanguage",{"_index":2092,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["oldcart",{"_index":2368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["oldorder",{"_index":927,"title":{},"body":{"components/ChefComponent.html":{}}}],["olive",{"_index":71,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["ondestroy",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["onimageloaded",{"_index":1586,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AmountSelectorComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["onload",{"_index":1559,"title":{},"body":{"components/ProductCardComponent.html":{}}}],["opacity",{"_index":1116,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/SnackbarComponent.html":{}}}],["open",{"_index":1165,"title":{},"body":{"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{}}}],["opendefaulterrorsnackbar",{"_index":2168,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["opendefaulterrorsnackbar(subtext",{"_index":2158,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["opendefaultsuccesssnackbar",{"_index":2169,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["opendefaultsuccesssnackbar(subtext",{"_index":2153,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["opendialog",{"_index":1153,"title":{},"body":{"injectables/DialogService.html":{}}}],["opendialog(component",{"_index":1146,"title":{},"body":{"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{}}}],["opendialog(confirmationdialogcomponent",{"_index":976,"title":{},"body":{"components/ChefComponent.html":{}}}],["opendialog(statusmodifiercomponent",{"_index":953,"title":{},"body":{"components/ChefComponent.html":{}}}],["opened",{"_index":1361,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["openerrorsnackbar",{"_index":1536,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{}}}],["openprodcutpage",{"_index":1693,"title":{},"body":{"components/ProductListComponent.html":{}}}],["openprodcutpage(product",{"_index":1699,"title":{},"body":{"components/ProductListComponent.html":{}}}],["opensidenav",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["opensnackbar",{"_index":2170,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["opensnackbar(config",{"_index":2144,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["opensuccesssnackbar",{"_index":1537,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{}}}],["option",{"_index":2191,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["optional",{"_index":207,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"components/ConfirmationDialogComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/Subgroup.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"miscellaneous/functions.html":{}}}],["optionaltext",{"_index":968,"title":{},"body":{"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{}}}],["orange",{"_index":875,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/UserAuthComponent.html":{}}}],["order",{"_index":123,"title":{"interfaces/Order.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"interfaces/ResourceManagementState.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"miscellaneous/functions.html":{}}}],["order.id",{"_index":983,"title":{},"body":{"components/ChefComponent.html":{}}}],["order.items.map((item",{"_index":960,"title":{},"body":{"components/ChefComponent.html":{}}}],["order.items.some((item",{"_index":980,"title":{},"body":{"components/ChefComponent.html":{}}}],["order.tablename",{"_index":975,"title":{},"body":{"components/ChefComponent.html":{}}}],["orderid",{"_index":1024,"title":{},"body":{"components/ChefComponent.html":{},"miscellaneous/functions.html":{}}}],["ordering",{"_index":548,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"injectables/NavigationService.html":{},"modules/OrderingModule.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{}}}],["ordering.checkout.button_place_order",{"_index":847,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["ordering.checkout.empty_cart",{"_index":849,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["ordering.checkout.snackbar_fail_text",{"_index":1525,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["ordering.checkout.snackbar_success_text",{"_index":1522,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["ordering.checkout.table_footer_total_price",{"_index":842,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["ordering.checkout.table_header_amount",{"_index":837,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["ordering.checkout.table_header_name",{"_index":836,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["ordering.checkout.table_header_price_all",{"_index":839,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["ordering.checkout.table_header_price_per_unit",{"_index":838,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["ordering.checkout.table_not_selected",{"_index":848,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["ordering.product_list.product_card.ingredients",{"_index":1709,"title":{},"body":{"components/ProductListComponent.html":{}}}],["ordering.product_list.product_card.price",{"_index":1710,"title":{},"body":{"components/ProductListComponent.html":{}}}],["ordering.product_page.allergens",{"_index":1741,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["ordering.product_page.description",{"_index":1737,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["ordering.product_page.ingredients",{"_index":1739,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["ordering.product_page.no_product_found",{"_index":1748,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["ordering.product_page.preparation_time",{"_index":1743,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["ordering.product_page.preparation_time_unit",{"_index":1745,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["ordering.product_page.price",{"_index":1746,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["ordering.product_page.snackbar_success_text",{"_index":1517,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["ordering.reducer",{"_index":1531,"title":{},"body":{"modules/OrderingStoreModule.html":{}}}],["ordering.select_table.availalbe_tables",{"_index":2243,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["ordering.select_table.chosen_table",{"_index":2242,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["ordering.select_table.occupied_tables",{"_index":2245,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["ordering.select_table.table_number_of_seats",{"_index":2244,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["orderingmodule",{"_index":1482,"title":{"modules/OrderingModule.html":{}},"body":{"modules/OrderingModule.html":{},"index.html":{},"modules.html":{}}}],["orderingreducer",{"_index":1530,"title":{},"body":{"modules/OrderingStoreModule.html":{},"miscellaneous/functions.html":{}}}],["orderingreducer(state",{"_index":2369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["orderingroutingmodule",{"_index":1487,"title":{"modules/OrderingRoutingModule.html":{}},"body":{"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["orderingservice",{"_index":1490,"title":{"injectables/OrderingService.html":{}},"body":{"modules/OrderingModule.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"index.html":{}}}],["orderingstate",{"_index":562,"title":{"interfaces/OrderingState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{}}}],["orderingstoreactions",{"_index":789,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductPageComponent.html":{},"components/TableSelectorComponent.html":{}}}],["orderingstoreactions.opensuccesssnackbar",{"_index":1516,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["orderingstoreactions.ordersuccessfullyplaced",{"_index":1523,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["orderingstoreeffects",{"_index":1511,"title":{"injectables/OrderingStoreEffects.html":{}},"body":{"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{}}}],["orderingstoremodule",{"_index":1488,"title":{"modules/OrderingStoreModule.html":{}},"body":{"modules/OrderingModule.html":{},"modules/OrderingStoreModule.html":{},"index.html":{},"modules.html":{}}}],["orderingstoreselectors",{"_index":790,"title":{},"body":{"components/CheckoutComponent.html":{},"components/TableSelectorComponent.html":{}}}],["orderingstoreutilseffects",{"_index":1528,"title":{"injectables/OrderingStoreUtilsEffects.html":{}},"body":{"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{}}}],["orderitem",{"_index":784,"title":{"interfaces/OrderItem.html":{}},"body":{"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"miscellaneous/functions.html":{}}}],["orderitem.amount",{"_index":1477,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["orderitem.name",{"_index":962,"title":{},"body":{"components/ChefComponent.html":{},"components/OrderListItemComponent.html":{}}}],["orderitem.status",{"_index":954,"title":{},"body":{"components/ChefComponent.html":{}}}],["orderitemstatus",{"_index":933,"title":{},"body":{"components/ChefComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"miscellaneous/typealiases.html":{}}}],["orderlistitemcomponent",{"_index":122,"title":{"components/OrderListItemComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["orders",{"_index":896,"title":{},"body":{"components/ChefComponent.html":{}}}],["orders.length",{"_index":1021,"title":{},"body":{"components/ChefComponent.html":{}}}],["orders.map((order",{"_index":985,"title":{},"body":{"components/ChefComponent.html":{}}}],["out",{"_index":168,"title":{},"body":{"modules/AdminModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"index.html":{}}}],["outline",{"_index":740,"title":{},"body":{"components/ButtonOutlinedComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/StatusModifierComponent.html":{}}}],["outlined",{"_index":735,"title":{},"body":{"components/ButtonOutlinedComponent.html":{},"components/LoadResourcesComponent.html":{}}}],["outlined'},{'name",{"_index":100,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["outlined.component",{"_index":753,"title":{},"body":{"modules/ButtonOutlinedModule.html":{}}}],["outlined.component.html",{"_index":737,"title":{},"body":{"components/ButtonOutlinedComponent.html":{}}}],["outlined.component.scss",{"_index":736,"title":{},"body":{"components/ButtonOutlinedComponent.html":{}}}],["outlined.component.ts",{"_index":734,"title":{},"body":{"components/ButtonOutlinedComponent.html":{}}}],["outlined.component.ts:10",{"_index":739,"title":{},"body":{"components/ButtonOutlinedComponent.html":{}}}],["outlined.component.ts:9",{"_index":738,"title":{},"body":{"components/ButtonOutlinedComponent.html":{}}}],["outlined.module",{"_index":181,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/CoreModule.html":{},"modules/ResourceManagementModule.html":{}}}],["outlined.module.ts",{"_index":750,"title":{},"body":{"modules/ButtonOutlinedModule.html":{}}}],["outlined/button",{"_index":180,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/CoreModule.html":{},"modules/ResourceManagementModule.html":{}}}],["output",{"_index":43,"title":{},"body":{"components/AccountComponent.html":{},"components/AmountSelectorComponent.html":{}}}],["outputs",{"_index":27,"title":{},"body":{"components/AccountComponent.html":{},"components/AmountSelectorComponent.html":{}}}],["over",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["overflow",{"_index":851,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableSelectorComponent.html":{}}}],["overview",{"_index":2384,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":2286,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":67,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["page",{"_index":191,"title":{},"body":{"components/AdminPageComponent.html":{},"components/ProductPageComponent.html":{}}}],["page'},{'name",{"_index":88,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["page.component",{"_index":184,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ProductPageModule.html":{}}}],["page.component.html",{"_index":193,"title":{},"body":{"components/AdminPageComponent.html":{},"components/ProductPageComponent.html":{}}}],["page.component.scss",{"_index":192,"title":{},"body":{"components/AdminPageComponent.html":{},"components/ProductPageComponent.html":{}}}],["page.component.ts",{"_index":190,"title":{},"body":{"components/AdminPageComponent.html":{},"components/ProductPageComponent.html":{}}}],["page.component.ts:16",{"_index":218,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:17",{"_index":217,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:18",{"_index":216,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:19",{"_index":205,"title":{},"body":{"components/AdminPageComponent.html":{},"components/ProductPageComponent.html":{}}}],["page.component.ts:20",{"_index":1725,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["page.component.ts:21",{"_index":1724,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["page.component.ts:22",{"_index":1715,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["page.component.ts:23",{"_index":211,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:26",{"_index":1723,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["page.component.ts:29",{"_index":212,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:31",{"_index":1722,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["page.component.ts:33",{"_index":210,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:35",{"_index":1717,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["page.component.ts:39",{"_index":209,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:44",{"_index":1719,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["page.component.ts:52",{"_index":1720,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["page.component.ts:58",{"_index":1721,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["page.module",{"_index":1497,"title":{},"body":{"modules/OrderingModule.html":{}}}],["page.module.ts",{"_index":1755,"title":{},"body":{"modules/ProductPageModule.html":{}}}],["page/admin",{"_index":183,"title":{},"body":{"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{}}}],["page/product",{"_index":1496,"title":{},"body":{"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{}}}],["panel",{"_index":1055,"title":{},"body":{"modules/ChefModule.html":{},"components/ExpansionPanelComponent.html":{}}}],["panel'},{'name",{"_index":110,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["panel.component",{"_index":1183,"title":{},"body":{"modules/ExpansionPanelModule.html":{}}}],["panel.component.html",{"_index":1164,"title":{},"body":{"components/ExpansionPanelComponent.html":{}}}],["panel.component.scss",{"_index":1163,"title":{},"body":{"components/ExpansionPanelComponent.html":{}}}],["panel.component.ts",{"_index":1162,"title":{},"body":{"components/ExpansionPanelComponent.html":{}}}],["panel.component.ts:11",{"_index":1167,"title":{},"body":{"components/ExpansionPanelComponent.html":{}}}],["panel.module",{"_index":1778,"title":{},"body":{"modules/ResourceManagementModule.html":{}}}],["panel.module.ts",{"_index":1182,"title":{},"body":{"modules/ExpansionPanelModule.html":{}}}],["panel/expansion",{"_index":1161,"title":{},"body":{"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"modules/ResourceManagementModule.html":{}}}],["panelclass",{"_index":1002,"title":{},"body":{"components/ChefComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["parameters",{"_index":206,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"components/ConfirmationDialogComponent.html":{},"injectables/DialogService.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"miscellaneous/functions.html":{}}}],["parammap.get(\"filtercriteria",{"_index":1707,"title":{},"body":{"components/ProductListComponent.html":{}}}],["params",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["params.get(\"id",{"_index":1241,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/TableEditorComponent.html":{}}}],["params.get(\"redirecturl",{"_index":1305,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["password",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantCredentials.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{}}}],["password).set(\"creator",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["password).set(\"userid",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":196,"title":{},"body":{"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["pathmatch",{"_index":264,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["pipe",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"injectables/ResourceManagementService.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"components/TableEditorComponent.html":{}}}],["pipe(first",{"_index":802,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["pipe(select(restaurantstoreselectors.selectcurrency",{"_index":806,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{}}}],["pipe(select(restaurantstoreselectors.selectname",{"_index":240,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["pipe(takeuntil(this.ngunsubscribe",{"_index":2235,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["placeholder",{"_index":590,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/FormControlData.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["placeorder",{"_index":764,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{}}}],["placeorder(order",{"_index":1507,"title":{},"body":{"injectables/OrderingService.html":{}}}],["platform",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["playalertsound",{"_index":903,"title":{},"body":{"components/ChefComponent.html":{}}}],["pointer",{"_index":352,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{}}}],["position",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/ChefComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["pre",{"_index":1268,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["preloadallmodules",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":555,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preparationtime",{"_index":1552,"title":{},"body":{"interfaces/Product.html":{},"components/ProductEditorComponent.html":{}}}],["preparing",{"_index":834,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["preview",{"_index":1685,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["previous",{"_index":2380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["price",{"_index":1553,"title":{},"body":{"interfaces/Product.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{}}}],["primary",{"_index":70,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["private",{"_index":197,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["product",{"_index":127,"title":{"interfaces/Product.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"components/ButtonOutlinedComponent.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"interfaces/ChefState.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"interfaces/OrderingState.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["product.allergens",{"_index":1649,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["product.description",{"_index":1650,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["product.id",{"_index":1418,"title":{},"body":{"components/ModifyComponent.html":{},"components/ProductListComponent.html":{}}}],["product.imageurl",{"_index":1420,"title":{},"body":{"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{}}}],["product.ingredients",{"_index":1648,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{}}}],["product.name",{"_index":1416,"title":{},"body":{"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{}}}],["product.preparationtime",{"_index":1651,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["product.price",{"_index":1655,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{}}}],["product.subgroup.id",{"_index":1647,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["product.subgroup.name",{"_index":1434,"title":{},"body":{"components/ModifyComponent.html":{}}}],["product/:id",{"_index":1502,"title":{},"body":{"modules/OrderingRoutingModule.html":{}}}],["productcardcomponent",{"_index":126,"title":{"components/ProductCardComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["producteditorcomponent",{"_index":129,"title":{"components/ProductEditorComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["productid",{"_index":1734,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["productlistcomponent",{"_index":130,"title":{"components/ProductListComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["productpagecomponent",{"_index":132,"title":{"components/ProductPageComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingRoutingModule.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["productpagemodule",{"_index":1489,"title":{"modules/ProductPageModule.html":{}},"body":{"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"index.html":{},"modules.html":{}}}],["products",{"_index":569,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"components/ModifyComponent.html":{},"interfaces/OrderingState.html":{},"components/ProductListComponent.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["products/:filtercriteria",{"_index":1501,"title":{},"body":{"modules/OrderingRoutingModule.html":{}}}],["producttoedit",{"_index":1582,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["properties",{"_index":194,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"components/ConfirmationDialogComponent.html":{},"interfaces/DialogConfig.html":{},"components/ExpansionPanelComponent.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{}}}],["provide",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":159,"title":{},"body":{"modules/AdminModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"index.html":{}}}],["public",{"_index":1093,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{}}}],["push",{"_index":1360,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["put(image",{"_index":1826,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["px",{"_index":2111,"title":{},"body":{"components/SidenavComponent.html":{}}}],["queryparams",{"_index":1912,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["radius",{"_index":341,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["reactiveformsmodule",{"_index":610,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResourceManagementModule.html":{}}}],["reader",{"_index":1639,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["reader.onload",{"_index":1641,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["reader.readasdataurl(file",{"_index":1645,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["reader.result",{"_index":1644,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["ready",{"_index":1465,"title":{},"body":{"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["redirectiffullyauthenticated",{"_index":623,"title":{"guards/RedirectIfFullyAuthenticated.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{}}}],["redirectloggedinto",{"_index":627,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["redirectloggedinto([\"authentication/restaurant",{"_index":631,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["redirectloggedintorestaurantauth",{"_index":630,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["redirectto",{"_index":266,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["redirectunauthorizedto",{"_index":250,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["redirectunauthorizedto([\"authentication",{"_index":259,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["redirectunauthorizedto([\"authentication/user",{"_index":629,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["redirectunauthorizedtoauthentication",{"_index":258,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["redirectunauthorizedtouserauth",{"_index":628,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["redirecturl",{"_index":1274,"title":{},"body":{"components/LoadResourcesComponent.html":{},"guards/ResourcesLoadedGuard.html":{}}}],["ref",{"_index":1998,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["ref.where(\"status",{"_index":1999,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["register",{"_index":2259,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["registeruser",{"_index":678,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["registerwithemailandpassword",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerwithemailandpassword(undefined",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["rejected",{"_index":1466,"title":{},"body":{"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relative",{"_index":1749,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["remove",{"_index":335,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/GroupEditorComponent.html":{}}}],["remove_circle_outline",{"_index":1475,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["remove_shopping_cart",{"_index":840,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["removealltemfromcart",{"_index":765,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["removeitem",{"_index":2348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removeitem(oldcart",{"_index":2370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removeitemfromcart",{"_index":766,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["removeitemfromcart(item",{"_index":775,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["removerestaurantfromlocalstorage",{"_index":2015,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["removesubgroup",{"_index":1199,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["removesubgroup(index",{"_index":1211,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["report",{"_index":1476,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["reset",{"_index":167,"title":{},"body":{"modules/AdminModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"index.html":{}}}],["reseterror",{"_index":1922,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["resource",{"_index":542,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoadResourcesComponent.html":{},"injectables/NavigationService.html":{},"modules/ResourceManagementModule.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["resource.effects.ts",{"_index":2043,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["resource.effects.ts:12",{"_index":2049,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["resource.effects.ts:20",{"_index":2070,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["resource.effects.ts:32",{"_index":2059,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["resource.effects.ts:44",{"_index":2063,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["resource.effects.ts:56",{"_index":2056,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["resource.effects.ts:68",{"_index":2066,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["resource_management.group_editor.button_text",{"_index":1263,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["resource_management.group_editor.error_required",{"_index":1262,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["resource_management.group_editor.info_message",{"_index":1264,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["resource_management.modify.dialog_action_cancel",{"_index":1400,"title":{},"body":{"components/ModifyComponent.html":{}}}],["resource_management.modify.dialog_action_yes",{"_index":1399,"title":{},"body":{"components/ModifyComponent.html":{}}}],["resource_management.modify.dialog_title_group_deletion",{"_index":1412,"title":{},"body":{"components/ModifyComponent.html":{}}}],["resource_management.modify.dialog_title_product_deletion",{"_index":1415,"title":{},"body":{"components/ModifyComponent.html":{}}}],["resource_management.modify.dialog_title_table_deletion",{"_index":1408,"title":{},"body":{"components/ModifyComponent.html":{}}}],["resource_management.modify.expansion_list_number_of_seats",{"_index":1428,"title":{},"body":{"components/ModifyComponent.html":{}}}],["resource_management.modify.expansion_list_title_goups",{"_index":1432,"title":{},"body":{"components/ModifyComponent.html":{}}}],["resource_management.modify.expansion_list_title_products",{"_index":1433,"title":{},"body":{"components/ModifyComponent.html":{}}}],["resource_management.modify.expansion_list_title_tables",{"_index":1427,"title":{},"body":{"components/ModifyComponent.html":{}}}],["resource_management.product_editor.button_text",{"_index":1681,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["resource_management.product_editor.cannot_edit_image",{"_index":1677,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["resource_management.product_editor.choose_subgroup_placeholder",{"_index":1673,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["resource_management.product_editor.error_file_format",{"_index":1678,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["resource_management.product_editor.error_image_required",{"_index":1679,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["resource_management.product_editor.error_preparation_time_pattern",{"_index":1674,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["resource_management.product_editor.error_price_pattern",{"_index":1680,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["resource_management.product_editor.error_required",{"_index":1672,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["resource_management.product_editor.preparation_time_hint",{"_index":1675,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["resource_management.table_editor.button_text",{"_index":2217,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["resource_management.table_editor.error_required",{"_index":2214,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["resource_management.table_editor.number_of_seats_error_pattern",{"_index":2216,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["resource_management.table_editor.number_of_seats_hint",{"_index":2215,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["resourcemanagement",{"_index":560,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"interfaces/RestaurantState.html":{}}}],["resourcemanagementmodule",{"_index":1769,"title":{"modules/ResourceManagementModule.html":{}},"body":{"modules/ResourceManagementModule.html":{},"index.html":{},"modules.html":{}}}],["resourcemanagementreducer",{"_index":1886,"title":{},"body":{"modules/ResourceManagementStoreModule.html":{},"miscellaneous/functions.html":{}}}],["resourcemanagementreducer(state",{"_index":2375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resourcemanagementroutingmodule",{"_index":1774,"title":{"modules/ResourceManagementRoutingModule.html":{}},"body":{"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["resourcemanagementservice",{"_index":1776,"title":{"injectables/ResourceManagementService.html":{}},"body":{"modules/ResourceManagementModule.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"index.html":{}}}],["resourcemanagementstate",{"_index":563,"title":{"interfaces/ResourceManagementState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{}}}],["resourcemanagementstoreactions",{"_index":1225,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"components/TableEditorComponent.html":{}}}],["resourcemanagementstoreactions.saveproduct",{"_index":1881,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["resourcemanagementstoreactions.successresponse",{"_index":1839,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["resourcemanagementstoreeffects",{"_index":1832,"title":{"injectables/ResourceManagementStoreEffects.html":{}},"body":{"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{}}}],["resourcemanagementstoremodule",{"_index":1775,"title":{"modules/ResourceManagementStoreModule.html":{}},"body":{"modules/ResourceManagementModule.html":{},"modules/ResourceManagementStoreModule.html":{},"index.html":{},"modules.html":{}}}],["resourcemanagementstoreselectores",{"_index":1226,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["resourcemanagementutilsstoreeffects",{"_index":1888,"title":{"injectables/ResourceManagementUtilsStoreEffects.html":{}},"body":{"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["resourcenavigationdata",{"_index":1454,"title":{},"body":{"injectables/NavigationService.html":{}}}],["resources",{"_index":535,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthStoreEffects.html":{},"components/LoadResourcesComponent.html":{},"guards/ResourcesLoadedGuard.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["resources'},{'name",{"_index":119,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["resources.component",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["resources.component.html",{"_index":1272,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.scss",{"_index":1271,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts",{"_index":1270,"title":{},"body":{"components/LoadResourcesComponent.html":{},"miscellaneous/functions.html":{}}}],["resources.component.ts:16",{"_index":1288,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:17",{"_index":1287,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:18",{"_index":1292,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:19",{"_index":1291,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:20",{"_index":1290,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:21",{"_index":1279,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:25",{"_index":1283,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:34",{"_index":1282,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:38",{"_index":1286,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:42",{"_index":1285,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:46",{"_index":1280,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:50",{"_index":1284,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources.component.ts:65",{"_index":1281,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["resources/load",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/LoadResourcesComponent.html":{},"miscellaneous/functions.html":{}}}],["resourcesloadedguard",{"_index":254,"title":{"guards/ResourcesLoadedGuard.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/CoreModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"guards/ResourcesLoadedGuard.html":{}}}],["response.data.restaurant.restaurantid",{"_index":721,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["response.data.restaurant.restaurantname",{"_index":722,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["restaurant",{"_index":134,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"interfaces/ChefState.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"interfaces/OrderingState.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"interfaces/ResourceManagementState.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantState.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["restaurant.reducer",{"_index":2009,"title":{},"body":{"modules/RestaurantStoreModule.html":{}}}],["restaurantauthcomponent",{"_index":133,"title":{"components/RestaurantAuthComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["restaurantauthresponse",{"_index":710,"title":{"interfaces/RestaurantAuthResponse.html":{}},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["restaurantcredentials",{"_index":642,"title":{"interfaces/RestaurantCredentials.html":{}},"body":{"injectables/AuthService.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantCredentials.html":{}}}],["restaurantformdata",{"_index":1919,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["restaurantid",{"_index":711,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"components/LoadResourcesComponent.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurantService.html":{}}}],["restaurantid).pipe",{"_index":1521,"title":{},"body":{"injectables/OrderingStoreEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["restaurantid).pipe(map",{"_index":1077,"title":{},"body":{"injectables/ChefStoreEffects.html":{}}}],["restaurantid}/${action.image.name",{"_index":1880,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["restaurantname",{"_index":25,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthStoreEffects.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["restaurantreducer",{"_index":2008,"title":{},"body":{"modules/RestaurantStoreModule.html":{},"miscellaneous/functions.html":{}}}],["restaurantreducer(state",{"_index":2377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["restaurantremovesuccess",{"_index":2016,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["restaurantservice",{"_index":1128,"title":{"injectables/RestaurantService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"index.html":{}}}],["restaurantstate",{"_index":564,"title":{"interfaces/RestaurantState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{}}}],["restaurantstoreauthactions",{"_index":226,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/LoadResourcesComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{}}}],["restaurantstoreauthactions.removerestaurant",{"_index":2041,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["restaurantstoreauthactions.removesuccess",{"_index":2027,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["restaurantstoreauthactions.saverestauranttolocalstorage",{"_index":720,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["restaurantstoremodule",{"_index":2003,"title":{"modules/RestaurantStoreModule.html":{}},"body":{"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{},"index.html":{},"modules.html":{}}}],["restaurantstoreresourceactions",{"_index":1293,"title":{},"body":{"components/LoadResourcesComponent.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["restaurantstoreresourceactions.setactiveorders",{"_index":2054,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["restaurantstoreresourceactions.setgroups",{"_index":2058,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["restaurantstoreresourceactions.setloading",{"_index":2031,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["restaurantstoreresourceactions.setproducts",{"_index":2062,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["restaurantstoreresourceactions.setrestaurant",{"_index":2037,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["restaurantstoreresourceactions.setrestaurant(restaurant",{"_index":2023,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["restaurantstoreresourceactions.settables",{"_index":2069,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["restaurantstoreselectors",{"_index":227,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingStoreEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["restaurantstoresettingactions",{"_index":285,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/LoadResourcesComponent.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["restaurantstoresettingactions.savesuccess",{"_index":2090,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["restaurantstoresettingactions.setrestaurantcurrency",{"_index":2080,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["restaurantstoresettingactions.setrestaurantlanguage",{"_index":2082,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["restaurnatid",{"_index":2087,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["restaurnatid).pipe",{"_index":2089,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["restaurnatstoreautheffects",{"_index":2005,"title":{"injectables/RestaurnatStoreAuthEffects.html":{}},"body":{"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{}}}],["restaurnatstoreresourceeffects",{"_index":2006,"title":{"injectables/RestaurnatStoreResourceEffects.html":{}},"body":{"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["restaurnatstoresettingeffects",{"_index":2007,"title":{"injectables/RestaurnatStoreSettingEffects.html":{}},"body":{"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["result",{"_index":150,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":152,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":333,"title":{},"body":{"components/AmountSelectorComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{},"components/UserAuthComponent.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"components/ConfirmationDialogComponent.html":{},"injectables/DialogService.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurantService.html":{},"components/SidenavComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"miscellaneous/functions.html":{}}}],["rgba($color",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{}}}],["rgba(0",{"_index":1565,"title":{},"body":{"components/ProductCardComponent.html":{},"components/SidenavComponent.html":{}}}],["right",{"_index":870,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["root",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChefComponent.html":{}}}],["root'},{'name",{"_index":95,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["rootstoremodule",{"_index":469,"title":{"modules/RootStoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RootStoreModule.html":{},"index.html":{},"modules.html":{}}}],["rota",{"_index":15,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["rota/core/models",{"_index":785,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"injectables/OrderingService.html":{},"injectables/ResourceManagementService.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"components/TableEditorComponent.html":{}}}],["rota/core/models/app",{"_index":224,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"injectables/OrderingStoreEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementStoreEffects.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["rota/core/models/cart",{"_index":1726,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["rota/core/models/group",{"_index":1614,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["rota/core/models/product",{"_index":756,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["rota/core/models/table",{"_index":786,"title":{},"body":{"components/CheckoutComponent.html":{},"components/TableSelectorComponent.html":{}}}],["rota/core/services/resources",{"_index":255,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["rota/core/services/restaurant.service",{"_index":2071,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["rota/core/sidenav/sidenav.component",{"_index":2124,"title":{},"body":{"interfaces/SidenavData.html":{}}}],["rota/core/util",{"_index":1397,"title":{},"body":{"components/ModifyComponent.html":{},"components/TableSelectorComponent.html":{}}}],["rota/root",{"_index":228,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingStoreEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"interfaces/RestaurantAuthResponse.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["rota/shared/amount",{"_index":887,"title":{},"body":{"modules/CheckoutModule.html":{},"modules/ProductPageModule.html":{}}}],["rota/shared/button",{"_index":888,"title":{},"body":{"modules/CheckoutModule.html":{}}}],["rota/shared/dialog",{"_index":1398,"title":{},"body":{"components/ModifyComponent.html":{}}}],["rota/shared/loading",{"_index":1053,"title":{},"body":{"modules/ChefModule.html":{},"modules/ResourceManagementModule.html":{}}}],["rota/shared/snackbar/services",{"_index":1546,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["route",{"_index":203,"title":{},"body":{"components/AdminPageComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{}}}],["router",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/ModifyComponent.html":{},"components/ProductListComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"guards/ResourcesLoadedGuard.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["routereusestrategy",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":252,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/CoreModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":267,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":554,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1905,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["routes",{"_index":253,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":185,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/OrderingModule.html":{},"modules/ResourceManagementModule.html":{}}}],["routing.module.ts",{"_index":248,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CheckoutRoutingModule.html":{},"modules/ChefRoutingModule.html":{},"modules/OrderingRoutingModule.html":{},"modules/ResourceManagementRoutingModule.html":{}}}],["row",{"_index":1751,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["rxjs",{"_index":230,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingService.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurantService.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":232,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["save",{"_index":2178,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["savecurrency",{"_index":275,"title":{},"body":{"components/AdminSettingsComponent.html":{},"injectables/RestaurantService.html":{}}}],["savecurrency(currency",{"_index":1989,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["savegroup",{"_index":1200,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["savelanguage",{"_index":276,"title":{},"body":{"components/AdminSettingsComponent.html":{},"injectables/RestaurantService.html":{}}}],["savelanguage(language",{"_index":1991,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["saveproduct",{"_index":1587,"title":{},"body":{"components/ProductEditorComponent.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["saverestaurantcurrency",{"_index":2074,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["saverestaurantlanguage",{"_index":2075,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["saverestauranttolocalstorage",{"_index":2017,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["savetable",{"_index":2194,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["screen",{"_index":856,"title":{},"body":{"components/CheckoutComponent.html":{},"dependencies.html":{}}}],["screen/ngx",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["seats",{"_index":2251,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["second",{"_index":1683,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["secondary",{"_index":874,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/UserAuthComponent.html":{}}}],["select",{"_index":221,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingStoreEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["select(restaurantstoreselectors.selectareresourcesloaded",{"_index":1909,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["select(restaurantstoreselectors.selectlanguage",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["select(restaurantstoreselectors.selectrestaurant",{"_index":1764,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["select(table",{"_index":2226,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["selected",{"_index":2253,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["selectedamount",{"_index":1711,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["selectedcurrency",{"_index":273,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["selectedlanguage",{"_index":274,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["selectedoptionstatus",{"_index":957,"title":{},"body":{"components/ChefComponent.html":{},"components/StatusModifierComponent.html":{}}}],["selectedtable",{"_index":576,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"components/CheckoutComponent.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{},"components/TableSelectorComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["selector'},{'name",{"_index":93,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["selector.component",{"_index":358,"title":{},"body":{"modules/AmountSelectorModule.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{}}}],["selector.component.html",{"_index":311,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["selector.component.scss",{"_index":310,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["selector.component.ts",{"_index":309,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["selector.component.ts:10",{"_index":323,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["selector.component.ts:11",{"_index":322,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["selector.component.ts:12",{"_index":324,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["selector.component.ts:14",{"_index":318,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["selector.component.ts:17",{"_index":2228,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["selector.component.ts:18",{"_index":327,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["selector.component.ts:19",{"_index":2229,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["selector.component.ts:20",{"_index":2222,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["selector.component.ts:22",{"_index":325,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["selector.component.ts:24",{"_index":2225,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["selector.component.ts:29",{"_index":2224,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["selector.component.ts:30",{"_index":326,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["selector.component.ts:33",{"_index":2227,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["selector.component.ts:37",{"_index":2223,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["selector.component.ts:9",{"_index":320,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["selector.module.ts",{"_index":357,"title":{},"body":{"modules/AmountSelectorModule.html":{}}}],["selector/amount",{"_index":308,"title":{},"body":{"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{}}}],["selector/table",{"_index":1499,"title":{},"body":{"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"components/TableSelectorComponent.html":{}}}],["self",{"_index":878,"title":{},"body":{"components/CheckoutComponent.html":{},"components/GroupEditorComponent.html":{},"components/ProductCardComponent.html":{}}}],["separate",{"_index":862,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["services",{"_index":1152,"title":{},"body":{"modules/DialogModule.html":{},"modules/OrderingModule.html":{},"injectables/OrderingStoreEffects.html":{},"modules/SnackbarModule.html":{}}}],["services/auth.service",{"_index":622,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["services/authenticated.guard",{"_index":624,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["services/chef.service",{"_index":1060,"title":{},"body":{"modules/ChefModule.html":{},"injectables/ChefStoreEffects.html":{}}}],["services/resource",{"_index":1781,"title":{},"body":{"modules/ResourceManagementModule.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["services/resources",{"_index":1135,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/restaurant.service",{"_index":1136,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":1028,"title":{},"body":{"components/ChefComponent.html":{}}}],["setlanguage",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["setpreview",{"_index":1588,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["setpreview(file",{"_index":1603,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["setsuccessonfinishedloading",{"_index":1277,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["setting.effects.ts",{"_index":2072,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["setting.effects.ts:12",{"_index":2076,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["setting.effects.ts:15",{"_index":2094,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["setting.effects.ts:28",{"_index":2091,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["setting.effects.ts:41",{"_index":2085,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["settings",{"_index":263,"title":{},"body":{"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{}}}],["settings'},{'name",{"_index":90,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["settings.component",{"_index":187,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["settings.component.html",{"_index":272,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["settings.component.scss",{"_index":271,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["settings.component.ts",{"_index":268,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["settings.component.ts:13",{"_index":283,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":280,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":282,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["settings.component.ts:23",{"_index":281,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["settings.currency",{"_index":2081,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["settings.language",{"_index":2083,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["settings/admin",{"_index":186,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{}}}],["shadow",{"_index":344,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{}}}],["shared/button",{"_index":179,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/ResourceManagementModule.html":{}}}],["shared/dialog",{"_index":936,"title":{},"body":{"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ResourceManagementModule.html":{}}}],["shared/expansion",{"_index":1054,"title":{},"body":{"modules/ChefModule.html":{},"modules/ResourceManagementModule.html":{}}}],["shared/loading",{"_index":1134,"title":{},"body":{"modules/CoreModule.html":{},"modules/OrderingModule.html":{}}}],["shared/snackbar",{"_index":1056,"title":{},"body":{"modules/ChefModule.html":{},"modules/OrderingModule.html":{},"modules/ResourceManagementModule.html":{}}}],["shared/snackbar/services",{"_index":938,"title":{},"body":{"components/ChefComponent.html":{}}}],["shouldhave",{"_index":2123,"title":{},"body":{"interfaces/SidenavData.html":{}}}],["shouldhavesidenav",{"_index":1362,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["showerrorsnackbar",{"_index":1893,"title":{},"body":{"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["showsuccesssnackbar",{"_index":1894,"title":{},"body":{"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["side",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["sidenav",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["sidenav'},{'name",{"_index":137,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["sidenav.component.html",{"_index":1355,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["sidenav.component.scss",{"_index":1356,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["sidenav/service/navigation.service",{"_index":1137,"title":{},"body":{"modules/CoreModule.html":{}}}],["sidenav/sidenav.component",{"_index":1138,"title":{},"body":{"modules/CoreModule.html":{}}}],["sidenavcomponent",{"_index":136,"title":{"components/SidenavComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"modules/CoreModule.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["sidenavdata",{"_index":366,"title":{"interfaces/SidenavData.html":{}},"body":{"components/AppComponent.html":{},"injectables/NavigationService.html":{},"interfaces/SidenavData.html":{}}}],["sidenavmode",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["sign",{"_index":879,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["signout",{"_index":28,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/LoadResourcesComponent.html":{},"injectables/RestaurnatStoreAuthEffects.html":{}}}],["size",{"_index":349,"title":{},"body":{"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["snackbar",{"_index":1003,"title":{},"body":{"components/ChefComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["snackbar'},{'name",{"_index":139,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["snackbar.component",{"_index":2143,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["snackbar.component.html",{"_index":2127,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.component.scss",{"_index":2126,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.error_action_name",{"_index":2161,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["snackbar.error_text",{"_index":2160,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["snackbar.success_action_name",{"_index":2156,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["snackbar.success_text",{"_index":2155,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["snackbarcomponent",{"_index":138,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["snackbarconfig",{"_index":937,"title":{"interfaces/SnackbarConfig.html":{}},"body":{"components/ChefComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["snackbarmodule",{"_index":1048,"title":{"modules/SnackbarModule.html":{}},"body":{"modules/ChefModule.html":{},"modules/OrderingModule.html":{},"modules/ResourceManagementModule.html":{},"modules/SnackbarModule.html":{},"index.html":{},"modules.html":{}}}],["snackbarposition",{"_index":2141,"title":{"interfaces/SnackbarPosition.html":{}},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["snackbarref",{"_index":2128,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbarservice",{"_index":907,"title":{"injectables/SnackbarService.html":{}},"body":{"components/ChefComponent.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"index.html":{}}}],["snapshotchanges",{"_index":1827,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["solid",{"_index":743,"title":{},"body":{"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/ProductPageComponent.html":{},"components/SidenavComponent.html":{}}}],["sortbyname",{"_index":1396,"title":{},"body":{"components/ModifyComponent.html":{},"components/TableSelectorComponent.html":{},"miscellaneous/functions.html":{}}}],["sortbyname(collection",{"_index":2382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sortbyname(tables.filter(table",{"_index":2239,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"modules/AuthStoreModule.html":{},"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"modules/CheckoutModule.html":{},"modules/CheckoutRoutingModule.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"modules/ChefRoutingModule.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"modules/ChefStoreModule.html":{},"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"interfaces/DialogConfig.html":{},"modules/DialogModule.html":{},"injectables/DialogService.html":{},"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"modules/OrderingStoreModule.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"modules/SnackbarModule.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{}}}],["space",{"_index":1033,"title":{},"body":{"components/ChefComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductPageComponent.html":{},"components/SnackbarComponent.html":{}}}],["spacing",{"_index":863,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["span",{"_index":1333,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["splashscreen",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["src/.../app.module.ts",{"_index":2338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.reducer.ts",{"_index":2331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../checkout.component.ts",{"_index":2336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chef.component.ts",{"_index":2347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chef.reducer.ts",{"_index":2334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../load",{"_index":2341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.ts",{"_index":2396,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../ordering.reducer.ts",{"_index":2345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ordering.ts",{"_index":2333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product",{"_index":2343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../resource",{"_index":2349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../restaurant.reducer.ts",{"_index":2351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sortbyname.ts",{"_index":2352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/admin/account/account.component.ts",{"_index":10,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/admin/account/account.component.ts:10",{"_index":35,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/admin/account/account.component.ts:11",{"_index":31,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/admin/account/account.component.ts:15",{"_index":38,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/admin/account/account.component.ts:9",{"_index":36,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/admin/admin",{"_index":189,"title":{},"body":{"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AdminSettingsComponent.html":{}}}],["src/app/admin/admin.module.ts",{"_index":169,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/app",{"_index":530,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:71",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/auth",{"_index":578,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"modules/AuthRoutingModule.html":{},"interfaces/FormControlData.html":{}}}],["src/app/auth/auth.module.ts",{"_index":607,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/models/restaurant",{"_index":1970,"title":{},"body":{"interfaces/RestaurantCredentials.html":{}}}],["src/app/auth/models/user",{"_index":2285,"title":{},"body":{"interfaces/UserCredentials.html":{}}}],["src/app/auth/restaurant",{"_index":1914,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["src/app/auth/services/auth.service.ts",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:12",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:15",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:19",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:23",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:28",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/authenticated.guard.ts",{"_index":1757,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["src/app/auth/services/authenticated.guard.ts:11",{"_index":1758,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["src/app/auth/services/authenticated.guard.ts:14",{"_index":1759,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["src/app/auth/store/auth",{"_index":724,"title":{},"body":{"modules/AuthStoreModule.html":{}}}],["src/app/auth/store/auth.effects.ts",{"_index":674,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["src/app/auth/store/auth.effects.ts:40",{"_index":681,"title":{},"body":{"injectables/AuthStoreEffects.html":{}}}],["src/app/auth/store/auth.effects.ts:43",{"_index":701,"title":{},"body":{"injectables/AuthStoreEffects.html":{}}}],["src/app/auth/store/auth.effects.ts:50",{"_index":698,"title":{},"body":{"injectables/AuthStoreEffects.html":{}}}],["src/app/auth/store/auth.effects.ts:57",{"_index":692,"title":{},"body":{"injectables/AuthStoreEffects.html":{}}}],["src/app/auth/store/auth.effects.ts:64",{"_index":695,"title":{},"body":{"injectables/AuthStoreEffects.html":{}}}],["src/app/auth/store/auth.effects.ts:71",{"_index":688,"title":{},"body":{"injectables/AuthStoreEffects.html":{}}}],["src/app/auth/store/auth.reducer.ts",{"_index":2357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/auth/user",{"_index":2254,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["src/app/chef/chef",{"_index":1061,"title":{},"body":{"modules/ChefRoutingModule.html":{}}}],["src/app/chef/chef.component.ts",{"_index":891,"title":{},"body":{"components/ChefComponent.html":{},"miscellaneous/functions.html":{}}}],["src/app/chef/chef.component.ts:109",{"_index":909,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:129",{"_index":920,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:135",{"_index":912,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:154",{"_index":926,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:24",{"_index":929,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:25",{"_index":932,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:26",{"_index":931,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:27",{"_index":930,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:28",{"_index":908,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:31",{"_index":919,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:38",{"_index":918,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:42",{"_index":911,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:62",{"_index":917,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:86",{"_index":914,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:90",{"_index":922,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.component.ts:98",{"_index":915,"title":{},"body":{"components/ChefComponent.html":{}}}],["src/app/chef/chef.module.ts",{"_index":1050,"title":{},"body":{"modules/ChefModule.html":{}}}],["src/app/chef/order",{"_index":1467,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["src/app/chef/services/chef.service.ts",{"_index":1062,"title":{},"body":{"injectables/ChefService.html":{}}}],["src/app/chef/services/chef.service.ts:10",{"_index":1068,"title":{},"body":{"injectables/ChefService.html":{}}}],["src/app/chef/services/chef.service.ts:7",{"_index":1065,"title":{},"body":{"injectables/ChefService.html":{}}}],["src/app/chef/status",{"_index":2176,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["src/app/chef/store/chef",{"_index":1082,"title":{},"body":{"modules/ChefStoreModule.html":{}}}],["src/app/chef/store/chef.effects.ts",{"_index":1071,"title":{},"body":{"injectables/ChefStoreEffects.html":{}}}],["src/app/chef/store/chef.effects.ts:12",{"_index":1072,"title":{},"body":{"injectables/ChefStoreEffects.html":{}}}],["src/app/chef/store/chef.effects.ts:15",{"_index":1079,"title":{},"body":{"injectables/ChefStoreEffects.html":{}}}],["src/app/chef/store/chef.reducer.ts",{"_index":2361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/core.module.ts",{"_index":1129,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/load",{"_index":1269,"title":{},"body":{"components/LoadResourcesComponent.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/models/app",{"_index":558,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{}}}],["src/app/core/models/cart.ts",{"_index":754,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/CartItem.html":{}}}],["src/app/core/models/group.ts",{"_index":1184,"title":{},"body":{"interfaces/Group.html":{},"interfaces/Subgroup.html":{}}}],["src/app/core/models/order.ts",{"_index":1464,"title":{},"body":{"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/product.ts",{"_index":1547,"title":{},"body":{"interfaces/Product.html":{}}}],["src/app/core/models/table.ts",{"_index":2192,"title":{},"body":{"interfaces/Table.html":{}}}],["src/app/core/services/resources",{"_index":1900,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["src/app/core/services/restaurant.service.ts",{"_index":1972,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["src/app/core/services/restaurant.service.ts:10",{"_index":1988,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["src/app/core/services/restaurant.service.ts:14",{"_index":1980,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["src/app/core/services/restaurant.service.ts:18",{"_index":1984,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["src/app/core/services/restaurant.service.ts:22",{"_index":1982,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["src/app/core/services/restaurant.service.ts:28",{"_index":1992,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["src/app/core/services/restaurant.service.ts:32",{"_index":1990,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["src/app/core/services/restaurant.service.ts:36",{"_index":1986,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["src/app/core/services/restaurant.service.ts:7",{"_index":1978,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["src/app/core/sidenav/service/navigation.service.ts",{"_index":1444,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/sidenav/service/navigation.service.ts:10",{"_index":1446,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/sidenav/service/navigation.service.ts:13",{"_index":1448,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/sidenav/sidenav",{"_index":2121,"title":{},"body":{"interfaces/SidenavData.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/sidenav/sidenav.component.ts",{"_index":1348,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["src/app/core/sidenav/sidenav.component.ts:25",{"_index":2107,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/sidenav/sidenav.component.ts:26",{"_index":2101,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/sidenav/sidenav.component.ts:27",{"_index":2104,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/sidenav/sidenav.component.ts:28",{"_index":2099,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/sidenav/sidenav.component.ts:29",{"_index":2100,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/sidenav/sidenav.component.ts:30",{"_index":2102,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/sidenav/sidenav.component.ts:31",{"_index":2103,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/sidenav/sidenav.component.ts:33",{"_index":2105,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/util/sortbyname.ts",{"_index":2381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/ordering/checkout/checkout",{"_index":890,"title":{},"body":{"modules/CheckoutRoutingModule.html":{}}}],["src/app/ordering/checkout/checkout.component.ts",{"_index":757,"title":{},"body":{"components/CheckoutComponent.html":{},"miscellaneous/functions.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:17",{"_index":780,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:18",{"_index":782,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:19",{"_index":783,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:20",{"_index":781,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:21",{"_index":768,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:25",{"_index":772,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:32",{"_index":771,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:36",{"_index":779,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:40",{"_index":776,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:44",{"_index":774,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:48",{"_index":773,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:54",{"_index":769,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.component.ts:60",{"_index":770,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/ordering/checkout/checkout.module.ts",{"_index":886,"title":{},"body":{"modules/CheckoutModule.html":{}}}],["src/app/ordering/ordering",{"_index":1500,"title":{},"body":{"modules/OrderingRoutingModule.html":{}}}],["src/app/ordering/ordering.module.ts",{"_index":1491,"title":{},"body":{"modules/OrderingModule.html":{}}}],["src/app/ordering/product",{"_index":1554,"title":{},"body":{"components/ProductCardComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ProductPageModule.html":{}}}],["src/app/ordering/services/ordering.service.ts",{"_index":1505,"title":{},"body":{"injectables/OrderingService.html":{}}}],["src/app/ordering/services/ordering.service.ts:10",{"_index":1508,"title":{},"body":{"injectables/OrderingService.html":{}}}],["src/app/ordering/services/ordering.service.ts:7",{"_index":1506,"title":{},"body":{"injectables/OrderingService.html":{}}}],["src/app/ordering/store/effects/ordering",{"_index":1534,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{}}}],["src/app/ordering/store/effects/ordering.effects.ts",{"_index":1512,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["src/app/ordering/store/effects/ordering.effects.ts:12",{"_index":1514,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["src/app/ordering/store/effects/ordering.effects.ts:15",{"_index":1518,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["src/app/ordering/store/effects/ordering.effects.ts:22",{"_index":1526,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["src/app/ordering/store/ordering",{"_index":1527,"title":{},"body":{"modules/OrderingStoreModule.html":{}}}],["src/app/ordering/store/ordering.reducer.ts",{"_index":2365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/ordering/table",{"_index":2218,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["src/app/resource",{"_index":1187,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"modules/ResourceManagementStoreModule.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"components/TableEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["src/app/root",{"_index":2004,"title":{},"body":{"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/amount",{"_index":307,"title":{},"body":{"components/AmountSelectorComponent.html":{},"modules/AmountSelectorModule.html":{}}}],["src/app/shared/button",{"_index":733,"title":{},"body":{"components/ButtonOutlinedComponent.html":{},"modules/ButtonOutlinedModule.html":{}}}],["src/app/shared/dialog/confirmation",{"_index":1088,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"modules/ConfirmationDialogModule.html":{}}}],["src/app/shared/dialog/dialog.module.ts",{"_index":1150,"title":{},"body":{"modules/DialogModule.html":{}}}],["src/app/shared/dialog/services/dialog.service.ts",{"_index":1139,"title":{},"body":{"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{}}}],["src/app/shared/dialog/services/dialog.service.ts:16",{"_index":1155,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/shared/dialog/services/dialog.service.ts:19",{"_index":1156,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/shared/expansion",{"_index":1160,"title":{},"body":{"components/ExpansionPanelComponent.html":{},"modules/ExpansionPanelModule.html":{}}}],["src/app/shared/loading",{"_index":1334,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"modules/LoadingIndicatorModule.html":{}}}],["src/app/shared/snackbar/services/snackbar.service.ts",{"_index":2140,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["src/app/shared/snackbar/services/snackbar.service.ts:18",{"_index":2172,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/shared/snackbar/services/snackbar.service.ts:21",{"_index":2175,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/shared/snackbar/services/snackbar.service.ts:31",{"_index":2174,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/shared/snackbar/services/snackbar.service.ts:46",{"_index":2173,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/shared/snackbar/snackbar.component.ts",{"_index":2125,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/shared/snackbar/snackbar.component.ts:11",{"_index":2132,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/shared/snackbar/snackbar.component.ts:12",{"_index":2133,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/shared/snackbar/snackbar.component.ts:9",{"_index":2130,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/shared/snackbar/snackbar.module.ts",{"_index":2166,"title":{},"body":{"modules/SnackbarModule.html":{}}}],["src/assets/styles/_colors.scss",{"_index":301,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["src/assets/styles/colors",{"_index":52,"title":{},"body":{"components/AccountComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["start",{"_index":859,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductCardComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["state",{"_index":225,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingStoreEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"miscellaneous/functions.html":{}}}],["state.matches",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["state.ts",{"_index":559,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{}}}],["state.url",{"_index":1913,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["static",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["status",{"_index":141,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurantService.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["statusbar",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["statusmodifiercomponent",{"_index":140,"title":{"components/StatusModifierComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["storage",{"_index":2019,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["store",{"_index":202,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"modules/ChefModule.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingStoreEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["store.module",{"_index":505,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderingModule.html":{},"modules/ResourceManagementModule.html":{},"modules/RootStoreModule.html":{}}}],["store.module.ts",{"_index":725,"title":{},"body":{"modules/AuthStoreModule.html":{},"modules/ChefStoreModule.html":{},"modules/OrderingStoreModule.html":{},"modules/ResourceManagementStoreModule.html":{},"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{}}}],["store/actions",{"_index":286,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/LoadResourcesComponent.html":{}}}],["store/auth",{"_index":625,"title":{},"body":{"modules/AuthModule.html":{}}}],["store/auth.actions",{"_index":1935,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["store/auth.selectors",{"_index":1937,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["store/effects/restaurant",{"_index":2012,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["store/ordering",{"_index":1498,"title":{},"body":{"modules/OrderingModule.html":{}}}],["store/resource",{"_index":1783,"title":{},"body":{"modules/ResourceManagementModule.html":{}}}],["store/restaurant",{"_index":229,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderingStoreEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"interfaces/RestaurantAuthResponse.html":{},"modules/RestaurantStoreModule.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"modules/RootStoreModule.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"miscellaneous/functions.html":{}}}],["store/restaurant.reducer.ts",{"_index":2376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["store/root",{"_index":504,"title":{},"body":{"modules/AppModule.html":{},"modules/RootStoreModule.html":{}}}],["storedevtoolsmodule",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":727,"title":{},"body":{"modules/AuthStoreModule.html":{},"modules/ChefStoreModule.html":{},"modules/OrderingStoreModule.html":{},"modules/ResourceManagementStoreModule.html":{},"modules/RestaurantStoreModule.html":{},"modules/RootStoreModule.html":{}}}],["storemodule.forfeature(\"auth",{"_index":731,"title":{},"body":{"modules/AuthStoreModule.html":{}}}],["storemodule.forfeature(\"chef",{"_index":1086,"title":{},"body":{"modules/ChefStoreModule.html":{}}}],["storemodule.forfeature(\"ordering",{"_index":1532,"title":{},"body":{"modules/OrderingStoreModule.html":{}}}],["storemodule.forfeature(\"resourcemanagement",{"_index":1891,"title":{},"body":{"modules/ResourceManagementStoreModule.html":{}}}],["storemodule.forfeature(\"restaurant",{"_index":2010,"title":{},"body":{"modules/RestaurantStoreModule.html":{}}}],["storemodule.forroot",{"_index":2097,"title":{},"body":{"modules/RootStoreModule.html":{}}}],["string",{"_index":34,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"components/ConfirmationDialogComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/LoadResourcesComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"interfaces/UserCredentials.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["sub",{"_index":1353,"title":{},"body":{"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["subgroup",{"_index":1186,"title":{"interfaces/Subgroup.html":{}},"body":{"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"interfaces/Product.html":{},"components/ProductEditorComponent.html":{},"interfaces/Subgroup.html":{}}}],["subgroup.id",{"_index":1661,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["subgroup.name",{"_index":1260,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{}}}],["subgroupcontrolls",{"_index":1202,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["subgroupformarray",{"_index":1234,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["subgroupformarray.push(this.createsubgroupformgroup",{"_index":1236,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["subgroupformarray.removeat(index",{"_index":1237,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["subgroupid",{"_index":1595,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["subgroups",{"_index":1185,"title":{},"body":{"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"interfaces/Subgroup.html":{}}}],["subgroups.push(subgroup",{"_index":1638,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["subgroupsformarray",{"_index":1248,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["subgroupsformarray.push(this.createsubgroupformgroup",{"_index":1251,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["subgroupsformarray.push(this.createsubgroupformgroup(subgroup",{"_index":1250,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["subject",{"_index":215,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["subnavigation",{"_index":1354,"title":{"interfaces/SubNavigation.html":{}},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["subnavigation.name",{"_index":2109,"title":{},"body":{"components/SidenavComponent.html":{}}}],["subscribe(([cart",{"_index":803,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["subscribe(([tables",{"_index":2236,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["subscribe((confirmed",{"_index":977,"title":{},"body":{"components/ChefComponent.html":{}}}],["subscribe((group",{"_index":1244,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["subscribe((language",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe((orderids",{"_index":986,"title":{},"body":{"components/ChefComponent.html":{}}}],["subscribe((product",{"_index":1632,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["subscribe((redirecturl",{"_index":1310,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["subscribe((selectedoptionstatus",{"_index":956,"title":{},"body":{"components/ChefComponent.html":{}}}],["subscribe(currency",{"_index":807,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{}}}],["subscribe(name",{"_index":242,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["subscribe(table",{"_index":2209,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["subtext",{"_index":997,"title":{},"body":{"components/ChefComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["success",{"_index":1004,"title":{},"body":{"components/ChefComponent.html":{},"components/OrderListItemComponent.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/UserAuthComponent.html":{}}}],["successresponse",{"_index":1840,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["support",{"_index":2390,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2391,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":2304,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":1456,"title":{},"body":{"injectables/NavigationService.html":{}}}],["switchmap",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStoreEffects.html":{},"injectables/ChefStoreEffects.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"injectables/OrderingStoreEffects.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/TableEditorComponent.html":{}}}],["switchmap(([action",{"_index":1075,"title":{},"body":{"injectables/ChefStoreEffects.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["switchmap((action",{"_index":690,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["switchmap((id",{"_index":1242,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{}}}],["switchmap((modulename",{"_index":450,"title":{},"body":{"components/AppComponent.html":{}}}],["switchmap((settings",{"_index":2079,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["switchmap(action",{"_index":2034,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["switchmap(id",{"_index":2207,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["switchmap(productid",{"_index":1735,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["t",{"_index":1157,"title":{},"body":{"injectables/DialogService.html":{},"miscellaneous/functions.html":{}}}],["tab",{"_index":1968,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["tabgroup",{"_index":1966,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["table",{"_index":144,"title":{"interfaces/Table.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"interfaces/ChefState.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"interfaces/OrderingState.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"components/RestaurantAuthComponent.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"miscellaneous/functions.html":{}}}],["table.id",{"_index":1411,"title":{},"body":{"components/ModifyComponent.html":{}}}],["table.name",{"_index":821,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ModifyComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["table.numberofseats",{"_index":1429,"title":{},"body":{"components/ModifyComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["tableeditorcomponent",{"_index":143,"title":{"components/TableEditorComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"modules/ResourceManagementModule.html":{},"modules/ResourceManagementRoutingModule.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["tablename",{"_index":824,"title":{},"body":{"components/CheckoutComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/TableEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["tablename.replace(/[^a",{"_index":826,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["tables",{"_index":567,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/ChefState.html":{},"components/ModifyComponent.html":{},"interfaces/OrderingState.html":{},"interfaces/ResourceManagementState.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"components/TableSelectorComponent.html":{}}}],["tableselectorcomponent",{"_index":145,"title":{"components/TableSelectorComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"modules/OrderingModule.html":{},"modules/OrderingRoutingModule.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["tabletoedit",{"_index":2193,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["takeuntil",{"_index":231,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":241,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableEditorComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe(this.groups",{"_index":1615,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["tap",{"_index":707,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"components/ChefComponent.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["tap((action",{"_index":685,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["tap(action",{"_index":1896,"title":{},"body":{"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["tap(console.log",{"_index":949,"title":{},"body":{"components/ChefComponent.html":{}}}],["target",{"_index":1625,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["td",{"_index":866,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"interfaces/FormControlData.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["text",{"_index":864,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ModifyComponent.html":{},"injectables/OrderingStoreEffects.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/UserAuthComponent.html":{}}}],["tfoot",{"_index":871,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["th",{"_index":868,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.actions$.pipe",{"_index":683,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"injectables/ChefStoreEffects.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["this.afauth.auth.currentuser.email",{"_index":235,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.afauth.auth.currentuser.uid",{"_index":1958,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["this.afauth.auth.signout",{"_index":2040,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["this.afs",{"_index":1996,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["this.afs.collection(`restaurants/${restaurantid}/groups`).valuechanges",{"_index":1994,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["this.afs.collection(`restaurants/${restaurantid}/products`).valuechanges",{"_index":1995,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["this.afs.collection(`restaurants/${restaurantid}/tables`).valuechanges",{"_index":1993,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["this.afs.createid",{"_index":1816,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["this.afs.doc(`settingsbyrestaurants/${restaurantid}`).valuechanges",{"_index":2002,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["this.afstorage.ref(`${restaurantid}/${image.name",{"_index":1825,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["this.alertonneworder",{"_index":951,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.amount",{"_index":328,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["this.askconfirmation(config).subscribe((confirmed",{"_index":1409,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.autherror",{"_index":1940,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["this.authservice.createrestaurant(action.restaurantcredentials).pipe(handlerestaurantauth",{"_index":691,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["this.authservice.joinrestaurant(action.restaurantcredentials).pipe(handlerestaurantauth",{"_index":694,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["this.authservice.loginwithemailandpassword(action.usercredentials).pipe(handleuserauth",{"_index":697,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["this.authservice.registerwithemailandpassword(action.usercredentials).pipe(handleuserauth",{"_index":700,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["this.availabletables",{"_index":2238,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["this.breakpointobserver.observe([\"(min",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cart",{"_index":791,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.cart$.pipe",{"_index":810,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.cd.markforcheck",{"_index":290,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.changesidenavmodeonscreensizechange",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["this.chefservice.updateorder(action.order",{"_index":1076,"title":{},"body":{"injectables/ChefStoreEffects.html":{}}}],["this.currency",{"_index":808,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{}}}],["this.currentordersid$.next(newordersid",{"_index":1019,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.currentordersid$.next(orderids",{"_index":987,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.dialog.open(component",{"_index":1147,"title":{},"body":{"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{}}}],["this.dialogref.close(this.selectedoptionstatus",{"_index":2184,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["this.dialogref.close(true",{"_index":1107,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["this.dialogservice",{"_index":952,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.dialogservice.opendialog(confirmationdialogcomponent",{"_index":1425,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.failedresources",{"_index":1298,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.fileformaterror",{"_index":1629,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.filterproducts",{"_index":1703,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.form",{"_index":1245,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["this.form.controls.allergens.value",{"_index":1664,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.form.controls.description.value",{"_index":1665,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.form.controls.groupname.value",{"_index":1261,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.form.controls.ingredients.value",{"_index":1663,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.form.controls.name.value",{"_index":1662,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.form.controls.numberofseats.value",{"_index":2213,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["this.form.controls.preparationtime.value",{"_index":1666,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.form.controls.price.value",{"_index":1667,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.form.controls.subgroups.value.filter((subgroup",{"_index":1259,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.form.controls.tablename.value",{"_index":2212,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["this.form.get(\"subgroup\").value",{"_index":1657,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.form.get(\"subgroups",{"_index":1235,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.form.get(\"subgroups\")).controls",{"_index":1238,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.forminitializer",{"_index":1227,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["this.getcorrespondinggroup(subgroupid",{"_index":1658,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.getneworders",{"_index":989,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.getrestaurantcredentials(this.restaurantformdata.form",{"_index":1943,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["this.getusercredentials(this.userformdata.form",{"_index":2270,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["this.group",{"_index":1232,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.groups",{"_index":1404,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.groups$.pipe",{"_index":1635,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.groups$.value.find((group",{"_index":1668,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.grouptoedit",{"_index":1229,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.grouptoedit.id",{"_index":1231,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.hasiteminpreparingstatus(order",{"_index":1022,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.http.post(create_restaurant_url",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(join_restaurant_url",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.image",{"_index":1623,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.imageloading",{"_index":1617,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.imagepreviewsrc",{"_index":1643,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.imagerequirederror",{"_index":1622,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.initcurrency",{"_index":795,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{}}}],["this.initcurrentordersid",{"_index":950,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.initform",{"_index":1246,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["this.initform(group",{"_index":1247,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.initform(product",{"_index":1633,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.initform(table",{"_index":2210,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["this.initializeapp",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initialvalue",{"_index":329,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["this.initpath",{"_index":237,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.initproduct",{"_index":1727,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["this.initredirecturl",{"_index":1302,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.initrestaurantformdata",{"_index":1939,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["this.initrestaurantname",{"_index":236,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.initsidenavdata",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initsubgroups",{"_index":1616,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.inittables",{"_index":2230,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["this.inittotalamount",{"_index":796,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.inituserformdata",{"_index":2269,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["this.isloading",{"_index":947,"title":{},"body":{"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["this.loading",{"_index":1563,"title":{},"body":{"components/ProductCardComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["this.loadresourcesandsettings",{"_index":1300,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.maxvalue",{"_index":332,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["this.minvalue",{"_index":330,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["this.mute",{"_index":1006,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.navservice.getnavdata(modulename",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["this.occupiedtables",{"_index":2241,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["this.opensnackbar(config",{"_index":2157,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["this.orderingservice.placeorder(action.order",{"_index":1520,"title":{},"body":{"injectables/OrderingStoreEffects.html":{}}}],["this.orders",{"_index":945,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.orders$.pipe",{"_index":1013,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.path",{"_index":246,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.platform.ready().then",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["this.playalertsound",{"_index":1007,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.product",{"_index":1621,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{}}}],["this.products",{"_index":1406,"title":{},"body":{"components/ModifyComponent.html":{},"components/ProductListComponent.html":{}}}],["this.producttoedit",{"_index":1618,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.producttoedit.id",{"_index":1620,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.redirecturl",{"_index":1303,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.resourcemanagement.addgroup(action.group",{"_index":1838,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.resourcemanagement.addproduct(action.product",{"_index":1874,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.resourcemanagement.addtable(action.name",{"_index":1846,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.resourcemanagement.deletegroup(action.id",{"_index":1851,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.resourcemanagement.deleteimage(action.imageurl).pipe",{"_index":1857,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.resourcemanagement.deleteproduct(action.id",{"_index":1855,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.resourcemanagement.deletetable(action.id",{"_index":1860,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.resourcemanagement.editgroup(action.group",{"_index":1863,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.resourcemanagement.editproduct(action.product",{"_index":1866,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.resourcemanagement.edittable(action.table",{"_index":1870,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.resourcemanagement.uploadimage(action.image",{"_index":1877,"title":{},"body":{"injectables/ResourceManagementStoreEffects.html":{}}}],["this.restaurantformdata",{"_index":1938,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["this.restaurantid",{"_index":1295,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.restaurantid$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((restaurantid",{"_index":1313,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.restaurantname",{"_index":243,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.restaurantservice.getgroups(action.restaurantid).pipe",{"_index":2057,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["this.restaurantservice.getordersbystatus(\"active",{"_index":2051,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["this.restaurantservice.getproducts(action.restaurantid).pipe",{"_index":2060,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["this.restaurantservice.getsettings(action.restaurantid).pipe",{"_index":2078,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["this.restaurantservice.gettables(action.restaurantid).pipe",{"_index":2067,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["this.restaurantservice.savecurrency(action.currency",{"_index":2088,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["this.restaurantservice.savelanguage(action.language",{"_index":2093,"title":{},"body":{"injectables/RestaurnatStoreSettingEffects.html":{}}}],["this.route.parammap",{"_index":1239,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["this.route.parammap.pipe",{"_index":1731,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["this.route.parammap.pipe(takeuntil(this.ngunsubscribe$)).subscribe(parammap",{"_index":1705,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.route.queryparammap.pipe(map((params",{"_index":1304,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.route.url.pipe(takeuntil(this.ngunsubscribe$)).subscribe(urlsegment",{"_index":244,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.router.events.pipe",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate([\"/loading",{"_index":1911,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["this.router.navigate([\"ordering/product",{"_index":1704,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.router.navigate([\"resource",{"_index":1421,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.router.navigate([action.navigateto",{"_index":686,"title":{},"body":{"injectables/AuthStoreEffects.html":{},"interfaces/RestaurantAuthResponse.html":{}}}],["this.router.navigatebyurl",{"_index":2030,"title":{},"body":{"injectables/RestaurnatStoreAuthEffects.html":{}}}],["this.router.navigatebyurl(\"admin",{"_index":1768,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["this.router.navigatebyurl(action.navigateto",{"_index":2065,"title":{},"body":{"injectables/RestaurnatStoreResourceEffects.html":{}}}],["this.selectedamount",{"_index":1728,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["this.selectedcurrency",{"_index":293,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.selectedlanguage",{"_index":289,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.selectedoptionstatus",{"_index":2182,"title":{},"body":{"components/StatusModifierComponent.html":{}}}],["this.selectedtable",{"_index":793,"title":{},"body":{"components/CheckoutComponent.html":{},"components/TableSelectorComponent.html":{}}}],["this.setlanguage",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setpreview(event.target.files[0",{"_index":1630,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.setsuccessonfinishedloading",{"_index":1301,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.sidenav.toggle",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["this.sidenavdata",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenavmode",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["this.snackbar.openfromcomponent(snackbarcomponent",{"_index":2145,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["this.snackbarservice.opendefaulterrorsnackbar(action.error",{"_index":1897,"title":{},"body":{"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["this.snackbarservice.opendefaulterrorsnackbar(action.text",{"_index":1540,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{}}}],["this.snackbarservice.opendefaultsuccesssnackbar(action.successresponse",{"_index":1899,"title":{},"body":{"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["this.snackbarservice.opendefaultsuccesssnackbar(action.text",{"_index":1544,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{}}}],["this.snackbarservice.opensnackbar(config",{"_index":1005,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.splashscreen.hide",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store",{"_index":239,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{}}}],["this.store$.dispatch(authstoreactions.createrestaurant",{"_index":1945,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["this.store$.dispatch(authstoreactions.joinusertorestaurant",{"_index":1946,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["this.store$.dispatch(authstoreactions.loginuser",{"_index":2272,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["this.store$.dispatch(authstoreactions.registeruser",{"_index":2271,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["this.store$.dispatch(authstoreactions.seterror",{"_index":1947,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["this.store$.dispatch(chefstoreactions.updateorder",{"_index":965,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.store$.dispatch(orderingstoreactions.addtocart",{"_index":1729,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["this.store$.dispatch(orderingstoreactions.placeorder",{"_index":804,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.store$.dispatch(orderingstoreactions.removealltemfromcart",{"_index":800,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.store$.dispatch(orderingstoreactions.removeitemfromcart",{"_index":799,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.store$.dispatch(orderingstoreactions.updatecartitemamount",{"_index":797,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.store$.dispatch(resourcemanagementstoreactions.deletegroup",{"_index":1413,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.store$.dispatch(resourcemanagementstoreactions.deleteproduct",{"_index":1417,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.store$.dispatch(resourcemanagementstoreactions.deletetable",{"_index":1410,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.store$.dispatch(restaurantstoresettingactions.saverestaurantcurrency",{"_index":291,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.store$.dispatch(restaurantstoresettingactions.saverestaurantlanguage",{"_index":287,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.store$.pipe",{"_index":1763,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["this.store$.pipe(select(authstoreselectors.selecterror",{"_index":1941,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["this.store$.pipe(select(authstoreselectors.selectisloading",{"_index":1942,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["this.store$.pipe(select(chefstoreselectores.selectisloading",{"_index":948,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.store$.pipe(select(orderingstoreselectors.selectcart",{"_index":792,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.store$.pipe(select(orderingstoreselectors.selectselectedtable",{"_index":794,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.store$.pipe(select(restaurantstoreselectors.selectactiveorders",{"_index":946,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.store$.pipe(select(restaurantstoreselectors.selectallproducts",{"_index":1407,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.store$.pipe(select(restaurantstoreselectors.selectgroups",{"_index":1405,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.store$.pipe(select(restaurantstoreselectors.selectproductbyid",{"_index":1736,"title":{},"body":{"components/ProductPageComponent.html":{}}}],["this.store$.pipe(select(restaurantstoreselectors.selectproducts",{"_index":1708,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.store$.pipe(select(restaurantstoreselectors.selecttables",{"_index":1402,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.store.dispatch(orderingstoreactions.setselectedtable",{"_index":2232,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["this.store.dispatch(resourcemanagementstoreactions.addgroup",{"_index":1233,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.store.dispatch(resourcemanagementstoreactions.addproduct",{"_index":1624,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.store.dispatch(resourcemanagementstoreactions.addtable",{"_index":2206,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["this.store.dispatch(resourcemanagementstoreactions.editgroup",{"_index":1230,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.store.dispatch(resourcemanagementstoreactions.editproduct",{"_index":1619,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.store.dispatch(resourcemanagementstoreactions.edittable",{"_index":2203,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["this.store.dispatch(restaurantstoreauthactions.loadrestaurantfromlocalstorage",{"_index":427,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(restaurantstoreauthactions.signout",{"_index":238,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LoadResourcesComponent.html":{}}}],["this.store.dispatch(restaurantstoreresourceactions.loadresources",{"_index":1314,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.store.dispatch(restaurantstoreresourceactions.loadresourcessuccess",{"_index":1312,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.store.dispatch(restaurantstoresettingactions.loadrestaurantsettings",{"_index":1315,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.store.pipe",{"_index":1908,"title":{},"body":{"guards/ResourcesLoadedGuard.html":{}}}],["this.store.pipe(select(orderingstoreselectors.selectselectedtable",{"_index":2231,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["this.store.pipe(select(resourcemanagementstoreselectores.selectisloading",{"_index":1228,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["this.store.pipe(select(restaurantstoreselectors.selectfailedresources",{"_index":1299,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.store.pipe(select(restaurantstoreselectors.selectgroupbyid",{"_index":1243,"title":{},"body":{"components/GroupEditorComponent.html":{}}}],["this.store.pipe(select(restaurantstoreselectors.selectgroups",{"_index":1460,"title":{},"body":{"injectables/NavigationService.html":{},"components/ProductEditorComponent.html":{}}}],["this.store.pipe(select(restaurantstoreselectors.selectid",{"_index":1296,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.store.pipe(select(restaurantstoreselectors.selectisloading",{"_index":1297,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["this.store.pipe(select(restaurantstoreselectors.selectoccupiedtablenames",{"_index":2234,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["this.store.pipe(select(restaurantstoreselectors.selectproductbyid",{"_index":1631,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.store.pipe(select(restaurantstoreselectors.selecttablebyid",{"_index":2208,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["this.store.pipe(select(restaurantstoreselectors.selecttables",{"_index":2233,"title":{},"body":{"components/TableSelectorComponent.html":{}}}],["this.subgroups",{"_index":1634,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["this.table",{"_index":2204,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["this.tables",{"_index":1401,"title":{},"body":{"components/ModifyComponent.html":{}}}],["this.tabletoedit",{"_index":2202,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["this.tabletoedit.id",{"_index":2205,"title":{},"body":{"components/TableEditorComponent.html":{}}}],["this.totalamount",{"_index":809,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.translate.setdefaultlang(this.defaultlanguage",{"_index":437,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(language",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["this.updateorder(order",{"_index":964,"title":{},"body":{"components/ChefComponent.html":{}}}],["this.useremail",{"_index":234,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.userformdata",{"_index":2268,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["this.userid",{"_index":1944,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["this.valuechange.emit(this.amount",{"_index":334,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["timestamp",{"_index":818,"title":{},"body":{"components/CheckoutComponent.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"miscellaneous/functions.html":{}}}],["timestamp.tostring",{"_index":825,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["title",{"_index":967,"title":{},"body":{"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"components/ProductCardComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"interfaces/SubNavigation.html":{}}}],["toggle",{"_index":1363,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["top",{"_index":73,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/UserAuthComponent.html":{}}}],["total",{"_index":817,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["totalamount",{"_index":761,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["tr",{"_index":872,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["trackordersby",{"_index":904,"title":{},"body":{"components/ChefComponent.html":{}}}],["trackordersby(_index",{"_index":921,"title":{},"body":{"components/ChefComponent.html":{}}}],["translate",{"_index":49,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["translate/core",{"_index":178,"title":{},"body":{"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/SnackbarModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":176,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/SnackbarModule.html":{}}}],["translatemodule.forchild",{"_index":188,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/SnackbarModule.html":{}}}],["translatemodule.forroot",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["transparent",{"_index":1114,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/StatusModifierComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["true",{"_index":1166,"title":{},"body":{"components/ExpansionPanelComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"injectables/OrderingService.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"guards/ResourcesLoadedGuard.html":{},"injectables/RestaurnatStoreResourceEffects.html":{}}}],["tryagain",{"_index":1278,"title":{},"body":{"components/LoadResourcesComponent.html":{}}}],["tslib",{"_index":2326,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthFormData.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/AuthStoreEffects.html":{},"components/ButtonOutlinedComponent.html":{},"interfaces/Cart.html":{},"interfaces/CartItem.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefService.html":{},"interfaces/ChefState.html":{},"injectables/ChefStoreEffects.html":{},"components/ConfirmationDialogComponent.html":{},"interfaces/DialogConfig.html":{},"injectables/DialogService.html":{},"interfaces/FormControlData.html":{},"interfaces/Group.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"interfaces/MainNavigation.html":{},"components/ModifyComponent.html":{},"interfaces/NavigationItem.html":{},"injectables/NavigationService.html":{},"interfaces/Order.html":{},"interfaces/OrderItem.html":{},"components/OrderListItemComponent.html":{},"injectables/OrderingService.html":{},"interfaces/OrderingState.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"interfaces/Product.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"guards/RedirectIfFullyAuthenticated.html":{},"injectables/ResourceManagementService.html":{},"interfaces/ResourceManagementState.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"guards/ResourcesLoadedGuard.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantAuthResponse.html":{},"interfaces/RestaurantCredentials.html":{},"injectables/RestaurantService.html":{},"interfaces/RestaurantState.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SidenavComponent.html":{},"interfaces/SidenavData.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"interfaces/SubNavigation.html":{},"interfaces/Subgroup.html":{},"interfaces/Table.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2394,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":1158,"title":{},"body":{"injectables/DialogService.html":{}}}],["update",{"_index":2353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update(previous",{"_index":2378,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateamount",{"_index":767,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["updateamount(amount",{"_index":778,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["updatecart",{"_index":2354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatecart(oldcart",{"_index":2371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatecartitemamount",{"_index":2355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatecartitemamount(oldcart",{"_index":2372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateditems",{"_index":959,"title":{},"body":{"components/ChefComponent.html":{}}}],["updatedorder",{"_index":963,"title":{},"body":{"components/ChefComponent.html":{}}}],["updatedorderitem",{"_index":958,"title":{},"body":{"components/ChefComponent.html":{}}}],["updatedorderitems",{"_index":925,"title":{},"body":{"components/ChefComponent.html":{}}}],["updateitemamount",{"_index":2356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateitemamount(items",{"_index":2373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateorder",{"_index":905,"title":{},"body":{"components/ChefComponent.html":{},"injectables/ChefService.html":{},"injectables/ChefStoreEffects.html":{}}}],["updateorder(oldorder",{"_index":924,"title":{},"body":{"components/ChefComponent.html":{}}}],["updateorder(order",{"_index":1067,"title":{},"body":{"injectables/ChefService.html":{}}}],["uploadimage",{"_index":1791,"title":{},"body":{"injectables/ResourceManagementService.html":{},"injectables/ResourceManagementStoreEffects.html":{}}}],["uploadimage(image",{"_index":1813,"title":{},"body":{"injectables/ResourceManagementService.html":{}}}],["urlsegment[0",{"_index":245,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["urlsegment[0].path",{"_index":247,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["usd",{"_index":300,"title":{},"body":{"components/AdminSettingsComponent.html":{},"modules/AppModule.html":{}}}],["useclass",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":147,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["userauthcomponent",{"_index":146,"title":{"components/UserAuthComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{},"index.html":{}}}],["usercredentials",{"_index":647,"title":{"interfaces/UserCredentials.html":{}},"body":{"injectables/AuthService.html":{},"components/UserAuthComponent.html":{},"interfaces/UserCredentials.html":{}}}],["useremail",{"_index":26,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{}}}],["userformdata",{"_index":2255,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["userid",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{},"components/RestaurantAuthComponent.html":{},"interfaces/RestaurantCredentials.html":{}}}],["usevalue",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":1762,"title":{},"body":{"guards/RedirectIfFullyAuthenticated.html":{}}}],["utils.effects",{"_index":1890,"title":{},"body":{"modules/ResourceManagementStoreModule.html":{}}}],["utils.effects.ts",{"_index":1535,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["utils.effects.ts:10",{"_index":1538,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["utils.effects.ts:13",{"_index":1545,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["utils.effects.ts:22",{"_index":1542,"title":{},"body":{"injectables/OrderingStoreUtilsEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{}}}],["validators",{"_index":1224,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/UserAuthComponent.html":{}}}],["validators.email",{"_index":2273,"title":{},"body":{"components/UserAuthComponent.html":{}}}],["validators.minlength(4",{"_index":1948,"title":{},"body":{"components/RestaurantAuthComponent.html":{}}}],["validators.minlength(6",{"_index":1949,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["validators.pattern(\"[0",{"_index":1656,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["validators.pattern(\"[1",{"_index":1652,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/TableEditorComponent.html":{}}}],["validators.required",{"_index":1255,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/TableEditorComponent.html":{},"components/UserAuthComponent.html":{}}}],["value",{"_index":214,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"injectables/AuthStoreEffects.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"injectables/ChefStoreEffects.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/OrderListItemComponent.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/OrderingStoreUtilsEffects.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/ResourceManagementUtilsStoreEffects.html":{},"injectables/RestaurnatStoreAuthEffects.html":{},"injectables/RestaurnatStoreResourceEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{},"components/SidenavComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{}}}],["valuechange",{"_index":317,"title":{},"body":{"components/AmountSelectorComponent.html":{}}}],["valuechanges",{"_index":2000,"title":{},"body":{"injectables/RestaurantService.html":{}}}],["var",{"_index":82,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ModifyComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["vertical",{"_index":993,"title":{},"body":{"components/ChefComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["verticalposition",{"_index":2150,"title":{},"body":{"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{}}}],["viewchild",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["viewchild(\"rotasidenav",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(\"sidenav",{"_index":1357,"title":{},"body":{"interfaces/MainNavigation.html":{},"interfaces/NavigationItem.html":{},"components/SidenavComponent.html":{},"interfaces/SubNavigation.html":{}}}],["viewchild('rotasidenav",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('sidenav",{"_index":2106,"title":{},"body":{"components/SidenavComponent.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminPageComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ChefComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"interfaces/SnackbarConfig.html":{},"interfaces/SnackbarPosition.html":{},"injectables/SnackbarService.html":{},"components/StatusModifierComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["weight",{"_index":76,"title":{},"body":{"components/AccountComponent.html":{},"components/AmountSelectorComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ExpansionPanelComponent.html":{},"components/OrderListItemComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusModifierComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["white",{"_index":1267,"title":{},"body":{"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{}}}],["width",{"_index":65,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminSettingsComponent.html":{},"components/AmountSelectorComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ButtonOutlinedComponent.html":{},"components/CheckoutComponent.html":{},"components/GroupEditorComponent.html":{},"components/LoadResourcesComponent.html":{},"components/ModifyComponent.html":{},"components/ProductCardComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductPageComponent.html":{},"components/RestaurantAuthComponent.html":{},"components/SidenavComponent.html":{},"components/TableEditorComponent.html":{},"components/TableSelectorComponent.html":{},"components/UserAuthComponent.html":{}}}],["withlatestfrom",{"_index":1080,"title":{},"body":{"injectables/ChefStoreEffects.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["withlatestfrom(this.store$.pipe(select(restaurantstoreselectors.selectid",{"_index":1074,"title":{},"body":{"injectables/ChefStoreEffects.html":{},"injectables/OrderingStoreEffects.html":{},"injectables/ResourceManagementStoreEffects.html":{},"injectables/RestaurnatStoreSettingEffects.html":{}}}],["wrap",{"_index":1031,"title":{},"body":{"components/ChefComponent.html":{},"components/GroupEditorComponent.html":{},"components/ModifyComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductListComponent.html":{},"components/TableSelectorComponent.html":{}}}],["wrapper",{"_index":1967,"title":{},"body":{"components/RestaurantAuthComponent.html":{},"components/UserAuthComponent.html":{}}}],["x",{"_index":854,"title":{},"body":{"components/CheckoutComponent.html":{},"components/OrderListItemComponent.html":{}}}],["y",{"_index":852,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["yellow",{"_index":1481,"title":{},"body":{"components/OrderListItemComponent.html":{}}}],["yes",{"_index":1159,"title":{},"body":{"injectables/DialogService.html":{},"components/GroupEditorComponent.html":{},"components/ProductEditorComponent.html":{},"injectables/SnackbarService.html":{},"components/TableEditorComponent.html":{}}}],["z0",{"_index":828,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["za",{"_index":827,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["zone.js",{"_index":2328,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":166,"title":{},"body":{"modules/AdminModule.html":{},"modules/AmountSelectorModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ButtonOutlinedModule.html":{},"modules/CheckoutModule.html":{},"modules/ChefModule.html":{},"modules/ConfirmationDialogModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/ExpansionPanelModule.html":{},"modules/LoadingIndicatorModule.html":{},"modules/OrderingModule.html":{},"modules/ProductPageModule.html":{},"modules/ResourceManagementModule.html":{},"modules/RootStoreModule.html":{},"modules/SnackbarModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/account/account.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-account\n            \n\n            \n                styleUrls\n                ./account.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                restaurantName\n                            \n                            \n                                userEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/account/account.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        restaurantName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/admin/account/account.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userEmail\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/admin/account/account.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        signOut\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/admin/account/account.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/account/account.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\n@Component({\n  selector: \"rota-account\",\n  templateUrl: \"./account.component.html\",\n  styleUrls: [\"./account.component.scss\"]\n})\nexport class AccountComponent implements OnInit {\n  @Input() userEmail: string;\n  @Input() restaurantName: string;\n  @Output() signOut = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      {{ \"ADMIN.ADMIN_PAGE.ACCOUNT.USER_EMAIL_TITLE\" | translate }}: {{ userEmail }}\n    \n    \n      {{ \"ADMIN.ADMIN_PAGE.ACCOUNT.RESTAURANT_NAME\" | translate }}: {{ restaurantName }}\n    \n    \n      {{ \"ADMIN.ADMIN_PAGE.ACCOUNT.SIGN_OUT\" | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./account.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 800px;\n}\n\n.details {\n  height: 400px;\n  width: 400px;\n}\n\n.credential {\n  padding: 1rem;\n  color: $color-primary-olive;\n}\n\n.button {\n  padding-top: 1rem;\n}\n\n.bolder {\n  font-weight: 600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \"ADMIN.ADMIN_PAGE.ACCOUNT.USER_EMAIL_TITLE\" | translate }}: {{ userEmail }}              {{ \"ADMIN.ADMIN_PAGE.ACCOUNT.RESTAURANT_NAME\" | translate }}: {{ restaurantName }}              {{ \"ADMIN.ADMIN_PAGE.ACCOUNT.SIGN_OUT\" | translate }}      '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAccountComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminSettingsComponent\n\nAdminSettingsComponent\n\nAdminModule -->\n\nAdminSettingsComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nButtonOutlinedModule\n\nButtonOutlinedModule\n\nAdminModule -->\n\nButtonOutlinedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountComponent\n                        \n                        \n                            AdminPageComponent\n                        \n                        \n                            AdminSettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            ButtonOutlinedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { ButtonOutlinedModule } from \"../shared/button-outlined/button-outlined.module\";\nimport { AccountComponent } from \"./account/account.component\";\nimport { AdminPageComponent } from \"./admin-page/admin-page.component\";\nimport { AdminRoutingModule } from \"./admin-routing.module\";\nimport { AdminSettingsComponent } from \"./admin-settings/admin-settings.component\";\n\n@NgModule({\n  declarations: [AdminPageComponent, AccountComponent, AdminSettingsComponent],\n  imports: [CommonModule, AdminRoutingModule, TranslateModule.forChild(), ButtonOutlinedModule, MatSelectModule]\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPageComponent.html":{"url":"components/AdminPageComponent.html","title":"component - AdminPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin-page/admin-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-admin-page\n            \n\n            \n                styleUrls\n                ./admin-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ngUnsubscribe$\n                            \n                            \n                                path\n                            \n                            \n                                restaurantName\n                            \n                            \n                                userEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initPath\n                            \n                            \n                                    Private\n                                initRestaurantName\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, store: Store, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin-page/admin-page.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-page/admin-page.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initRestaurantName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initRestaurantName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-page/admin-page.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-page/admin-page.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-page/admin-page.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-page/admin-page.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-page/admin-page.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restaurantName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-page/admin-page.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-page/admin-page.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { RestaurantStoreAuthActions, RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\n@Component({\n  selector: \"rota-admin-page\",\n  templateUrl: \"./admin-page.component.html\",\n  styleUrls: [\"./admin-page.component.scss\"]\n})\nexport class AdminPageComponent implements OnInit {\n  userEmail: string;\n  restaurantName: string;\n  path: string;\n  ngUnsubscribe$ = new Subject();\n\n  constructor(private afAuth: AngularFireAuth, private store: Store, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.userEmail = this.afAuth.auth.currentUser.email;\n    this.initRestaurantName();\n    this.initPath();\n  }\n\n  signOut(): void {\n    this.store.dispatch(RestaurantStoreAuthActions.signOut());\n  }\n\n  private initRestaurantName() {\n    this.store\n      .pipe(select(RestaurantStoreSelectors.selectName), takeUntil(this.ngUnsubscribe$))\n      .subscribe(name => (this.restaurantName = name));\n  }\n\n  private initPath() {\n    this.route.url.pipe(takeUntil(this.ngUnsubscribe$)).subscribe(urlSegment => {\n      if (urlSegment[0]) {\n        this.path = urlSegment[0].path;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./admin-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { AngularFireAuthGuard, redirectUnauthorizedTo } from \"@angular/fire/auth-guard\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ResourcesLoadedGuard } from \"@rota/core/services/resources-loaded.guard\";\nimport { AdminPageComponent } from \"./admin-page/admin-page.component\";\nimport { AdminSettingsComponent } from \"./admin-settings/admin-settings.component\";\n\nconst redirectUnauthorizedToAuthentication = () => redirectUnauthorizedTo([\"authentication\"]);\n\nconst routes: Routes = [\n  {\n    path: \"account\",\n    component: AdminPageComponent,\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  {\n    path: \"settings\",\n    component: AdminSettingsComponent,\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  { path: \"\", pathMatch: \"full\", redirectTo: \"account\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminSettingsComponent.html":{"url":"components/AdminSettingsComponent.html","title":"component - AdminSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin-settings/admin-settings.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-admin-settings\n            \n\n            \n                styleUrls\n                ./admin-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedCurrency\n                            \n                            \n                                selectedLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                saveCurrency\n                            \n                            \n                                saveLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store$: Store, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin-settings/admin-settings.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveCurrency\n                        \n                        \n                    \n                \n            \n            \n                \nsaveCurrency()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-settings/admin-settings.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveLanguage\n                        \n                        \n                    \n                \n            \n            \n                \nsaveLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-settings/admin-settings.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCurrency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-settings/admin-settings.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-settings/admin-settings.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { RestaurantStoreSettingActions } from \"@rota/root-store/restaurant-store/actions\";\n\n@Component({\n  selector: \"rota-admin-settings\",\n  templateUrl: \"./admin-settings.component.html\",\n  styleUrls: [\"./admin-settings.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdminSettingsComponent {\n  selectedLanguage: string;\n  selectedCurrency: string;\n\n  constructor(private store$: Store, private cd: ChangeDetectorRef) {}\n\n  saveLanguage(): void {\n    this.store$.dispatch(RestaurantStoreSettingActions.saveRestaurantLanguage({ language: this.selectedLanguage }));\n    this.cd.markForCheck();\n  }\n\n  saveCurrency(): void {\n    this.store$.dispatch(RestaurantStoreSettingActions.saveRestaurantCurrency({ currency: this.selectedCurrency }));\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ \"ADMIN.ADMIN_SETTINGS.SELECT_LANGUAGE\" | translate }}\n      \n        {{ \"ADMIN.ADMIN_SETTINGS.LANGUAGE_HUNGARIAN\" | translate }}\n        {{ \"ADMIN.ADMIN_SETTINGS.LANGUAGE_ENGLISH\" | translate }}\n      \n    \n  \n\n  \n    \n      {{ \"ADMIN.ADMIN_SETTINGS.SELECT_CURRENCY\" | translate }}\n      \n        HUF\n        EUR\n        USD\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./admin-settings.component.scss\n                \n                @import \"src/assets/styles/_colors.scss\";\n\n:host {\n  color: $color-primary-olive;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 80%;\n}\n\n.button {\n  width: 150px;\n  padding-top: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \"ADMIN.ADMIN_SETTINGS.SELECT_LANGUAGE\" | translate }}              {{ \"ADMIN.ADMIN_SETTINGS.LANGUAGE_HUNGARIAN\" | translate }}        {{ \"ADMIN.ADMIN_SETTINGS.LANGUAGE_ENGLISH\" | translate }}                        {{ \"ADMIN.ADMIN_SETTINGS.SELECT_CURRENCY\" | translate }}              HUF        EUR        USD            '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmountSelectorComponent.html":{"url":"components/AmountSelectorComponent.html","title":"component - AmountSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AmountSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/amount-selector/amount-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                amount-selector\n            \n\n            \n                styleUrls\n                ./amount-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./amount-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrease\n                            \n                            \n                                increase\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                initialValue\n                            \n                            \n                                maxValue\n                            \n                            \n                                minValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/amount-selector/amount-selector.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        initialValue\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/amount-selector/amount-selector.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/amount-selector/amount-selector.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/amount-selector/amount-selector.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/amount-selector/amount-selector.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decrease\n                        \n                        \n                    \n                \n            \n            \n                \ndecrease()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/amount-selector/amount-selector.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            increase\n                        \n                        \n                    \n                \n            \n            \n                \nincrease()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/amount-selector/amount-selector.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/amount-selector/amount-selector.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/amount-selector/amount-selector.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\n@Component({\n  selector: \"amount-selector\",\n  templateUrl: \"./amount-selector.component.html\",\n  styleUrls: [\"./amount-selector.component.scss\"]\n})\nexport class AmountSelectorComponent implements OnInit {\n  @Input() initialValue = 0;\n  @Input() minValue: number;\n  @Input() maxValue: number;\n  @Output() valueChange = new EventEmitter();\n\n  amount: number;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.amount = this.initialValue;\n  }\n\n  decrease(): void {\n    if (this.minValue && this.amount - 1  this.maxValue) {\n      return;\n    }\n    this.amount++;\n    this.valueChange.emit(this.amount);\n  }\n}\n\n    \n\n    \n        \n  remove\n  \n    {{ amount }}\n  \n  add\n\n\n    \n\n    \n                \n                    ./amount-selector.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.container {\n  display: flex;\n  align-items: center;\n  color: $color-primary-olive;\n  user-select: none;\n  margin: none;\n\n  .amount {\n    width: 1.8rem;\n    height: 1.8rem;\n    font-weight: 600;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 0 2px $color-disabled;\n  }\n\n  .material-icons {\n    font-size: 1.5rem;\n    padding: 1rem;\n    cursor: pointer;\n  }\n\n  .disabled {\n    color: $color-disabled;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  remove      {{ amount }}    add'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AmountSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AmountSelectorModule.html":{"url":"modules/AmountSelectorModule.html","title":"module - AmountSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AmountSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AmountSelectorModule\n\n\n\ncluster_AmountSelectorModule_declarations\n\n\n\ncluster_AmountSelectorModule_exports\n\n\n\n\nAmountSelectorComponent\n\nAmountSelectorComponent\n\n\n\nAmountSelectorModule\n\nAmountSelectorModule\n\nAmountSelectorModule -->\n\nAmountSelectorComponent->AmountSelectorModule\n\n\n\n\n\nAmountSelectorComponent \n\nAmountSelectorComponent \n\nAmountSelectorComponent  -->\n\nAmountSelectorModule->AmountSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/amount-selector/amount-selector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmountSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmountSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { AmountSelectorComponent } from \"./amount-selector.component\";\n\n@NgModule({\n  declarations: [AmountSelectorComponent],\n  imports: [CommonModule],\n  exports: [AmountSelectorComponent]\n})\nexport class AmountSelectorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultLanguage\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Private\n                                sidenav\n                            \n                            \n                                sidenavData$\n                            \n                            \n                                sidenavMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeSidenavModeOnScreenSizeChange\n                            \n                            \n                                initializeApp\n                            \n                            \n                                    Private\n                                initSidenavData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openSidenav\n                            \n                            \n                                    Private\n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, router: Router, navService: NavigationService, translate: TranslateService, store: Store, breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            changeSidenavModeOnScreenSizeChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeSidenavModeOnScreenSizeChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSidenavData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSidenavData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSidenav\n                        \n                        \n                    \n                \n            \n            \n                \nopenSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setLanguage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"hun\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SidenavComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('rotaSidenav', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenavData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"side\" | \"over\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { BreakpointObserver, BreakpointState } from \"@angular/cdk/layout\";\nimport { Component, OnDestroy, ViewChild } from \"@angular/core\";\nimport { NavigationStart, Router } from \"@angular/router\";\nimport { SplashScreen } from \"@ionic-native/splash-screen/ngx\";\nimport { StatusBar } from \"@ionic-native/status-bar/ngx\";\nimport { Platform } from \"@ionic/angular\";\nimport { select, Store } from \"@ngrx/store\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Observable, Subject } from \"rxjs\";\nimport { distinctUntilChanged, filter, map, switchMap, takeUntil } from \"rxjs/operators\";\nimport { AppState } from \"./core/models/app-state\";\nimport { NavigationService } from \"./core/sidenav/service/navigation.service\";\nimport { SidenavData } from \"./core/sidenav/sidenav-datas/sidenav-data.model\";\nimport { SidenavComponent } from \"./core/sidenav/sidenav.component\";\nimport { RestaurantStoreAuthActions, RestaurantStoreSelectors } from \"./root-store/restaurant-store\";\n\n@Component({\n  selector: \"rota-root\",\n  templateUrl: \"app.component.html\",\n  styleUrls: [\"app.component.scss\"],\n})\nexport class AppComponent implements OnDestroy {\n  @ViewChild(\"rotaSidenav\", { static: false }) private sidenav: SidenavComponent;\n  sidenavData$: Observable;\n  sidenavMode: \"side\" | \"over\";\n  private ngUnsubscribe$ = new Subject();\n  private defaultLanguage = \"hun\";\n\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private router: Router,\n    private navService: NavigationService,\n    private translate: TranslateService,\n    private store: Store,\n    private breakpointObserver: BreakpointObserver\n  ) {\n    this.initializeApp();\n    this.changeSidenavModeOnScreenSizeChange();\n    this.setLanguage();\n    this.initSidenavData();\n    this.store.dispatch(RestaurantStoreAuthActions.loadRestaurantFromLocalStorage());\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openSidenav() {\n    this.sidenav.toggle();\n  }\n\n  private changeSidenavModeOnScreenSizeChange(): void {\n    this.breakpointObserver.observe([\"(min-width: 599px)\"]).subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.sidenavMode = \"side\";\n      } else {\n        this.sidenavMode = \"over\";\n      }\n    });\n  }\n\n  private setLanguage(): void {\n    this.translate.setDefaultLang(this.defaultLanguage);\n    this.store\n      .pipe(\n        select(RestaurantStoreSelectors.selectLanguage),\n        filter((language) => !!language),\n        takeUntil(this.ngUnsubscribe$)\n      )\n      .subscribe((language) => this.translate.use(language));\n  }\n\n  private initSidenavData(): void {\n    this.sidenavData$ = this.router.events.pipe(\n      filter((event) => event instanceof NavigationStart),\n      map((navStart: NavigationStart) => navStart.url.split(\"/\")[1]),\n      distinctUntilChanged(),\n      switchMap((moduleName: string) => this.navService.getNavData(moduleName))\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n       \n      menu\n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.material-icons {\n  position: fixed;\n  top: 1rem;\n  left: 1rem;\n  color: $color-primary-olive;\n  font-size: 30px;\n  cursor: pointer;\n  background-color: rgba($color-bg-light, 0.6);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   menu      '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nRootStoreModule\n\nRootStoreModule\n\nAppModule -->\n\nRootStoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            RootStoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LayoutModule } from \"@angular/cdk/layout\";\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { InjectionToken, NgModule } from \"@angular/core\";\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireAuth, AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFireAuthGuard } from \"@angular/fire/auth-guard\";\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\nimport { AngularFireStorageModule } from \"@angular/fire/storage\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouteReuseStrategy } from \"@angular/router\";\nimport { SplashScreen } from \"@ionic-native/splash-screen/ngx\";\nimport { StatusBar } from \"@ionic-native/status-bar/ngx\";\nimport { IonicModule, IonicRouteStrategy } from \"@ionic/angular\";\nimport { IonicStorageModule } from \"@ionic/storage\";\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\nimport { environment } from \"../environments/environment.prod\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { CoreModule } from \"./core/core.module\";\nimport { RootStoreModule } from \"./root-store/root-store.module\";\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, \"/assets/i18n/\", \".json\");\n}\n\nconst DEFAULT_CURRENCY_CODE = new InjectionToken(\"DefaultCurrency\");\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot({ animated: false }),\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireStorageModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n    RootStoreModule,\n    CoreModule,\n    AngularFireAuthModule,\n    IonicStorageModule.forRoot(),\n    AppRoutingModule,\n    LayoutModule,\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: DEFAULT_CURRENCY_CODE, useValue: \"USD\" },\n    AngularFireAuthGuard,\n    AngularFireAuth,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { AngularFireAuthGuard, redirectUnauthorizedTo } from \"@angular/fire/auth-guard\";\nimport { PreloadAllModules, RouterModule, Routes } from \"@angular/router\";\nimport { LoadResourcesComponent } from \"./core/load-resources/load-resources.component\";\n\nconst redirectUnauthorizedToAuthentication = () => redirectUnauthorizedTo([\"authentication\"]);\n\nconst routes: Routes = [\n  {\n    path: \"loading-resources\",\n    component: LoadResourcesComponent,\n    canActivate: [AngularFireAuthGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  {\n    path: \"authentication\",\n    loadChildren: () => \"import(\\\"./auth/auth.module\\\").then(m => m.AuthModule)\"\n  },\n  {\n    path: \"admin\",\n    loadChildren: () => \"import(\\\"./admin/admin.module\\\").then(m => m.AdminModule)\"\n  },\n  {\n    path: \"resource-management\",\n    loadChildren: () => \"import(\\\"./resource-management/resource-management.module\\\").then(m => m.ResourceManagementModule)\"\n  },\n  {\n    path: \"ordering\",\n    loadChildren: () => \"import(\\\"./ordering/ordering.module\\\").then(m => m.OrderingModule)\"\n  },\n  {\n    path: \"chef\",\n    loadChildren: () => \"import(\\\"./chef/chef.module\\\").then(m => m.ChefModule)\"\n  },\n  { path: \"\", redirectTo: \"authentication\", pathMatch: \"full\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/app-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                                \n                                        ordering\n                                \n                                \n                                        resourceManagement\n                                \n                                \n                                        restaurant\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering\n                                    \n                                \n                                \n                                    \n                                        ordering:         OrderingState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderingState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resourceManagement\n                                    \n                                \n                                \n                                    \n                                        resourceManagement:         ResourceManagementState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceManagementState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        restaurant\n                                    \n                                \n                                \n                                    \n                                        restaurant:         RestaurantState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RestaurantState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Cart } from \"./cart\";\nimport { Group } from \"./group\";\nimport { Order } from \"./order\";\nimport { Product } from \"./product\";\nimport { Table } from \"./table\";\n\nexport interface AppState {\n  restaurant: RestaurantState;\n  auth: AuthState;\n  ordering: OrderingState;\n  resourceManagement: ResourceManagementState;\n}\n\nexport interface RestaurantState {\n  id: string;\n  name: string;\n  language: string;\n  currency: string;\n  tables: Table[];\n  groups: Group[];\n  products: Product[];\n  activeOrders: Order[];\n  isLoading: { tables: boolean; groups: boolean; products: boolean };\n  failedResources: { tables?: boolean; groups?: boolean; products?: boolean };\n  areResourcesLoaded: boolean;\n}\n\nexport interface AuthState {\n  error?: any;\n  isLoading?: boolean;\n}\n\nexport interface OrderingState {\n  selectedTable: Table;\n  cart: Cart;\n}\n\nexport interface ResourceManagementState {\n  isLoading?: boolean;\n}\n\nexport interface ChefState {\n  isLoading?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthFormComponent.html":{"url":"components/AuthFormComponent.html","title":"component - AuthFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth-form/auth-form.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                auth-form\n            \n\n            \n                styleUrls\n                ./auth-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                authFormData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        authFormData\n                    \n                \n                \n                    \n                        Type :         AuthFormData\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/auth-form/auth-form.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\nexport interface AuthFormData {\n  form: FormGroup;\n  formControls: FormControlData[];\n}\n\nexport interface FormControlData {\n  type: string;\n  name: string;\n  placeholder: string;\n  icon: string;\n  hint?: string;\n}\n\n@Component({\n  selector: \"auth-form\",\n  templateUrl: \"./auth-form.component.html\",\n  styleUrls: [\"./auth-form.component.scss\"]\n})\nexport class AuthFormComponent {\n  @Input() authFormData: AuthFormData;\n}\n\n    \n\n    \n        \n  \n    \n    controlData.icon\n    {{ controlData.hint | translate }}\n  \n\n\n    \n\n    \n                \n                    ./auth-form.component.scss\n                \n                form {\n  mat-form-field {\n    width: 100%;\n    margin-bottom: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          controlData.icon    {{ controlData.hint | translate }}  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthFormData.html":{"url":"interfaces/AuthFormData.html","title":"interface - AuthFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-form/auth-form.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        form\n                                \n                                \n                                        formControls\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        form\n                                    \n                                \n                                \n                                    \n                                        form:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formControls\n                                    \n                                \n                                \n                                    \n                                        formControls:         FormControlData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormControlData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\nexport interface AuthFormData {\n  form: FormGroup;\n  formControls: FormControlData[];\n}\n\nexport interface FormControlData {\n  type: string;\n  name: string;\n  placeholder: string;\n  icon: string;\n  hint?: string;\n}\n\n@Component({\n  selector: \"auth-form\",\n  templateUrl: \"./auth-form.component.html\",\n  styleUrls: [\"./auth-form.component.scss\"]\n})\nexport class AuthFormComponent {\n  @Input() authFormData: AuthFormData;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthFormComponent\n\nAuthFormComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthFormComponent->AuthModule\n\n\n\n\n\nRestaurantAuthComponent\n\nRestaurantAuthComponent\n\nAuthModule -->\n\nRestaurantAuthComponent->AuthModule\n\n\n\n\n\nUserAuthComponent\n\nUserAuthComponent\n\nAuthModule -->\n\nUserAuthComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthStoreModule\n\nAuthStoreModule\n\nAuthModule -->\n\nAuthStoreModule->AuthModule\n\n\n\n\n\nButtonOutlinedModule\n\nButtonOutlinedModule\n\nAuthModule -->\n\nButtonOutlinedModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthFormComponent\n                        \n                        \n                            RestaurantAuthComponent\n                        \n                        \n                            UserAuthComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            AuthStoreModule\n                        \n                        \n                            ButtonOutlinedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireDatabaseModule } from \"@angular/fire/database\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { ButtonOutlinedModule } from \"../shared/button-outlined/button-outlined.module\";\nimport { AuthFormComponent } from \"./auth-form/auth-form.component\";\nimport { AuthRoutingModule } from \"./auth-routing.module\";\nimport { RestaurantAuthComponent } from \"./restaurant-auth/restaurant-auth.component\";\nimport { AuthService } from \"./services/auth.service\";\nimport { RedirectIfFullyAuthenticated } from \"./services/authenticated.guard\";\nimport { AuthStoreModule } from \"./store/auth-store.module\";\nimport { UserAuthComponent } from \"./user-auth/user-auth.component\";\n\n@NgModule({\n  declarations: [UserAuthComponent, RestaurantAuthComponent, AuthFormComponent],\n  providers: [AuthService, RedirectIfFullyAuthenticated],\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    TranslateModule.forChild(),\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    AngularFireDatabaseModule,\n    AngularFireModule,\n    ButtonOutlinedModule,\n    AuthStoreModule,\n\n    AuthRoutingModule,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { AngularFireAuthGuard, redirectLoggedInTo, redirectUnauthorizedTo } from \"@angular/fire/auth-guard\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { RestaurantAuthComponent } from \"./restaurant-auth/restaurant-auth.component\";\nimport { RedirectIfFullyAuthenticated } from \"./services/authenticated.guard\";\nimport { UserAuthComponent } from \"./user-auth/user-auth.component\";\n\nconst redirectUnauthorizedToUserAuth = () => redirectUnauthorizedTo([\"authentication/user\"]);\nconst redirectLoggedInToRestaurantAuth = () => redirectLoggedInTo([\"authentication/restaurant\"]);\n\nconst routes: Routes = [\n  {\n    path: \"user\",\n    component: UserAuthComponent,\n    canActivate: [AngularFireAuthGuard],\n    data: { authGuardPipe: redirectLoggedInToRestaurantAuth }\n  },\n  {\n    path: \"restaurant\",\n    component: RestaurantAuthComponent,\n    canActivate: [AngularFireAuthGuard, RedirectIfFullyAuthenticated],\n    data: { authGuardPipe: redirectUnauthorizedToUserAuth }\n  },\n  { path: \"\", redirectTo: \"user\", pathMatch: \"full\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRestaurant\n                            \n                            \n                                joinRestaurant\n                            \n                            \n                                loginWithEmailAndPassword\n                            \n                            \n                                registerWithEmailAndPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createRestaurant\n                        \n                        \n                    \n                \n            \n            \n                \ncreateRestaurant(undefined: RestaurantCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RestaurantCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            joinRestaurant\n                        \n                        \n                    \n                \n            \n            \n                \njoinRestaurant(undefined: RestaurantCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RestaurantCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginWithEmailAndPassword\n                        \n                        \n                    \n                \n            \n            \n                \nloginWithEmailAndPassword(undefined: UserCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                UserCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerWithEmailAndPassword\n                        \n                        \n                    \n                \n            \n            \n                \nregisterWithEmailAndPassword(undefined: UserCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                UserCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { from, Observable } from \"rxjs\";\nimport { RestaurantCredentials } from \"../models/restaurant-credentials.model\";\nimport { UserCredentials } from \"../models/user-credentials.model\";\n\nconst CREATE_RESTAURANT_URL = \"https://us-central1-ordering-app-fc78f.cloudfunctions.net/createRestaurant\";\nconst JOIN_RESTAURANT_URL = \"https://us-central1-ordering-app-fc78f.cloudfunctions.net/joinRestaurant\";\n\n@Injectable()\nexport class AuthService {\n  constructor(private afAuth: AngularFireAuth, private http: HttpClient) {}\n\n  registerWithEmailAndPassword({ email, password }: UserCredentials) {\n    return from(this.afAuth.auth.createUserWithEmailAndPassword(email, password));\n  }\n\n  loginWithEmailAndPassword({ email, password }: UserCredentials) {\n    return from(this.afAuth.auth.signInWithEmailAndPassword(email, password));\n  }\n\n  createRestaurant({ name, password, userId }: RestaurantCredentials): Observable {\n    const params = new HttpParams().set(\"name\", name).set(\"password\", password).set(\"creator\", userId);\n    return this.http.post(CREATE_RESTAURANT_URL, params);\n  }\n\n  joinRestaurant({ name, password, userId }: RestaurantCredentials): Observable {\n    const params = new HttpParams().set(\"name\", name).set(\"password\", password).set(\"userId\", userId);\n\n    return this.http.post(JOIN_RESTAURANT_URL, params);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/app-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        isLoading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Cart } from \"./cart\";\nimport { Group } from \"./group\";\nimport { Order } from \"./order\";\nimport { Product } from \"./product\";\nimport { Table } from \"./table\";\n\nexport interface AppState {\n  restaurant: RestaurantState;\n  auth: AuthState;\n  ordering: OrderingState;\n  resourceManagement: ResourceManagementState;\n}\n\nexport interface RestaurantState {\n  id: string;\n  name: string;\n  language: string;\n  currency: string;\n  tables: Table[];\n  groups: Group[];\n  products: Product[];\n  activeOrders: Order[];\n  isLoading: { tables: boolean; groups: boolean; products: boolean };\n  failedResources: { tables?: boolean; groups?: boolean; products?: boolean };\n  areResourcesLoaded: boolean;\n}\n\nexport interface AuthState {\n  error?: any;\n  isLoading?: boolean;\n}\n\nexport interface OrderingState {\n  selectedTable: Table;\n  cart: Cart;\n}\n\nexport interface ResourceManagementState {\n  isLoading?: boolean;\n}\n\nexport interface ChefState {\n  isLoading?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthStoreEffects.html":{"url":"injectables/AuthStoreEffects.html","title":"injectable - AuthStoreEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthStoreEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/store/auth.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authorizationSuccess$\n                            \n                            \n                                createRestaurant$\n                            \n                            \n                                joinUserToRestaurant$\n                            \n                            \n                                loginUser$\n                            \n                            \n                                registerUser$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/store/auth.effects.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorizationSuccess$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.authSuccess),\n      tap((action) => this.router.navigate([action.navigateTo])),\n      map(() => AuthStoreActions.setIsLoading({ isLoading: false }))\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/store/auth.effects.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRestaurant$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.createRestaurant),\n      switchMap((action) => this.authService.createRestaurant(action.restaurantCredentials).pipe(handleRestaurantAuth))\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/store/auth.effects.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            joinUserToRestaurant$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.joinUserToRestaurant),\n      switchMap((action) => this.authService.joinRestaurant(action.restaurantCredentials).pipe(handleRestaurantAuth))\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/store/auth.effects.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginUser$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.loginUser),\n      switchMap((action) => this.authService.loginWithEmailAndPassword(action.userCredentials).pipe(handleUserAuth))\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/store/auth.effects.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerUser$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.registerUser),\n      switchMap((action) => this.authService.registerWithEmailAndPassword(action.userCredentials).pipe(handleUserAuth))\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/store/auth.effects.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { RestaurantStoreAuthActions } from \"@rota/root-store/restaurant-store\";\nimport { Observable, of, pipe } from \"rxjs\";\nimport { catchError, concatMap, map, switchMap, tap } from \"rxjs/operators\";\nimport { AuthService } from \"../services/auth.service\";\nimport * as AuthStoreActions from \"./auth.actions\";\n\ninterface RestaurantAuthResponse {\n  status: string;\n  data: {\n    restaurant: {\n      restaurantId: string;\n      restaurantName: string;\n    };\n  };\n}\n\nconst handleUserAuth = pipe(\n  map(() => AuthStoreActions.authSuccess({ navigateTo: \"authentication/restaurant\" })),\n  catchError((error) => of(AuthStoreActions.setError({ error })))\n);\n\nconst handleRestaurantAuth = pipe(\n  concatMap((response: RestaurantAuthResponse) => {\n    return [\n      RestaurantStoreAuthActions.saveRestaurantToLocalStorage({\n        id: response.data.restaurant.restaurantId,\n        name: response.data.restaurant.restaurantName,\n      }),\n      AuthStoreActions.authSuccess({ navigateTo: \"loading-resources\" }),\n    ];\n  }),\n  catchError((error) => of(AuthStoreActions.setError({ error: error.error })))\n);\n\n@Injectable()\nexport class AuthStoreEffects {\n  constructor(private actions$: Actions, private authService: AuthService, private router: Router) {}\n\n  registerUser$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.registerUser),\n      switchMap((action) => this.authService.registerWithEmailAndPassword(action.userCredentials).pipe(handleUserAuth))\n    )\n  );\n\n  loginUser$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.loginUser),\n      switchMap((action) => this.authService.loginWithEmailAndPassword(action.userCredentials).pipe(handleUserAuth))\n    )\n  );\n\n  createRestaurant$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.createRestaurant),\n      switchMap((action) => this.authService.createRestaurant(action.restaurantCredentials).pipe(handleRestaurantAuth))\n    )\n  );\n\n  joinUserToRestaurant$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.joinUserToRestaurant),\n      switchMap((action) => this.authService.joinRestaurant(action.restaurantCredentials).pipe(handleRestaurantAuth))\n    )\n  );\n\n  authorizationSuccess$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.authSuccess),\n      tap((action) => this.router.navigate([action.navigateTo])),\n      map(() => AuthStoreActions.setIsLoading({ isLoading: false }))\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthStoreModule.html":{"url":"modules/AuthStoreModule.html","title":"module - AuthStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthStoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/store/auth-store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { AuthStoreEffects } from \"./auth.effects\";\nimport { authReducer } from \"./auth.reducer\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, StoreModule.forFeature(\"auth\", authReducer), EffectsModule.forFeature([AuthStoreEffects])]\n})\nexport class AuthStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonOutlinedComponent.html":{"url":"components/ButtonOutlinedComponent.html","title":"component - ButtonOutlinedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonOutlinedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/button-outlined/button-outlined.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                button-outlined\n            \n\n            \n                styleUrls\n                ./button-outlined.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button-outlined.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button-outlined/button-outlined.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button-outlined/button-outlined.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"button-outlined\",\n  templateUrl: \"./button-outlined.component.html\",\n  styleUrls: [\"./button-outlined.component.scss\"]\n})\nexport class ButtonOutlinedComponent {\n  @Input() disabled: boolean;\n  @Input() loading: boolean;\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./button-outlined.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\nbutton {\n  width: 100%;\n  background: none;\n  color: $color-primary-olive;\n  outline: none;\n  padding: 0.5rem;\n  border: 1px solid $color-primary-olive;\n  font-weight: 500;\n\n  &:disabled {\n    color: $color-disabled;\n    border: 1px solid $color-disabled;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonOutlinedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ButtonOutlinedModule.html":{"url":"modules/ButtonOutlinedModule.html","title":"module - ButtonOutlinedModule","body":"\n                   \n\n\n\n\n    Modules\n    ButtonOutlinedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ButtonOutlinedModule\n\n\n\ncluster_ButtonOutlinedModule_declarations\n\n\n\ncluster_ButtonOutlinedModule_imports\n\n\n\ncluster_ButtonOutlinedModule_exports\n\n\n\n\nButtonOutlinedComponent\n\nButtonOutlinedComponent\n\n\n\nButtonOutlinedModule\n\nButtonOutlinedModule\n\nButtonOutlinedModule -->\n\nButtonOutlinedComponent->ButtonOutlinedModule\n\n\n\n\n\nButtonOutlinedComponent \n\nButtonOutlinedComponent \n\nButtonOutlinedComponent  -->\n\nButtonOutlinedModule->ButtonOutlinedComponent \n\n\n\n\n\nLoadingIndicatorModule\n\nLoadingIndicatorModule\n\nButtonOutlinedModule -->\n\nLoadingIndicatorModule->ButtonOutlinedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/button-outlined/button-outlined.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonOutlinedComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoadingIndicatorModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonOutlinedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { LoadingIndicatorModule } from \"../loading-indicator/loading-indicator.module\";\nimport { ButtonOutlinedComponent } from \"./button-outlined.component\";\n\n@NgModule({\n  declarations: [ButtonOutlinedComponent],\n  imports: [CommonModule, LoadingIndicatorModule],\n  exports: [ButtonOutlinedComponent]\n})\nexport class ButtonOutlinedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cart.html":{"url":"interfaces/Cart.html","title":"interface - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/cart.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     CartItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CartItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Product } from \"@rota/core/models/product\";\n\nexport interface Cart {\n  items: CartItem[];\n}\n\nexport interface CartItem {\n  product: Product;\n  amount: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem.html":{"url":"interfaces/CartItem.html","title":"interface - CartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/cart.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        amount\n                                \n                                \n                                        product\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                    \n                                \n                                \n                                    \n                                        product:         Product\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Product } from \"@rota/core/models/product\";\n\nexport interface Cart {\n  items: CartItem[];\n}\n\nexport interface CartItem {\n  product: Product;\n  amount: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckoutComponent.html":{"url":"components/CheckoutComponent.html","title":"component - CheckoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ordering/checkout/checkout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-checkout\n            \n\n            \n                styleUrls\n                ./checkout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart$\n                            \n                            \n                                currency\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                selectedTable$\n                            \n                            \n                                totalAmount$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initCurrency\n                            \n                            \n                                    Private\n                                initTotalAmount\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                placeOrder\n                            \n                            \n                                removeAlltemFromCart\n                            \n                            \n                                removeItemFromCart\n                            \n                            \n                                updateAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ordering/checkout/checkout.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initCurrency\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initCurrency()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/checkout/checkout.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTotalAmount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTotalAmount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/checkout/checkout.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/checkout/checkout.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/checkout/checkout.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            placeOrder\n                        \n                        \n                    \n                \n            \n            \n                \nplaceOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/checkout/checkout.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAlltemFromCart\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAlltemFromCart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/checkout/checkout.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeItemFromCart\n                        \n                        \n                    \n                \n            \n            \n                \nremoveItemFromCart(item: CartItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/checkout/checkout.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                CartItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAmount\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAmount(amount: number, item: CartItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/checkout/checkout.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                CartItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cart$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/checkout/checkout.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/checkout/checkout.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/checkout/checkout.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTable$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/checkout/checkout.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalAmount$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/checkout/checkout.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Cart, CartItem, Order, OrderItem } from \"@rota/core/models\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { Table } from \"@rota/core/models/table\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { combineLatest, Observable, Subject } from \"rxjs\";\nimport { first, map, takeUntil } from \"rxjs/operators\";\nimport { OrderingStoreActions, OrderingStoreSelectors } from \"../store\";\n\n@Component({\n  selector: \"rota-checkout\",\n  templateUrl: \"./checkout.component.html\",\n  styleUrls: [\"./checkout.component.scss\"]\n})\nexport class CheckoutComponent implements OnInit, OnDestroy {\n  cart$: Observable;\n  selectedTable$: Observable;\n  totalAmount$: Observable;\n  currency: string;\n  private ngUnsubscribe$ = new Subject();\n\n  constructor(private store$: Store) {}\n\n  ngOnInit(): void {\n    this.cart$ = this.store$.pipe(select(OrderingStoreSelectors.selectCart));\n    this.selectedTable$ = this.store$.pipe(select(OrderingStoreSelectors.selectSelectedTable));\n    this.initCurrency();\n    this.initTotalAmount();\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n  }\n\n  updateAmount(amount: number, item: CartItem): void {\n    this.store$.dispatch(OrderingStoreActions.updateCartItemAmount({ cartItem: { amount, product: item.product } }));\n  }\n\n  removeItemFromCart(item: CartItem): void {\n    this.store$.dispatch(OrderingStoreActions.removeItemFromCart({ cartItem: item }));\n  }\n\n  removeAlltemFromCart(): void {\n    this.store$.dispatch(OrderingStoreActions.removeAlltemFromCart());\n  }\n\n  placeOrder(): void {\n    combineLatest([this.cart$, this.selectedTable$])\n      .pipe(first())\n      .subscribe(([cart, table]) => this.store$.dispatch(OrderingStoreActions.placeOrder({ order: convertToOrder(cart, table) })));\n  }\n\n  private initCurrency(): void {\n    this.store$\n      .pipe(select(RestaurantStoreSelectors.selectCurrency), takeUntil(this.ngUnsubscribe$))\n      .subscribe(currency => (this.currency = currency));\n  }\n\n  private initTotalAmount(): void {\n    this.totalAmount$ = this.cart$.pipe(\n      map(cart => {\n        if (cart.items.length === 0) {\n          return 0;\n        }\n\n        return cart.items.map(item => item.product.price * item.amount).reduce((total, curr) => total + curr);\n      })\n    );\n  }\n}\n\nfunction convertToOrder(cart: Cart, table: Table): Order {\n  const timestamp = Date.now();\n  const order: Order = {\n    id: generateId(timestamp, table.name),\n    timestamp,\n    items: convertToOrderItems(cart.items),\n    status: \"active\",\n    tableName: table.name\n  };\n  return order;\n}\n\nfunction generateId(timestamp: number, tableName: string): string {\n  return timestamp.toString() + tableName.replace(/[^a-zA-Z0-9_]+/g, \"\");\n}\n\nfunction convertToOrderItems(cartItems: CartItem[]): OrderItem[] {\n  return cartItems.map(item => {\n    return {\n      amount: item.amount,\n      name: item.product.name,\n      status: \"preparing\"\n    };\n  });\n}\n\n    \n\n    \n         0; else cartIsEmpty\">\n  \n    \n      \n        {{ \"ORDERING.CHECKOUT.TABLE_HEADER_NAME\" | translate }}\n        {{ \"ORDERING.CHECKOUT.TABLE_HEADER_AMOUNT\" | translate }}\n        {{ \"ORDERING.CHECKOUT.TABLE_HEADER_PRICE_PER_UNIT\" | translate }}\n        {{ \"ORDERING.CHECKOUT.TABLE_HEADER_PRICE_ALL\" | translate }}\n        \n      \n    \n    \n      \n        {{ item.product.name }}\n        \n          \n        \n        {{ item.product.price }}\n        {{ item.product.price * item.amount }}\n        remove_shopping_cart\n      \n    \n    \n      \n        {{ (selectedTable$ | async)?.name }}\n        \n        {{ \"ORDERING.CHECKOUT.TABLE_FOOTER_TOTAL_PRICE\" | translate }}:\n        {{ totalAmount$ | async | currency: currency:\"symbol-narrow\":\"0.2-2\" }}\n        remove_shopping_cart\n      \n    \n  \n\n  \n    \n      {{ \"ORDERING.CHECKOUT.BUTTON_PLACE_ORDER\" | translate }}\n    \n    \n      \n        {{ \"ORDERING.CHECKOUT.TABLE_NOT_SELECTED\" | translate }}\n      \n    \n  \n\n\n\n  \n    {{ \"ORDERING.CHECKOUT.EMPTY_CART\" | translate }}\n  \n\n\n    \n\n    \n                \n                    ./checkout.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n:host {\n  color: $color-primary-olive;\n  padding-top: 3rem;\n  overflow-y: auto;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n  width: 100%;\n  overflow-x: auto;\n}\n\n@media only screen and (max-width: 600px) {\n  .container {\n    align-items: flex-start;\n  }\n}\n\ntable {\n  width: 70%;\n  border-collapse: separate;\n  border-spacing: 0 1rem;\n  text-align: left;\n  table-layout: auto;\n\n  td {\n    border-bottom: 1px solid $color-grey;\n  }\n}\n\nth {\n  font-size: 1.1rem;\n  padding-bottom: 1rem;\n  padding-right: 1rem;\n}\n\ntfoot {\n  tr {\n    font-size: 1.2rem;\n  }\n\n  td {\n    border: none;\n  }\n}\n\n.name {\n  color: $color-secondary-orange;\n}\n\n.button {\n  padding-top: 2rem;\n  width: 40%;\n  align-self: center;\n}\n\n.select-table-sign {\n  color: $color-danger;\n}\n\n.material-icons {\n  cursor: pointer;\n  user-select: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0; else cartIsEmpty\">                    {{ \"ORDERING.CHECKOUT.TABLE_HEADER_NAME\" | translate }}        {{ \"ORDERING.CHECKOUT.TABLE_HEADER_AMOUNT\" | translate }}        {{ \"ORDERING.CHECKOUT.TABLE_HEADER_PRICE_PER_UNIT\" | translate }}        {{ \"ORDERING.CHECKOUT.TABLE_HEADER_PRICE_ALL\" | translate }}                                    {{ item.product.name }}                                  {{ item.product.price }}        {{ item.product.price * item.amount }}        remove_shopping_cart                            {{ (selectedTable$ | async)?.name }}                {{ \"ORDERING.CHECKOUT.TABLE_FOOTER_TOTAL_PRICE\" | translate }}:        {{ totalAmount$ | async | currency: currency:\"symbol-narrow\":\"0.2-2\" }}        remove_shopping_cart                        {{ \"ORDERING.CHECKOUT.BUTTON_PLACE_ORDER\" | translate }}                      {{ \"ORDERING.CHECKOUT.TABLE_NOT_SELECTED\" | translate }}                  {{ \"ORDERING.CHECKOUT.EMPTY_CART\" | translate }}  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckoutModule.html":{"url":"modules/CheckoutModule.html","title":"module - CheckoutModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CheckoutModule\n\n\n\ncluster_CheckoutModule_declarations\n\n\n\ncluster_CheckoutModule_imports\n\n\n\n\nCheckoutComponent\n\nCheckoutComponent\n\n\n\nCheckoutModule\n\nCheckoutModule\n\nCheckoutModule -->\n\nCheckoutComponent->CheckoutModule\n\n\n\n\n\nAmountSelectorModule\n\nAmountSelectorModule\n\nCheckoutModule -->\n\nAmountSelectorModule->CheckoutModule\n\n\n\n\n\nButtonOutlinedModule\n\nButtonOutlinedModule\n\nCheckoutModule -->\n\nButtonOutlinedModule->CheckoutModule\n\n\n\n\n\nCheckoutRoutingModule\n\nCheckoutRoutingModule\n\nCheckoutModule -->\n\nCheckoutRoutingModule->CheckoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ordering/checkout/checkout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckoutComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AmountSelectorModule\n                        \n                        \n                            ButtonOutlinedModule\n                        \n                        \n                            CheckoutRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { AmountSelectorModule } from \"@rota/shared/amount-selector\";\nimport { ButtonOutlinedModule } from \"@rota/shared/button-outlined/button-outlined.module\";\nimport { CheckoutRoutingModule } from \"./checkout-routing.module\";\nimport { CheckoutComponent } from \"./checkout.component\";\n\n@NgModule({\n  declarations: [CheckoutComponent],\n  imports: [CommonModule, CheckoutRoutingModule, AmountSelectorModule, ButtonOutlinedModule, TranslateModule.forChild()]\n})\nexport class CheckoutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckoutRoutingModule.html":{"url":"modules/CheckoutRoutingModule.html","title":"module - CheckoutRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckoutRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ordering/checkout/checkout-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CheckoutComponent } from \"./checkout.component\";\n\nconst routes: Routes = [{ path: \"\", component: CheckoutComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CheckoutRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChefComponent.html":{"url":"components/ChefComponent.html","title":"component - ChefComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChefComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chef/chef.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-chef\n            \n\n            \n                styleUrls\n                ./chef.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chef.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentOrdersId$\n                            \n                            \n                                isLoading$\n                            \n                            \n                                    Private\n                                mute\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                orders$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alertOnNewOrder\n                            \n                            \n                                editItemStatus\n                            \n                            \n                                    Private\n                                getNewOrders\n                            \n                            \n                                hasItemInPreparingStatus\n                            \n                            \n                                    Private\n                                initCurrentOrdersId\n                            \n                            \n                                markOrderAsDone\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                playAlertSound\n                            \n                            \n                                trackOrdersBy\n                            \n                            \n                                    Private\n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store$: Store, dialogService: DialogService, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/chef/chef.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            alertOnNewOrder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alertOnNewOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editItemStatus\n                        \n                        \n                    \n                \n            \n            \n                \neditItemStatus(orderItem: OrderItem, order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderItem\n                                    \n                                                OrderItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getNewOrders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasItemInPreparingStatus\n                        \n                        \n                    \n                \n            \n            \n                \nhasItemInPreparingStatus(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initCurrentOrdersId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initCurrentOrdersId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            markOrderAsDone\n                        \n                        \n                    \n                \n            \n            \n                \nmarkOrderAsDone(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            playAlertSound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    playAlertSound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackOrdersBy\n                        \n                        \n                    \n                \n            \n            \n                \ntrackOrdersBy(_index: number, order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateOrder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOrder(oldOrder: Order, updatedOrderItems: OrderItem[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/chef.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldOrder\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedOrderItems\n                                    \n                                            OrderItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Order\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentOrdersId$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chef/chef.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chef/chef.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chef/chef.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chef/chef.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chef/chef.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Order, OrderItem, OrderItemStatus } from \"@rota/core/models\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { filter, first, map, takeUntil, tap } from \"rxjs/operators\";\nimport { RestaurantStoreSelectors } from \"../root-store/restaurant-store\";\nimport { ConfirmationDialogComponent, DialogConfig, DialogService } from \"../shared/dialog\";\nimport { SnackbarConfig, SnackbarService } from \"../shared/snackbar/services\";\nimport { StatusModifierComponent } from \"./status-modifier-dialog\";\nimport { ChefStoreActions, ChefStoreSelectores } from \"./store\";\n\nconst dialogConfig: DialogConfig = {\n  backdropClass: \"dialog-backdrop-light\",\n  autoFocus: false,\n};\n\n@Component({\n  selector: \"rota-chef\",\n  templateUrl: \"./chef.component.html\",\n  styleUrls: [\"./chef.component.scss\"],\n})\nexport class ChefComponent implements OnInit, OnDestroy {\n  private currentOrdersId$ = new BehaviorSubject(undefined);\n  private ngUnsubscribe$ = new Subject();\n  private mute: boolean;\n  isLoading$: Observable;\n  orders$: Observable;\n  constructor(private store$: Store, private dialogService: DialogService, private snackbarService: SnackbarService) {}\n\n  ngOnInit() {\n    this.orders$ = this.store$.pipe(select(RestaurantStoreSelectors.selectActiveOrders));\n    this.isLoading$ = this.store$.pipe(select(ChefStoreSelectores.selectIsLoading), tap(console.log));\n    this.initCurrentOrdersId();\n    this.alertOnNewOrder();\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n  }\n\n  editItemStatus(orderItem: OrderItem, order: Order): void {\n    this.dialogService\n      .openDialog(StatusModifierComponent, {\n        ...dialogConfig,\n        data: { status: orderItem.status },\n      })\n      .afterClosed()\n      .subscribe((selectedOptionStatus) => {\n        if (!selectedOptionStatus) {\n          return;\n        }\n\n        const updatedOrderItem: OrderItem = { ...orderItem, status: selectedOptionStatus };\n        const updatedItems: OrderItem[] = order.items.map((item) => (item.name === orderItem.name ? updatedOrderItem : item));\n\n        const updatedOrder: Order = this.updateOrder(order, updatedItems);\n        this.store$.dispatch(ChefStoreActions.updateOrder({ order: updatedOrder }));\n      });\n  }\n\n  markOrderAsDone(order: Order): void {\n    const dialogData: { title: string; text: string; optionalText?: string; actions: { confrim: string; cancel: string } } = {\n      title: \"CHEF.CONFIRMATION_DIALOG.TITLE\",\n      text: \"CHEF.CONFIRMATION_DIALOG.TEXT\",\n      actions: {\n        cancel: \"CHEF.CONFIRMATION_DIALOG.ACTION_CANCEL\",\n        confrim: \"CHEF.CONFIRMATION_DIALOG.ACTION_CONFIRM\",\n      },\n      optionalText: order.tableName,\n    };\n\n    this.dialogService\n      .openDialog(ConfirmationDialogComponent, { ...dialogConfig, data: dialogData })\n      .afterClosed()\n      .subscribe((confirmed) => {\n        if (!confirmed) {\n          return;\n        }\n\n        const updatedOrder: Order = { ...order, status: \"done\" };\n        this.store$.dispatch(ChefStoreActions.updateOrder({ order: updatedOrder }));\n      });\n  }\n\n  hasItemInPreparingStatus(order: Order): boolean {\n    return order.items.some((item) => item.status === \"preparing\");\n  }\n\n  trackOrdersBy(_index: number, order: Order): string {\n    if (!order) {\n      return null;\n    }\n\n    return order.id;\n  }\n\n  private initCurrentOrdersId(): void {\n    this.orders$\n      .pipe(\n        first(),\n        map((orders) => {\n          return orders.map((order) => order.id);\n        })\n      )\n      .subscribe((orderIds) => this.currentOrdersId$.next(orderIds));\n  }\n\n  private alertOnNewOrder(): void {\n    const newOrders$ = this.getNewOrders();\n    newOrders$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((newOrders) => {\n      const config: SnackbarConfig = {\n        position: { horizontal: \"right\", vertical: \"top\" },\n        duration: 3500,\n        data: {\n          text: \"CHEF.SNACKBAR.TEXT\",\n          subText: newOrders.length === 1 ? newOrders[0].tableName : null,\n          actionName: \"CHEF.SNACKBAR.ACTION_LABEL\",\n        },\n        panelClass: \"snackbar-success\",\n      };\n      this.snackbarService.openSnackBar(config);\n      if (!this.mute) {\n        this.playAlertSound();\n      }\n    });\n  }\n\n  private playAlertSound(): void {\n    const audio = new Audio(\"assets/sounds/notification_decorative-02.ogg\");\n    audio.load();\n    audio.play();\n  }\n\n  private getNewOrders(): Observable {\n    return this.orders$.pipe(\n      map((orders) => {\n        const newOrdersId = orders.map((order) => order.id);\n        const newOrders: Order[] = [];\n\n        newOrdersId.forEach((newOrderId) => {\n          if (!knownOrder(this.currentOrdersId$.value, newOrderId)) {\n            newOrders.push(orders.find((order) => order.id === newOrderId));\n          }\n        });\n        this.currentOrdersId$.next(newOrdersId);\n\n        return newOrders;\n      }),\n      filter((orders) => orders.length > 0)\n    );\n  }\n\n  private updateOrder(oldOrder: Order, updatedOrderItems: OrderItem[]): Order {\n    const order = { ...oldOrder, items: [...updatedOrderItems] };\n    if (!this.hasItemInPreparingStatus(order)) {\n      return { ...order, status: \"done\" };\n    }\n\n    return order;\n  }\n}\n\nfunction knownOrder(knownOrderIds: string[], orderId: string): boolean {\n  return knownOrderIds.some((knownOrderId) => knownOrderId === orderId);\n}\n\n    \n\n    \n        \n  \n     0; else noOrders\">\n      \n        \n          \n            {{ order.tableName }}\n\n            \n              Set done\n              check_circle\n            \n\n            \n          \n        \n      \n    \n  \n\n\n\n  {{ \"CHEF.NO_ORDERS\" | translate }}\n\n\n    \n\n    \n                \n                    ./chef.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  overflow: auto;\n  padding-top: 1rem;\n}\n\n.order {\n  padding: 1rem 0.8rem;\n}\n\n.no-orders {\n  color: $color-primary-olive;\n}\n\n.list-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 1rem;\n\n  &:hover {\n    background-color: $color-bg2-light;\n  }\n}\n\n.material-icons {\n  user-select: none;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       0; else noOrders\">                                    {{ order.tableName }}                          Set done              check_circle                                                        {{ \"CHEF.NO_ORDERS\" | translate }}'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChefComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChefModule.html":{"url":"modules/ChefModule.html","title":"module - ChefModule","body":"\n                   \n\n\n\n\n    Modules\n    ChefModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChefModule\n\n\n\ncluster_ChefModule_declarations\n\n\n\ncluster_ChefModule_imports\n\n\n\ncluster_ChefModule_exports\n\n\n\ncluster_ChefModule_providers\n\n\n\n\nChefComponent\n\nChefComponent\n\n\n\nChefModule\n\nChefModule\n\nChefModule -->\n\nChefComponent->ChefModule\n\n\n\n\n\nOrderListItemComponent\n\nOrderListItemComponent\n\nChefModule -->\n\nOrderListItemComponent->ChefModule\n\n\n\n\n\nStatusModifierComponent\n\nStatusModifierComponent\n\nChefModule -->\n\nStatusModifierComponent->ChefModule\n\n\n\n\n\nStatusModifierComponent \n\nStatusModifierComponent \n\nStatusModifierComponent  -->\n\nChefModule->StatusModifierComponent \n\n\n\n\n\nChefRoutingModule\n\nChefRoutingModule\n\nChefModule -->\n\nChefRoutingModule->ChefModule\n\n\n\n\n\nChefStoreModule\n\nChefStoreModule\n\nChefModule -->\n\nChefStoreModule->ChefModule\n\n\n\n\n\nConfirmationDialogModule\n\nConfirmationDialogModule\n\nChefModule -->\n\nConfirmationDialogModule->ChefModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nChefModule -->\n\nDialogModule->ChefModule\n\n\n\n\n\nExpansionPanelModule\n\nExpansionPanelModule\n\nChefModule -->\n\nExpansionPanelModule->ChefModule\n\n\n\n\n\nLoadingIndicatorModule\n\nLoadingIndicatorModule\n\nChefModule -->\n\nLoadingIndicatorModule->ChefModule\n\n\n\n\n\nSnackbarModule\n\nSnackbarModule\n\nChefModule -->\n\nSnackbarModule->ChefModule\n\n\n\n\n\nChefService\n\nChefService\n\nChefModule -->\n\nChefService->ChefModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/chef/chef.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChefComponent\n                        \n                        \n                            OrderListItemComponent\n                        \n                        \n                            StatusModifierComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            StatusModifierComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ChefService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChefRoutingModule\n                        \n                        \n                            ChefStoreModule\n                        \n                        \n                            ConfirmationDialogModule\n                        \n                        \n                            DialogModule\n                        \n                        \n                            ExpansionPanelModule\n                        \n                        \n                            LoadingIndicatorModule\n                        \n                        \n                            SnackbarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatusModifierComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { LoadingIndicatorModule } from \"@rota/shared/loading-indicator/loading-indicator.module\";\nimport { ConfirmationDialogModule, DialogModule } from \"../shared/dialog\";\nimport { ExpansionPanelModule } from \"../shared/expansion-panel\";\nimport { SnackbarModule } from \"../shared/snackbar\";\nimport { ChefRoutingModule } from \"./chef-routing.module\";\nimport { ChefComponent } from \"./chef.component\";\nimport { OrderListItemComponent } from \"./order-list-item/order-list-item.component\";\nimport { ChefService } from \"./services/chef.service\";\nimport { StatusModifierComponent } from \"./status-modifier-dialog\";\nimport { ChefStoreModule } from \"./store\";\n\n@NgModule({\n  declarations: [ChefComponent, OrderListItemComponent, StatusModifierComponent],\n  imports: [\n    CommonModule,\n    ChefRoutingModule,\n    DialogModule,\n    TranslateModule.forChild(),\n    MatRadioModule,\n    ConfirmationDialogModule,\n    SnackbarModule,\n    ExpansionPanelModule,\n    ChefStoreModule,\n    LoadingIndicatorModule,\n  ],\n  exports: [StatusModifierComponent],\n  entryComponents: [StatusModifierComponent],\n  providers: [ChefService],\n})\nexport class ChefModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChefRoutingModule.html":{"url":"modules/ChefRoutingModule.html","title":"module - ChefRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ChefRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/chef/chef-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { AngularFireAuthGuard, redirectUnauthorizedTo } from \"@angular/fire/auth-guard\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ResourcesLoadedGuard } from \"@rota/core/services/resources-loaded.guard\";\nimport { ChefComponent } from \"./chef.component\";\n\nconst redirectUnauthorizedToAuthentication = () => redirectUnauthorizedTo([\"authentication\"]);\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ChefComponent,\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  { path: \"**\", redirectTo: \"\", pathMatch: \"full\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChefRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChefService.html":{"url":"injectables/ChefService.html","title":"injectable - ChefService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChefService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/chef/services/chef.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/chef/services/chef.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrder\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrder(order: Order, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/services/chef.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { Order } from \"@rota/core/models\";\nimport { Observable, of } from \"rxjs\";\n\n@Injectable()\nexport class ChefService {\n  constructor(private afs: AngularFirestore) {}\n\n  updateOrder(order: Order, restaurantId: string): Observable {\n    return of(this.afs.doc(`restaurants/${restaurantId}/orders/${order.id}`).update(order));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChefState.html":{"url":"interfaces/ChefState.html","title":"interface - ChefState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChefState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/app-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        isLoading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Cart } from \"./cart\";\nimport { Group } from \"./group\";\nimport { Order } from \"./order\";\nimport { Product } from \"./product\";\nimport { Table } from \"./table\";\n\nexport interface AppState {\n  restaurant: RestaurantState;\n  auth: AuthState;\n  ordering: OrderingState;\n  resourceManagement: ResourceManagementState;\n}\n\nexport interface RestaurantState {\n  id: string;\n  name: string;\n  language: string;\n  currency: string;\n  tables: Table[];\n  groups: Group[];\n  products: Product[];\n  activeOrders: Order[];\n  isLoading: { tables: boolean; groups: boolean; products: boolean };\n  failedResources: { tables?: boolean; groups?: boolean; products?: boolean };\n  areResourcesLoaded: boolean;\n}\n\nexport interface AuthState {\n  error?: any;\n  isLoading?: boolean;\n}\n\nexport interface OrderingState {\n  selectedTable: Table;\n  cart: Cart;\n}\n\nexport interface ResourceManagementState {\n  isLoading?: boolean;\n}\n\nexport interface ChefState {\n  isLoading?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChefStoreEffects.html":{"url":"injectables/ChefStoreEffects.html","title":"injectable - ChefStoreEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChefStoreEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/chef/store/chef.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                updateOrder$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store$: Store, chefService: ChefService)\n                    \n                \n                        \n                            \n                                Defined in src/app/chef/store/chef.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chefService\n                                                  \n                                                        \n                                                                        ChefService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOrder$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ChefStoreActions.updateOrder),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.chefService.updateOrder(action.order, restaurantId).pipe(map(() => ChefStoreActions.setIsLoading({ isLoading: false })))\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chef/store/chef.effects.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action, select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Observable } from \"rxjs\";\nimport { map, switchMap, withLatestFrom } from \"rxjs/operators\";\nimport { ChefService } from \"../services/chef.service\";\nimport * as ChefStoreActions from \"./chef.actions\";\n\n@Injectable()\nexport class ChefStoreEffects {\n  constructor(private actions$: Actions, private store$: Store, private chefService: ChefService) {}\n\n  updateOrder$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ChefStoreActions.updateOrder),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.chefService.updateOrder(action.order, restaurantId).pipe(map(() => ChefStoreActions.setIsLoading({ isLoading: false })))\n      )\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChefStoreModule.html":{"url":"modules/ChefStoreModule.html","title":"module - ChefStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    ChefStoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/chef/store/chef-store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { ChefStoreEffects } from \"./chef.effects\";\nimport { chefReducer } from \"./chef.reducer\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, StoreModule.forFeature(\"chef\", chefReducer), EffectsModule.forFeature([ChefStoreEffects])],\n})\nexport class ChefStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationDialogComponent.html":{"url":"components/ConfirmationDialogComponent.html","title":"component - ConfirmationDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmationDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialog/confirmation-dialog/confirmation-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-confirmation-dialog\n            \n\n            \n                styleUrls\n                ./confirmation-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialog/confirmation-dialog/confirmation-dialog.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirm\n                        \n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dialog/confirmation-dialog/confirmation-dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/dialog/confirmation-dialog/confirmation-dialog.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/dialog/confirmation-dialog/confirmation-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"rota-confirmation-dialog\",\n  templateUrl: \"./confirmation-dialog.component.html\",\n  styleUrls: [\"./confirmation-dialog.component.scss\"]\n})\nexport class ConfirmationDialogComponent {\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      title: string;\n      text: string;\n      optionalText?: string;\n      actions: { confrim: string; cancel: string; danger?: boolean };\n    },\n    public dialogRef: MatDialogRef\n  ) {}\n\n  confirm(): void {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n    \n        \n  {{ data.title | translate }}\n  {{ data.text | translate }}\n  {{ data.optionalText | translate }}\n\n  \n    {{ data.actions.cancel | translate }}\n    \n      {{ data.actions.confrim | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./confirmation-dialog.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.container {\n  color: $color-primary-olive;\n}\n\n.text,\n.optional-text {\n  padding-top: 1rem;\n}\n\n.optional-text {\n  font-size: 0.8rem;\n}\n\n.actions {\n  display: flex;\n  cursor: pointer;\n  user-select: none;\n  justify-content: flex-end;\n\n  button {\n    background: transparent;\n    padding: 1rem;\n    font-weight: 600;\n    color: $color-primary-olive;\n    font-size: 1rem;\n    outline: none;\n  }\n\n  .close {\n    opacity: 0.8;\n  }\n\n  .danger {\n    color: $color-danger;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.title | translate }}  {{ data.text | translate }}  {{ data.optionalText | translate }}      {{ data.actions.cancel | translate }}          {{ data.actions.confrim | translate }}      '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfirmationDialogModule.html":{"url":"modules/ConfirmationDialogModule.html","title":"module - ConfirmationDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfirmationDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfirmationDialogModule\n\n\n\ncluster_ConfirmationDialogModule_declarations\n\n\n\ncluster_ConfirmationDialogModule_exports\n\n\n\n\nConfirmationDialogComponent\n\nConfirmationDialogComponent\n\n\n\nConfirmationDialogModule\n\nConfirmationDialogModule\n\nConfirmationDialogModule -->\n\nConfirmationDialogComponent->ConfirmationDialogModule\n\n\n\n\n\nConfirmationDialogComponent \n\nConfirmationDialogComponent \n\nConfirmationDialogComponent  -->\n\nConfirmationDialogModule->ConfirmationDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/dialog/confirmation-dialog/confirmation-dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConfirmationDialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ConfirmationDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfirmationDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { ConfirmationDialogComponent } from \"./confirmation-dialog.component\";\n\n@NgModule({\n  declarations: [ConfirmationDialogComponent],\n  imports: [CommonModule, TranslateModule.forChild()],\n  entryComponents: [ConfirmationDialogComponent],\n  exports: [ConfirmationDialogComponent]\n})\nexport class ConfirmationDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nLoadResourcesComponent\n\nLoadResourcesComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nLoadResourcesComponent->CoreModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nCoreModule -->\n\nSidenavComponent->CoreModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nCoreModule->SidenavComponent \n\n\n\n\n\nButtonOutlinedModule\n\nButtonOutlinedModule\n\nCoreModule -->\n\nButtonOutlinedModule->CoreModule\n\n\n\n\n\nLoadingIndicatorModule\n\nLoadingIndicatorModule\n\nCoreModule -->\n\nLoadingIndicatorModule->CoreModule\n\n\n\n\n\nNavigationService\n\nNavigationService\n\nCoreModule -->\n\nNavigationService->CoreModule\n\n\n\n\n\nRestaurantService\n\nRestaurantService\n\nCoreModule -->\n\nRestaurantService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoadResourcesComponent\n                        \n                        \n                            SidenavComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NavigationService\n                        \n                        \n                            RestaurantService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonOutlinedModule\n                        \n                        \n                            LoadingIndicatorModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidenavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatTreeModule } from \"@angular/material/tree\";\nimport { RouterModule } from \"@angular/router\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { ButtonOutlinedModule } from \"../shared/button-outlined/button-outlined.module\";\nimport { LoadingIndicatorModule } from \"../shared/loading-indicator/loading-indicator.module\";\nimport { LoadResourcesComponent } from \"./load-resources/load-resources.component\";\nimport { ResourcesLoadedGuard } from \"./services/resources-loaded.guard\";\nimport { RestaurantService } from \"./services/restaurant.service\";\nimport { NavigationService } from \"./sidenav/service/navigation.service\";\nimport { SidenavComponent } from \"./sidenav/sidenav.component\";\n\n@NgModule({\n  declarations: [LoadResourcesComponent, SidenavComponent],\n  imports: [\n    CommonModule,\n    LoadingIndicatorModule,\n    ButtonOutlinedModule,\n    TranslateModule.forChild(),\n    MatSidenavModule,\n    MatTreeModule,\n    RouterModule,\n    TranslateModule.forChild()\n  ],\n  providers: [NavigationService, RestaurantService, ResourcesLoadedGuard],\n  exports: [SidenavComponent]\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogConfig.html":{"url":"interfaces/DialogConfig.html","title":"interface - DialogConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/dialog/services/dialog.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFocus\n                                \n                                \n                                            Optional\n                                        backdropClass\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hasBackdrop\n                                \n                                \n                                            Optional\n                                        maxHeight\n                                \n                                \n                                            Optional\n                                        maxWidth\n                                \n                                \n                                            Optional\n                                        panelClass\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFocus\n                                    \n                                \n                                \n                                    \n                                        autoFocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backdropClass\n                                    \n                                \n                                \n                                    \n                                        backdropClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasBackdrop\n                                    \n                                \n                                \n                                    \n                                        hasBackdrop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxHeight\n                                    \n                                \n                                \n                                    \n                                        maxHeight:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxWidth\n                                    \n                                \n                                \n                                    \n                                        maxWidth:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panelClass\n                                    \n                                \n                                \n                                    \n                                        panelClass:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ComponentType } from \"@angular/cdk/portal\";\nimport { Injectable } from \"@angular/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\n\nexport interface DialogConfig {\n  backdropClass?: string;\n  panelClass?: string | string[];\n  data?: any;\n  hasBackdrop?: boolean;\n  maxHeight?: number | string;\n  maxWidth?: number | string;\n  autoFocus?: boolean;\n}\n\n@Injectable()\nexport class DialogService {\n  constructor(private dialog: MatDialog) {}\n\n  openDialog(component: ComponentType, config?: DialogConfig): MatDialogRef {\n    return this.dialog.open(component, { ...config });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DialogModule.html":{"url":"modules/DialogModule.html","title":"module - DialogModule","body":"\n                   \n\n\n\n\n    Modules\n    DialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DialogModule\n\n\n\ncluster_DialogModule_providers\n\n\n\n\nDialogService\n\nDialogService\n\n\n\nDialogModule\n\nDialogModule\n\nDialogModule -->\n\nDialogService->DialogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/dialog/dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DialogService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { DialogService } from \"./services\";\n\n@NgModule({\n  imports: [CommonModule, MatDialogModule],\n  providers: [DialogService]\n})\nexport class DialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/dialog/services/dialog.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialog/services/dialog.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(component: ComponentType, config?: DialogConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dialog/services/dialog.service.ts:19\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                DialogConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ComponentType } from \"@angular/cdk/portal\";\nimport { Injectable } from \"@angular/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\n\nexport interface DialogConfig {\n  backdropClass?: string;\n  panelClass?: string | string[];\n  data?: any;\n  hasBackdrop?: boolean;\n  maxHeight?: number | string;\n  maxWidth?: number | string;\n  autoFocus?: boolean;\n}\n\n@Injectable()\nexport class DialogService {\n  constructor(private dialog: MatDialog) {}\n\n  openDialog(component: ComponentType, config?: DialogConfig): MatDialogRef {\n    return this.dialog.open(component, { ...config });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpansionPanelComponent.html":{"url":"components/ExpansionPanelComponent.html","title":"component - ExpansionPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExpansionPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/expansion-panel/expansion-panel.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                expansion-panel\n            \n\n            \n                styleUrls\n                ./expansion-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./expansion-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/expansion-panel/expansion-panel.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { expandAnimation } from \"./expand.animation\";\n\n@Component({\n  selector: \"expansion-panel\",\n  templateUrl: \"./expansion-panel.component.html\",\n  styleUrls: [\"./expansion-panel.component.scss\"],\n  animations: [expandAnimation]\n})\nexport class ExpansionPanelComponent {\n  open = true;\n}\n\n    \n\n    \n        \n  \n    \n    {{ open ? \"expand_less\" : \"expand_more\" }}\n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./expansion-panel.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.container {\n  color: $color-primary-olive;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid $color-primary-olive;\n}\n\n.body {\n  box-shadow: 0 2px 3px rgba($color: #000000, $alpha: 0.4);\n  font-weight: 600;\n}\n\n.material-icons {\n  user-select: none;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ open ? \"expand_less\" : \"expand_more\" }}          '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpansionPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExpansionPanelModule.html":{"url":"modules/ExpansionPanelModule.html","title":"module - ExpansionPanelModule","body":"\n                   \n\n\n\n\n    Modules\n    ExpansionPanelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExpansionPanelModule\n\n\n\ncluster_ExpansionPanelModule_declarations\n\n\n\ncluster_ExpansionPanelModule_exports\n\n\n\n\nExpansionPanelComponent\n\nExpansionPanelComponent\n\n\n\nExpansionPanelModule\n\nExpansionPanelModule\n\nExpansionPanelModule -->\n\nExpansionPanelComponent->ExpansionPanelModule\n\n\n\n\n\nExpansionPanelComponent \n\nExpansionPanelComponent \n\nExpansionPanelComponent  -->\n\nExpansionPanelModule->ExpansionPanelComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/expansion-panel/expansion-panel.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExpansionPanelComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExpansionPanelComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { ExpansionPanelComponent } from \"./expansion-panel.component\";\n\n@NgModule({\n  declarations: [ExpansionPanelComponent],\n  imports: [CommonModule],\n  exports: [ExpansionPanelComponent]\n})\nexport class ExpansionPanelModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormControlData.html":{"url":"interfaces/FormControlData.html","title":"interface - FormControlData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormControlData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-form/auth-form.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        hint\n                                \n                                \n                                        icon\n                                \n                                \n                                        name\n                                \n                                \n                                        placeholder\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\nexport interface AuthFormData {\n  form: FormGroup;\n  formControls: FormControlData[];\n}\n\nexport interface FormControlData {\n  type: string;\n  name: string;\n  placeholder: string;\n  icon: string;\n  hint?: string;\n}\n\n@Component({\n  selector: \"auth-form\",\n  templateUrl: \"./auth-form.component.html\",\n  styleUrls: [\"./auth-form.component.scss\"]\n})\nexport class AuthFormComponent {\n  @Input() authFormData: AuthFormData;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Group.html":{"url":"interfaces/Group.html","title":"interface - Group","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Group\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/group.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        subgroups\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subgroups\n                                    \n                                \n                                \n                                    \n                                        subgroups:         Subgroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Subgroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Group {\n  id?: string;\n  name: string;\n  subgroups: Subgroup[];\n}\n\nexport interface Subgroup {\n  id?: string;\n  name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupEditorComponent.html":{"url":"components/GroupEditorComponent.html","title":"component - GroupEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GroupEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/resource-management/group-editor/group-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-group-editor\n            \n\n            \n                styleUrls\n                ./group-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./group-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                groupToEdit\n                            \n                            \n                                isLoading$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addExtraSubgroup\n                            \n                            \n                                    Private\n                                createSubgroupFormGroup\n                            \n                            \n                                    Private\n                                formInitializer\n                            \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeSubgroup\n                            \n                            \n                                saveGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subgroupControlls\n                                \n                                \n                                    group\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, route: ActivatedRoute, afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/resource-management/group-editor/group-editor.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addExtraSubgroup\n                        \n                        \n                    \n                \n            \n            \n                \naddExtraSubgroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createSubgroupFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSubgroupFormGroup(subgroup?: Subgroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subgroup\n                                    \n                                                Subgroup\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            formInitializer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formInitializer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initForm(group?: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeSubgroup\n                        \n                        \n                    \n                \n            \n            \n                \nremoveSubgroup(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveGroup\n                        \n                        \n                    \n                \n            \n            \n                \nsaveGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupToEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Group\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        subgroupControlls\n                    \n                \n\n                \n                    \n                        getsubgroupControlls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n\n                \n                    \n                        getgroup()\n                    \n                \n                            \n                                \n                                    Defined in src/app/resource-management/group-editor/group-editor.component.ts:101\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { AbstractControl, FormArray, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Group, Subgroup } from \"@rota/core/models\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Observable, Subject } from \"rxjs\";\nimport { map, switchMap, takeUntil } from \"rxjs/operators\";\nimport { ResourceManagementStoreActions, ResourceManagementStoreSelectores } from \"../store\";\n\n@Component({\n  selector: \"rota-group-editor\",\n  templateUrl: \"./group-editor.component.html\",\n  styleUrls: [\"./group-editor.component.scss\"],\n})\nexport class GroupEditorComponent implements OnInit {\n  private ngUnsubscribe$ = new Subject();\n\n  groupToEdit: Group;\n  form: FormGroup;\n  isLoading$: Observable;\n\n  constructor(private store: Store, private route: ActivatedRoute, private afs: AngularFirestore) {}\n\n  ngOnInit() {\n    this.formInitializer();\n    this.isLoading$ = this.store.pipe(select(ResourceManagementStoreSelectores.selectIsLoading));\n  }\n\n  saveGroup(): void {\n    if (this.groupToEdit) {\n      this.store.dispatch(ResourceManagementStoreActions.editGroup({ group: { id: this.groupToEdit.id, ...this.group } }));\n    } else {\n      this.store.dispatch(ResourceManagementStoreActions.addGroup({ group: this.group }));\n    }\n  }\n\n  addExtraSubgroup() {\n    const subgroupFormArray =  this.form.get(\"subgroups\");\n    subgroupFormArray.push(this.createSubgroupFormGroup());\n  }\n\n  removeSubgroup(index: number) {\n    if (index === 0) {\n      return;\n    }\n    const subgroupFormArray =  this.form.get(\"subgroups\");\n    subgroupFormArray.removeAt(index);\n  }\n\n  get subgroupControlls(): AbstractControl[] {\n    return ( this.form.get(\"subgroups\")).controls;\n  }\n\n  private formInitializer(): void {\n    this.route.paramMap\n      .pipe(\n        map((params) => params.get(\"id\")),\n        switchMap((id) => this.store.pipe(select(RestaurantStoreSelectors.selectGroupById, { id }))),\n        takeUntil(this.ngUnsubscribe$)\n      )\n      .subscribe((group) => {\n        if (!group) {\n          this.form = this.initForm();\n          return;\n        }\n\n        this.form = this.initForm(group);\n        this.groupToEdit = group;\n      });\n  }\n\n  private initForm(group?: Group): FormGroup {\n    const subgroupsFormArray = new FormArray([]);\n    if (group) {\n      group.subgroups.forEach((subgroup) => subgroupsFormArray.push(this.createSubgroupFormGroup(subgroup)));\n    } else {\n      subgroupsFormArray.push(this.createSubgroupFormGroup());\n    }\n\n    return new FormGroup({\n      groupName: new FormControl(group ? group.name : \"\", Validators.required),\n      subgroups: subgroupsFormArray,\n    });\n  }\n\n  private createSubgroupFormGroup(subgroup?: Subgroup): FormGroup {\n    return subgroup\n      ? new FormGroup({\n          id: new FormControl(subgroup.id),\n          name: new FormControl(subgroup.name),\n        })\n      : new FormGroup({\n          id: new FormControl(this.afs.createId()),\n          name: new FormControl(\"\"),\n        });\n  }\n\n  private get group(): Group {\n    const subgroups = this.form.controls.subgroups.value.filter((subgroup) => subgroup.name !== \"\");\n\n    return {\n      name: this.form.controls.groupName.value,\n      subgroups,\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{\n        \"RESOURCE_MANAGEMENT.GROUP_EDITOR.ERROR_REQUIRED\" | translate\n      }}\n    \n\n    \n      \n        \n          \n          {{ \"RESOURCE_MANAGEMENT.GROUP_EDITOR.ERROR_REQUIRED\" | translate }}\n        \n        remove\n        add\n      \n    \n\n    \n      {{\n        \"RESOURCE_MANAGEMENT.GROUP_EDITOR.BUTTON_TEXT\" | translate\n      }}\n    \n\n    \n      info\n      {{ \"RESOURCE_MANAGEMENT.GROUP_EDITOR.INFO_MESSAGE\" | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./group-editor.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 800px;\n  overflow: auto;\n  padding: 1rem;\n}\n\nform {\n  padding: 1rem;\n  width: 400px;\n  mat-form-field {\n    width: 100%;\n    margin-bottom: 1rem;\n  }\n}\n\n.subgroups {\n  max-height: 250px;\n  overflow: auto;\n}\n\n.subgroup {\n  display: flex;\n  padding: 0;\n  margin: 0;\n\n  .material-icons {\n    align-self: center;\n    cursor: pointer;\n    color: $color-primary-olive;\n    user-select: none;\n  }\n}\n\n.button {\n  margin: 1rem;\n}\n\n.info {\n  display: flex;\n  align-items: center;\n  color: $color-primary-olive;\n  padding: 1rem;\n  font-size: 0.9rem;\n  white-space: pre-wrap;\n\n  .material-icons {\n    padding-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{        \"RESOURCE_MANAGEMENT.GROUP_EDITOR.ERROR_REQUIRED\" | translate      }}                                          {{ \"RESOURCE_MANAGEMENT.GROUP_EDITOR.ERROR_REQUIRED\" | translate }}                remove        add                    {{        \"RESOURCE_MANAGEMENT.GROUP_EDITOR.BUTTON_TEXT\" | translate      }}              info      {{ \"RESOURCE_MANAGEMENT.GROUP_EDITOR.INFO_MESSAGE\" | translate }}      '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadResourcesComponent.html":{"url":"components/LoadResourcesComponent.html","title":"component - LoadResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/load-resources/load-resources.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-load-resources\n            \n\n            \n                styleUrls\n                ./load-resources.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./load-resources.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                failedResources$\n                            \n                            \n                                isLoading$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                objectKeys\n                            \n                            \n                                redirectUrl$\n                            \n                            \n                                restaurantId$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initRedirectUrl\n                            \n                            \n                                    Private\n                                loadResourcesAndSettings\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setSuccessOnFinishedLoading\n                            \n                            \n                                signOut\n                            \n                            \n                                tryAgain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/load-resources/load-resources.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initRedirectUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initRedirectUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/load-resources/load-resources.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadResourcesAndSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadResourcesAndSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/load-resources/load-resources.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/load-resources/load-resources.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/load-resources/load-resources.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSuccessOnFinishedLoading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSuccessOnFinishedLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/load-resources/load-resources.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/load-resources/load-resources.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tryAgain\n                        \n                        \n                    \n                \n            \n            \n                \ntryAgain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/load-resources/load-resources.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            failedResources$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/load-resources/load-resources.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/load-resources/load-resources.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/load-resources/load-resources.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.keys\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/load-resources/load-resources.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/load-resources/load-resources.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restaurantId$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/load-resources/load-resources.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { RestaurantStoreAuthActions, RestaurantStoreResourceActions, RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { RestaurantStoreSettingActions } from \"@rota/root-store/restaurant-store/actions\";\nimport { combineLatest, Observable, Subject } from \"rxjs\";\nimport { filter, map, switchMap, takeUntil } from \"rxjs/operators\";\nimport { AppState } from \"../models/app-state\";\n\n@Component({\n  selector: \"rota-load-resources\",\n  templateUrl: \"./load-resources.component.html\",\n  styleUrls: [\"./load-resources.component.scss\"],\n})\nexport class LoadResourcesComponent implements OnInit, OnDestroy {\n  isLoading$: Observable;\n  failedResources$: Observable;\n  restaurantId$: Observable;\n  redirectUrl$: Observable;\n  objectKeys = Object.keys;\n  private ngUnsubscribe$ = new Subject();\n\n  constructor(private store: Store, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.restaurantId$ = this.store.pipe(select(RestaurantStoreSelectors.selectId));\n    this.isLoading$ = this.store.pipe(select(RestaurantStoreSelectors.selectIsLoading));\n    this.failedResources$ = this.store.pipe(select(RestaurantStoreSelectors.selectFailedResources));\n    this.loadResourcesAndSettings();\n    this.setSuccessOnFinishedLoading();\n    this.initRedirectUrl();\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n  }\n\n  tryAgain(): void {\n    this.loadResourcesAndSettings();\n  }\n\n  signOut(): void {\n    this.store.dispatch(RestaurantStoreAuthActions.signOut());\n  }\n\n  private initRedirectUrl() {\n    this.redirectUrl$ = this.route.queryParamMap.pipe(map((params) => params.get(\"redirectUrl\")));\n  }\n\n  private setSuccessOnFinishedLoading(): void {\n    combineLatest([this.isLoading$, this.failedResources$])\n      .pipe(\n        filter(([isLoading, failedResources]) => (hasTrueField(failedResources) || hasTrueField(isLoading) ? false : true)),\n        switchMap(() => this.redirectUrl$),\n        takeUntil(this.ngUnsubscribe$)\n      )\n      .subscribe((redirectUrl) => {\n        if (!redirectUrl) {\n          redirectUrl = \"/admin/account\";\n        }\n        this.store.dispatch(RestaurantStoreResourceActions.loadResourcesSuccess({ navigateTo: redirectUrl }));\n      });\n  }\n\n  private loadResourcesAndSettings(): void {\n    this.restaurantId$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((restaurantId) => {\n      this.store.dispatch(RestaurantStoreResourceActions.loadResources({ restaurantId })),\n        this.store.dispatch(RestaurantStoreSettingActions.loadRestaurantSettings({ restaurantId }));\n    });\n  }\n}\n\nfunction hasTrueField(object: { [key: string]: boolean }): boolean {\n  return object ? Object.values(object).find((value) => value === true) : false;\n}\n\n    \n\n    \n        \n  \n    {{ \"LOADING_RESOURCES.TITLE\" | translate }}\n    \n    \n      \n        {{ \"LOADING_RESOURCES.RESOURCE_TABLE\" | translate }}:\n        \n      \n      \n        {{ \"LOADING_RESOURCES.RESOURCE_GROUPS\" | translate }}:\n        \n      \n      \n        {{ \"LOADING_RESOURCES.RESOURCE_PRODUCTS\" | translate }}:\n        \n      \n    \n  \n\n   ...\n\n  \n    {{ \"LOADING_RESOURCES.LOADED\" | translate }}\n  \n\n  \n     0\">\n      error\n      {{ \"LOADING_RESOURCES.FAILED\" | translate }}\n      \n        {{ \"LOADING_RESOURCES.COULD_NOT_LOAD_RESOURCE\" | translate: { resource: resource } }}\n      \n      {{ \"LOADING_RESOURCES.BUTTON_TRY_AGAIN\" | translate }}\n      {{ \"LOADING_RESOURCES.BUTTON_SIGN_OUT\" | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./load-resources.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n:host {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: $color-primary-olive;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.failed {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nbutton-outlined {\n  padding: 0.5rem;\n  width: 200px;\n}\n\ni {\n  font-size: 4rem;\n  color: $color-danger;\n}\n\nh5 {\n  padding: 0;\n  margin: 0;\n}\n\nspan {\n  padding-left: 0.5rem;\n  color: $color-secondary-orange;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"LOADING_RESOURCES.TITLE\" | translate }}                      {{ \"LOADING_RESOURCES.RESOURCE_TABLE\" | translate }}:                            {{ \"LOADING_RESOURCES.RESOURCE_GROUPS\" | translate }}:                            {{ \"LOADING_RESOURCES.RESOURCE_PRODUCTS\" | translate }}:                       ...      {{ \"LOADING_RESOURCES.LOADED\" | translate }}         0\">      error      {{ \"LOADING_RESOURCES.FAILED\" | translate }}              {{ \"LOADING_RESOURCES.COULD_NOT_LOAD_RESOURCE\" | translate: { resource: resource } }}            {{ \"LOADING_RESOURCES.BUTTON_TRY_AGAIN\" | translate }}      {{ \"LOADING_RESOURCES.BUTTON_SIGN_OUT\" | translate }}      '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingIndicatorComponent.html":{"url":"components/LoadingIndicatorComponent.html","title":"component - LoadingIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/loading-indicator/loading-indicator.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                loading-indicator\n            \n\n            \n                styleUrls\n                ./loading-indicator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading-indicator.component.svg\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 24\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/loading-indicator/loading-indicator.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"loading-indicator\",\n  templateUrl: \"./loading-indicator.component.svg\",\n  styleUrls: [\"./loading-indicator.component.scss\"]\n})\nexport class LoadingIndicatorComponent {\n  @Input() size = 24;\n}\n\n    \n\n    \n        \n\n    \n        \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./loading-indicator.component.scss\n                \n                :host {\n  pointer-events: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoadingIndicatorModule.html":{"url":"modules/LoadingIndicatorModule.html","title":"module - LoadingIndicatorModule","body":"\n                   \n\n\n\n\n    Modules\n    LoadingIndicatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoadingIndicatorModule\n\n\n\ncluster_LoadingIndicatorModule_declarations\n\n\n\ncluster_LoadingIndicatorModule_exports\n\n\n\n\nLoadingIndicatorComponent\n\nLoadingIndicatorComponent\n\n\n\nLoadingIndicatorModule\n\nLoadingIndicatorModule\n\nLoadingIndicatorModule -->\n\nLoadingIndicatorComponent->LoadingIndicatorModule\n\n\n\n\n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent  -->\n\nLoadingIndicatorModule->LoadingIndicatorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/loading-indicator/loading-indicator.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { LoadingIndicatorComponent } from \"./loading-indicator.component\";\n\n@NgModule({\n  declarations: [LoadingIndicatorComponent],\n  imports: [CommonModule],\n  exports: [LoadingIndicatorComponent]\n})\nexport class LoadingIndicatorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MainNavigation.html":{"url":"interfaces/MainNavigation.html","title":"interface - MainNavigation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MainNavigation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/sidenav/sidenav.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:     string | Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, ViewChild } from \"@angular/core\";\nimport { MatSidenav } from \"@angular/material/sidenav\";\n\nexport interface NavigationItem {\n  main: MainNavigation;\n  sub?: SubNavigation[];\n}\n\nexport interface MainNavigation {\n  name: string;\n  route: string | Array;\n}\n\nexport interface SubNavigation {\n  name: string;\n  route: string | Array;\n}\n\n@Component({\n  selector: \"rota-sidenav\",\n  templateUrl: \"./sidenav.component.html\",\n  styleUrls: [\"./sidenav.component.scss\"]\n})\nexport class SidenavComponent {\n  @ViewChild(\"sidenav\", { static: false }) private sidenav: MatSidenav;\n  @Input() navigationData: NavigationItem[];\n  @Input() title: string;\n  @Input() icon: string;\n  @Input() mode: \"side\" | \"over\" | \"push\" = \"side\";\n  @Input() opened: boolean;\n  @Input() shouldHaveSidenav: boolean;\n\n  toggle() {\n    this.sidenav.toggle();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModifyComponent.html":{"url":"components/ModifyComponent.html","title":"component - ModifyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModifyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/resource-management/modify/modify.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-modify\n            \n\n            \n                styleUrls\n                ./modify.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modify.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groups$\n                            \n                            \n                                products$\n                            \n                            \n                                tables$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askConfirmation\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                deleteTable\n                            \n                            \n                                editGroup\n                            \n                            \n                                editProduct\n                            \n                            \n                                editTable\n                            \n                            \n                                joinSubgroups\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store$: Store, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/resource-management/modify/modify.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \naskConfirmation(config: DialogConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/modify/modify.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DialogConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteGroup\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteGroup(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/modify/modify.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProduct\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProduct(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/modify/modify.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTable\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTable(table: Table)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/modify/modify.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editGroup\n                        \n                        \n                    \n                \n            \n            \n                \neditGroup(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/modify/modify.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editProduct\n                        \n                        \n                    \n                \n            \n            \n                \neditProduct(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/modify/modify.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTable\n                        \n                        \n                    \n                \n            \n            \n                \neditTable(table: Table)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/modify/modify.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            joinSubgroups\n                        \n                        \n                    \n                \n            \n            \n                \njoinSubgroups(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/modify/modify.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/modify/modify.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groups$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/modify/modify.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/modify/modify.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tables$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/modify/modify.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Group, Product, Table } from \"@rota/core/models\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { sortByName } from \"@rota/core/util\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { ConfirmationDialogComponent, DialogConfig, DialogService } from \"@rota/shared/dialog\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { ResourceManagementStoreActions } from \"../store\";\n\nconst actions = {\n  actions: {\n    confrim: \"RESOURCE_MANAGEMENT.MODIFY.DIALOG_ACTION_YES\",\n    cancel: \"RESOURCE_MANAGEMENT.MODIFY.DIALOG_ACTION_CANCEL\",\n    danger: true,\n  },\n};\n\n@Component({\n  selector: \"rota-modify\",\n  templateUrl: \"./modify.component.html\",\n  styleUrls: [\"./modify.component.scss\"],\n})\nexport class ModifyComponent implements OnInit {\n  tables$: Observable;\n  groups$: Observable;\n  products$: Observable;\n\n  constructor(private store$: Store, private dialogService: DialogService, private router: Router) {}\n\n  ngOnInit() {\n    this.tables$ = this.store$.pipe(select(RestaurantStoreSelectors.selectTables), map(sortByName));\n    this.groups$ = this.store$.pipe(select(RestaurantStoreSelectors.selectGroups), map(sortByName));\n    this.products$ = this.store$.pipe(select(RestaurantStoreSelectors.selectAllProducts), map(sortByName));\n  }\n\n  deleteTable(table: Table): void {\n    const config: DialogConfig = {\n      backdropClass: \"dialog-backdrop-light\",\n      data: {\n        title: \"RESOURCE_MANAGEMENT.MODIFY.DIALOG_TITLE_TABLE_DELETION\",\n        text: table.name,\n        ...actions,\n      },\n    };\n\n    this.askConfirmation(config).subscribe((confirmed) => {\n      if (!confirmed) {\n        return;\n      }\n      this.store$.dispatch(ResourceManagementStoreActions.deleteTable({ id: table.id }));\n    });\n  }\n\n  deleteGroup(group: Group): void {\n    const config: DialogConfig = {\n      backdropClass: \"dialog-backdrop-light\",\n      data: {\n        title: \"RESOURCE_MANAGEMENT.MODIFY.DIALOG_TITLE_GROUP_DELETION\",\n        text: group.name,\n        ...actions,\n      },\n    };\n\n    this.askConfirmation(config).subscribe((confirmed) => {\n      if (!confirmed) {\n        return;\n      }\n      this.store$.dispatch(ResourceManagementStoreActions.deleteGroup({ id: group.id }));\n    });\n  }\n\n  deleteProduct(product: Product): void {\n    const config: DialogConfig = {\n      backdropClass: \"dialog-backdrop-light\",\n      data: {\n        title: \"RESOURCE_MANAGEMENT.MODIFY.DIALOG_TITLE_PRODUCT_DELETION\",\n        text: product.name,\n        ...actions,\n      },\n    };\n\n    this.askConfirmation(config).subscribe((confirmed) => {\n      if (!confirmed) {\n        return;\n      }\n      this.store$.dispatch(ResourceManagementStoreActions.deleteProduct({ id: product.id, imageUrl: product.imageUrl }));\n    });\n  }\n\n  editTable(table: Table): void {\n    this.router.navigate([\"resource-management/table-editor\", { id: table.id }]);\n  }\n\n  editGroup(group: Group): void {\n    this.router.navigate([\"resource-management/group-editor\", { id: group.id }]);\n  }\n\n  editProduct(product: Product): void {\n    this.router.navigate([\"resource-management/product-editor\", { id: product.id }]);\n  }\n\n  joinSubgroups(group: Group): string[] {\n    return group.subgroups.map((subgroup) => subgroup.name);\n  }\n\n  askConfirmation(config: DialogConfig): Observable {\n    return this.dialogService.openDialog(ConfirmationDialogComponent, config).afterClosed();\n  }\n}\n\n    \n\n    \n        \n  \n    {{ \"RESOURCE_MANAGEMENT.MODIFY.EXPANSION_LIST_TITLE_TABLES\" | translate }}\n    \n      {{ table.name }}\n      \n        {{ \"RESOURCE_MANAGEMENT.MODIFY.EXPANSION_LIST_NUMBER_OF_SEATS\" | translate }}: {{ table.numberOfSeats }}\n      \n      \n        edit\n        delete\n      \n    \n  \n\n  \n    {{ \"RESOURCE_MANAGEMENT.MODIFY.EXPANSION_LIST_TITLE_GOUPS\" | translate }}\n    \n      {{ group.name }}\n      \n        {{ subgroups }}\n      \n      \n        edit\n        delete\n      \n    \n  \n\n  \n    {{ \"RESOURCE_MANAGEMENT.MODIFY.EXPANSION_LIST_TITLE_PRODUCTS\" | translate }}\n    \n      {{ product.name }}\n      {{ product.subgroup.name }}\n      \n        edit\n        delete\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./modify.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  overflow: auto;\n}\n\n.list {\n  margin: 1rem;\n\n  &.tables {\n    width: 280px;\n  }\n  &.groups {\n    width: 350px;\n  }\n  &.products {\n    width: 400px;\n\n    .name {\n      min-width: 150px;\n    }\n  }\n}\n\n.name {\n  max-width: 150px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.sub-text {\n  max-width: 150px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.list-item-container {\n  padding: 1rem;\n  display: grid;\n  grid-template-columns: auto auto 60px;\n\n  &:hover {\n    background-color: $color-bg2-light;\n  }\n\n  .name {\n    padding-right: 0.5rem;\n    color: $color-secondary-orange;\n  }\n  .sub-text {\n    font-size: 0.9rem;\n    color: $color-primary-olive;\n  }\n}\n\n.actions {\n  display: flex;\n  justify-content: space-between;\n}\n\n.material-icons {\n  user-select: none;\n  cursor: pointer;\n\n  &.delete {\n    color: $color-danger;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"RESOURCE_MANAGEMENT.MODIFY.EXPANSION_LIST_TITLE_TABLES\" | translate }}          {{ table.name }}              {{ \"RESOURCE_MANAGEMENT.MODIFY.EXPANSION_LIST_NUMBER_OF_SEATS\" | translate }}: {{ table.numberOfSeats }}                    edit        delete                  {{ \"RESOURCE_MANAGEMENT.MODIFY.EXPANSION_LIST_TITLE_GOUPS\" | translate }}          {{ group.name }}              {{ subgroups }}                    edit        delete                  {{ \"RESOURCE_MANAGEMENT.MODIFY.EXPANSION_LIST_TITLE_PRODUCTS\" | translate }}          {{ product.name }}      {{ product.subgroup.name }}              edit        delete            '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModifyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavigationItem.html":{"url":"interfaces/NavigationItem.html","title":"interface - NavigationItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NavigationItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/sidenav/sidenav.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        main\n                                \n                                \n                                            Optional\n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:         MainNavigation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MainNavigation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         SubNavigation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SubNavigation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, ViewChild } from \"@angular/core\";\nimport { MatSidenav } from \"@angular/material/sidenav\";\n\nexport interface NavigationItem {\n  main: MainNavigation;\n  sub?: SubNavigation[];\n}\n\nexport interface MainNavigation {\n  name: string;\n  route: string | Array;\n}\n\nexport interface SubNavigation {\n  name: string;\n  route: string | Array;\n}\n\n@Component({\n  selector: \"rota-sidenav\",\n  templateUrl: \"./sidenav.component.html\",\n  styleUrls: [\"./sidenav.component.scss\"]\n})\nexport class SidenavComponent {\n  @ViewChild(\"sidenav\", { static: false }) private sidenav: MatSidenav;\n  @Input() navigationData: NavigationItem[];\n  @Input() title: string;\n  @Input() icon: string;\n  @Input() mode: \"side\" | \"over\" | \"push\" = \"side\";\n  @Input() opened: boolean;\n  @Input() shouldHaveSidenav: boolean;\n\n  toggle() {\n    this.sidenav.toggle();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/sidenav/service/navigation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNavData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/sidenav/service/navigation.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNavData\n                        \n                        \n                    \n                \n            \n            \n                \ngetNavData(moduleName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/sidenav/service/navigation.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Observable, of } from \"rxjs\";\nimport { AppState } from \"../../models/app-state\";\nimport { adminNavigationData, chefNavigationData, defaultData, getOrderingNavigationData, resourceNavigationData } from \"../sidenav-datas\";\nimport { SidenavData } from \"../sidenav-datas/sidenav-data.model\";\n\n@Injectable()\nexport class NavigationService {\n  constructor(private store: Store) {}\n\n  getNavData(moduleName: string): Observable {\n    switch (moduleName) {\n      case \"admin\":\n        return of(adminNavigationData);\n\n      case \"resource-management\":\n        return of(resourceNavigationData);\n\n      case \"ordering\": {\n        const groups$ = this.store.pipe(select(RestaurantStoreSelectors.selectGroups));\n        return getOrderingNavigationData(groups$);\n      }\n\n      case \"chef\":\n        return of(chefNavigationData);\n\n      default:\n        return of(defaultData);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Order.html":{"url":"interfaces/Order.html","title":"interface - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/order.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        items\n                                \n                                \n                                        status\n                                \n                                \n                                        tableName\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     OrderItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrderItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     \"active\" | \"done\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"active\" | \"done\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                    \n                                \n                                \n                                    \n                                        tableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Order {\n  id: string;\n  items: OrderItem[];\n  status: \"active\" | \"done\";\n  tableName: string;\n  timestamp: number;\n}\n\nexport interface OrderItem {\n  name: string;\n  amount: number;\n  status: OrderItemStatus;\n}\n\nexport type OrderItemStatus = \"ready\" | \"rejected\" | \"preparing\";\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderItem.html":{"url":"interfaces/OrderItem.html","title":"interface - OrderItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/order.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        amount\n                                \n                                \n                                        name\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         OrderItemStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderItemStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Order {\n  id: string;\n  items: OrderItem[];\n  status: \"active\" | \"done\";\n  tableName: string;\n  timestamp: number;\n}\n\nexport interface OrderItem {\n  name: string;\n  amount: number;\n  status: OrderItemStatus;\n}\n\nexport type OrderItemStatus = \"ready\" | \"rejected\" | \"preparing\";\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListItemComponent.html":{"url":"components/OrderListItemComponent.html","title":"component - OrderListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrderListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chef/order-list-item/order-list-item.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                order-list-item\n            \n\n            \n                styleUrls\n                ./order-list-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./order-list-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                orderItem\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/chef/order-list-item/order-list-item.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        orderItem\n                    \n                \n                \n                    \n                        Type :         OrderItem\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/chef/order-list-item/order-list-item.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chef/order-list-item/order-list-item.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\nimport { OrderItem } from \"@rota/core/models\";\n\n@Component({\n  selector: \"order-list-item\",\n  templateUrl: \"./order-list-item.component.html\",\n  styleUrls: [\"./order-list-item.component.scss\"],\n})\nexport class OrderListItemComponent {\n  @Input() orderItem: OrderItem;\n  @Input() isLoading: boolean;\n  open = true;\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      check_circle_outline\n      remove_circle_outline\n      report\n    \n  \n\n  {{ orderItem.amount }}x\n  {{ orderItem.name }}\n  \n    edit\n  \n\n\n    \n\n    \n                \n                    ./order-list-item.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.body {\n  box-shadow: 0 2px 3px rgba($color: #000000, $alpha: 0.4);\n  font-weight: 600;\n}\n\n.list-item-container {\n  padding: 1rem;\n  display: grid;\n  grid-template-columns: 40px 40px 212px 28px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: $color-bg2-light;\n  }\n\n  .amount,\n  .status {\n    padding-right: 0.5rem;\n    color: $color-secondary-orange;\n  }\n\n  .name {\n    color: $color-secondary-orange;\n  }\n}\n\n.material-icons {\n  user-select: none;\n  cursor: pointer;\n\n  &.ready {\n    color: $color-success;\n  }\n  &.preparing {\n    color: $color-yellow-light;\n  }\n  &.rejected {\n    color: $color-danger;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    check_circle_outline      remove_circle_outline      report        {{ orderItem.amount }}x  {{ orderItem.name }}      edit  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderingModule.html":{"url":"modules/OrderingModule.html","title":"module - OrderingModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderingModule\n\n\n\ncluster_OrderingModule_declarations\n\n\n\ncluster_OrderingModule_imports\n\n\n\ncluster_OrderingModule_providers\n\n\n\n\nProductCardComponent\n\nProductCardComponent\n\n\n\nOrderingModule\n\nOrderingModule\n\nOrderingModule -->\n\nProductCardComponent->OrderingModule\n\n\n\n\n\nProductListComponent\n\nProductListComponent\n\nOrderingModule -->\n\nProductListComponent->OrderingModule\n\n\n\n\n\nTableSelectorComponent\n\nTableSelectorComponent\n\nOrderingModule -->\n\nTableSelectorComponent->OrderingModule\n\n\n\n\n\nLoadingIndicatorModule\n\nLoadingIndicatorModule\n\nOrderingModule -->\n\nLoadingIndicatorModule->OrderingModule\n\n\n\n\n\nOrderingRoutingModule\n\nOrderingRoutingModule\n\nOrderingModule -->\n\nOrderingRoutingModule->OrderingModule\n\n\n\n\n\nOrderingStoreModule\n\nOrderingStoreModule\n\nOrderingModule -->\n\nOrderingStoreModule->OrderingModule\n\n\n\n\n\nProductPageModule\n\nProductPageModule\n\nOrderingModule -->\n\nProductPageModule->OrderingModule\n\n\n\n\n\nSnackbarModule\n\nSnackbarModule\n\nOrderingModule -->\n\nSnackbarModule->OrderingModule\n\n\n\n\n\nOrderingService\n\nOrderingService\n\nOrderingModule -->\n\nOrderingService->OrderingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ordering/ordering.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProductCardComponent\n                        \n                        \n                            ProductListComponent\n                        \n                        \n                            TableSelectorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            OrderingService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoadingIndicatorModule\n                        \n                        \n                            OrderingRoutingModule\n                        \n                        \n                            OrderingStoreModule\n                        \n                        \n                            ProductPageModule\n                        \n                        \n                            SnackbarModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { LoadingIndicatorModule } from \"../shared/loading-indicator/loading-indicator.module\";\nimport { SnackbarModule } from \"../shared/snackbar\";\nimport { OrderingRoutingModule } from \"./ordering-routing.module\";\nimport { ProductCardComponent } from \"./product-list/product-card/product-card.component\";\nimport { ProductListComponent } from \"./product-list/product-list.component\";\nimport { ProductPageModule } from \"./product-page/product-page.module\";\nimport { OrderingService } from \"./services\";\nimport { OrderingStoreModule } from \"./store/ordering-store.module\";\nimport { TableSelectorComponent } from \"./table-selector/table-selector.component\";\n\n@NgModule({\n  declarations: [TableSelectorComponent, ProductListComponent, ProductCardComponent],\n  imports: [\n    CommonModule,\n    OrderingRoutingModule,\n    OrderingStoreModule,\n    TranslateModule.forChild(),\n    LoadingIndicatorModule,\n    ProductPageModule,\n    SnackbarModule\n  ],\n  providers: [OrderingService]\n})\nexport class OrderingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderingRoutingModule.html":{"url":"modules/OrderingRoutingModule.html","title":"module - OrderingRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderingRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ordering/ordering-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { AngularFireAuthGuard, redirectUnauthorizedTo } from \"@angular/fire/auth-guard\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ResourcesLoadedGuard } from \"@rota/core/services/resources-loaded.guard\";\nimport { ProductListComponent } from \"./product-list/product-list.component\";\nimport { ProductPageComponent } from \"./product-page/product-page.component\";\nimport { TableSelectorComponent } from \"./table-selector/table-selector.component\";\n\nconst redirectUnauthorizedToAuthentication = () => redirectUnauthorizedTo([\"authentication\"]);\n\nconst routes: Routes = [\n  {\n    path: \"select-table\",\n    component: TableSelectorComponent,\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  {\n    path: \"products/:filterCriteria\",\n    component: ProductListComponent,\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  {\n    path: \"product/:id\",\n    component: ProductPageComponent,\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  {\n    path: \"checkout\",\n    loadChildren: () => \"import(\\\"./checkout\\\").then(m => m.CheckoutModule)\",\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  { path: \"\", redirectTo: \"select-table\", pathMatch: \"full\" },\n  { path: \"**\", redirectTo: \"select-table\", pathMatch: \"full\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrderingRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderingService.html":{"url":"injectables/OrderingService.html","title":"injectable - OrderingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrderingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ordering/services/ordering.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                placeOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/ordering/services/ordering.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            placeOrder\n                        \n                        \n                    \n                \n            \n            \n                \nplaceOrder(order: Order, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/services/ordering.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { Order } from \"@rota/core/models\";\nimport { from, Observable } from \"rxjs\";\n\n@Injectable()\nexport class OrderingService {\n  constructor(private afs: AngularFirestore) {}\n\n  placeOrder(order: Order, restaurantId: string): Observable {\n    return from(this.afs.doc(`restaurants/${restaurantId}/orders/${order.id}`).set(order, { merge: true }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderingState.html":{"url":"interfaces/OrderingState.html","title":"interface - OrderingState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/app-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cart\n                                \n                                \n                                        selectedTable\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cart\n                                    \n                                \n                                \n                                    \n                                        cart:         Cart\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cart\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedTable\n                                    \n                                \n                                \n                                    \n                                        selectedTable:         Table\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Table\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Cart } from \"./cart\";\nimport { Group } from \"./group\";\nimport { Order } from \"./order\";\nimport { Product } from \"./product\";\nimport { Table } from \"./table\";\n\nexport interface AppState {\n  restaurant: RestaurantState;\n  auth: AuthState;\n  ordering: OrderingState;\n  resourceManagement: ResourceManagementState;\n}\n\nexport interface RestaurantState {\n  id: string;\n  name: string;\n  language: string;\n  currency: string;\n  tables: Table[];\n  groups: Group[];\n  products: Product[];\n  activeOrders: Order[];\n  isLoading: { tables: boolean; groups: boolean; products: boolean };\n  failedResources: { tables?: boolean; groups?: boolean; products?: boolean };\n  areResourcesLoaded: boolean;\n}\n\nexport interface AuthState {\n  error?: any;\n  isLoading?: boolean;\n}\n\nexport interface OrderingState {\n  selectedTable: Table;\n  cart: Cart;\n}\n\nexport interface ResourceManagementState {\n  isLoading?: boolean;\n}\n\nexport interface ChefState {\n  isLoading?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderingStoreEffects.html":{"url":"injectables/OrderingStoreEffects.html","title":"injectable - OrderingStoreEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrderingStoreEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ordering/store/effects/ordering.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart$\n                            \n                            \n                                placeOrder$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, orderingService: OrderingService, store$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ordering/store/effects/ordering.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderingService\n                                                  \n                                                        \n                                                                        OrderingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addToCart$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrderingStoreActions.addToCart),\n      map(() => OrderingStoreActions.openSuccessSnackbar({ text: \"ORDERING.PRODUCT_PAGE.SNACKBAR_SUCCESS_TEXT\" }))\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/store/effects/ordering.effects.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeOrder$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrderingStoreActions.placeOrder),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.orderingService.placeOrder(action.order, restaurantId).pipe(\n          concatMap(() => [\n            OrderingStoreActions.openSuccessSnackbar({ text: \"ORDERING.CHECKOUT.SNACKBAR_SUCCESS_TEXT\" }),\n            OrderingStoreActions.orderSuccessfullyPlaced(),\n          ]),\n          catchError(() => of(OrderingStoreActions.openErrorSnackbar({ text: \"ORDERING.CHECKOUT.SNACKBAR_FAIL_TEXT\" })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/store/effects/ordering.effects.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action, select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, concatMap, map, switchMap, withLatestFrom } from \"rxjs/operators\";\nimport { OrderingStoreActions } from \"..\";\nimport { OrderingService } from \"../../services\";\n\n@Injectable()\nexport class OrderingStoreEffects {\n  constructor(private actions$: Actions, private orderingService: OrderingService, private store$: Store) {}\n\n  addToCart$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrderingStoreActions.addToCart),\n      map(() => OrderingStoreActions.openSuccessSnackbar({ text: \"ORDERING.PRODUCT_PAGE.SNACKBAR_SUCCESS_TEXT\" }))\n    )\n  );\n\n  placeOrder$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrderingStoreActions.placeOrder),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.orderingService.placeOrder(action.order, restaurantId).pipe(\n          concatMap(() => [\n            OrderingStoreActions.openSuccessSnackbar({ text: \"ORDERING.CHECKOUT.SNACKBAR_SUCCESS_TEXT\" }),\n            OrderingStoreActions.orderSuccessfullyPlaced(),\n          ]),\n          catchError(() => of(OrderingStoreActions.openErrorSnackbar({ text: \"ORDERING.CHECKOUT.SNACKBAR_FAIL_TEXT\" })))\n        )\n      )\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderingStoreModule.html":{"url":"modules/OrderingStoreModule.html","title":"module - OrderingStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderingStoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ordering/store/ordering-store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { OrderingStoreEffects, OrderingStoreUtilsEffects } from \"./effects\";\nimport { orderingReducer } from \"./ordering.reducer\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(\"ordering\", orderingReducer),\n    EffectsModule.forFeature([OrderingStoreEffects, OrderingStoreUtilsEffects]),\n  ],\n})\nexport class OrderingStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderingStoreUtilsEffects.html":{"url":"injectables/OrderingStoreUtilsEffects.html","title":"injectable - OrderingStoreUtilsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrderingStoreUtilsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ordering/store/effects/ordering-utils.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                openErrorSnackbar$\n                            \n                            \n                                openSuccessSnackbar$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ordering/store/effects/ordering-utils.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openErrorSnackbar$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(OrderingStoreActions.openErrorSnackbar),\n        tap((action) => this.snackbarService.openDefaultErrorSnackbar(action.text))\n      ),\n    { dispatch: false }\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/store/effects/ordering-utils.effects.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSuccessSnackbar$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(OrderingStoreActions.openSuccessSnackbar),\n        tap((action) => this.snackbarService.openDefaultSuccessSnackbar(action.text))\n      ),\n    { dispatch: false }\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/store/effects/ordering-utils.effects.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { SnackbarService } from \"@rota/shared/snackbar/services\";\nimport { Observable } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport { OrderingStoreActions } from \"..\";\n\n@Injectable()\nexport class OrderingStoreUtilsEffects {\n  constructor(private actions$: Actions, private snackbarService: SnackbarService) {}\n\n  openSuccessSnackbar$: Observable = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(OrderingStoreActions.openSuccessSnackbar),\n        tap((action) => this.snackbarService.openDefaultSuccessSnackbar(action.text))\n      ),\n    { dispatch: false }\n  );\n\n  openErrorSnackbar$: Observable = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(OrderingStoreActions.openErrorSnackbar),\n        tap((action) => this.snackbarService.openDefaultErrorSnackbar(action.text))\n      ),\n    { dispatch: false }\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/product.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        allergens\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        groupName\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        imagePath\n                                \n                                \n                                            Optional\n                                        imageUrl\n                                \n                                \n                                            Optional\n                                        ingredients\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        preparationTime\n                                \n                                \n                                        price\n                                \n                                \n                                        subgroup\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allergens\n                                    \n                                \n                                \n                                    \n                                        allergens:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagePath\n                                    \n                                \n                                \n                                    \n                                        imagePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                    \n                                \n                                \n                                    \n                                        ingredients:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preparationTime\n                                    \n                                \n                                \n                                    \n                                        preparationTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subgroup\n                                    \n                                \n                                \n                                    \n                                        subgroup:         Subgroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Subgroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Subgroup } from \"./group\";\n\nexport interface Product {\n  id?: string;\n  name: string;\n  groupName: string;\n  subgroup: Subgroup;\n  ingredients?: string;\n  allergens?: string;\n  description?: string;\n  preparationTime?: number;\n  price: number;\n  imagePath?: string;\n  imageUrl?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductCardComponent.html":{"url":"components/ProductCardComponent.html","title":"component - ProductCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProductCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ordering/product-list/product-card/product-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                product-card\n            \n\n            \n                styleUrls\n                ./product-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./product-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onLoad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ordering/product-list/product-card/product-card.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoad\n                        \n                        \n                    \n                \n            \n            \n                \nonLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-list/product-card/product-card.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/product-list/product-card/product-card.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"product-card\",\n  templateUrl: \"./product-card.component.html\",\n  styleUrls: [\"./product-card.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductCardComponent {\n  loading = true;\n  @Input() imageUrl: string;\n\n  onLoad(): void {\n    this.loading = false;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n\n  \n\n\n\n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./product-card.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n:host {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  min-height: 350px;\n  max-width: 300px;\n  padding: 1rem;\n  margin: 1rem;\n  color: $color-primary-olive;\n  cursor: pointer;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.12), 0 1px 1px rgba(0, 0, 0, 0.24);\n}\n\n.image-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 270px;\n  min-height: 200px;\n}\n\nimg {\n  max-width: 250px;\n  max-height: 150px;\n  background-size: cover;\n}\n\n.title {\n  color: $color-secondary-orange;\n  align-self: flex-start;\n}\n\n.description {\n  padding-top: 1rem;\n  line-height: 1.3;\n  min-height: 5rem;\n  max-height: 5rem;\n  overflow: hidden;\n}\n\n.footer {\n  align-self: flex-end;\n  padding-top: 1rem;\n}\n\n.bolder {\n  font-weight: 600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductEditorComponent.html":{"url":"components/ProductEditorComponent.html","title":"component - ProductEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProductEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/resource-management/product-editor/product-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-product-editor\n            \n\n            \n                styleUrls\n                ./product-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./product-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fileFormatError\n                            \n                            \n                                filteredSubgroups$\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                groups$\n                            \n                            \n                                    Private\n                                image\n                            \n                            \n                                imageLoading\n                            \n                            \n                                imagePreviewSrc\n                            \n                            \n                                imageRequiredError\n                            \n                            \n                                isLoading$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                productToEdit\n                            \n                            \n                                subgroups$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachImage\n                            \n                            \n                                    Private\n                                formInitializer\n                            \n                            \n                                    Private\n                                getCorrespondingGroup\n                            \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                    Private\n                                initSubgroups\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImageLoaded\n                            \n                            \n                                saveProduct\n                            \n                            \n                                    Private\n                                setPreview\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    product\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/resource-management/product-editor/product-editor.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachImage\n                        \n                        \n                    \n                \n            \n            \n                \nattachImage(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            formInitializer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formInitializer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCorrespondingGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCorrespondingGroup(subgroupId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subgroupId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Group\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initForm(product?: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSubgroups\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSubgroups()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onImageLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nonImageLoaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveProduct\n                        \n                        \n                    \n                \n            \n            \n                \nsaveProduct()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setPreview\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPreview(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileFormatError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredSubgroups$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groups$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imagePreviewSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageRequiredError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productToEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Product\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subgroups$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        product\n                    \n                \n\n                \n                    \n                        getproduct()\n                    \n                \n                            \n                                \n                                    Defined in src/app/resource-management/product-editor/product-editor.component.ts:131\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { Group, Subgroup } from \"@rota/core/models/group\";\nimport { Product } from \"@rota/core/models/product\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { map, switchMap, takeUntil } from \"rxjs/operators\";\nimport { ResourceManagementStoreActions, ResourceManagementStoreSelectores } from \"../store\";\n\n@Component({\n  selector: \"rota-product-editor\",\n  templateUrl: \"./product-editor.component.html\",\n  styleUrls: [\"./product-editor.component.scss\"],\n})\nexport class ProductEditorComponent implements OnInit, OnDestroy {\n  private groups$ = new BehaviorSubject(undefined);\n  private image: File;\n  private ngUnsubscribe$ = new Subject();\n\n  imageLoading = true;\n  productToEdit: Product;\n  subgroups$: Observable;\n  filteredSubgroups$: Observable;\n  isLoading$: Observable;\n  form: FormGroup;\n  imagePreviewSrc: string;\n  fileFormatError: boolean;\n  imageRequiredError: boolean;\n\n  constructor(private store: Store, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.store.pipe(select(RestaurantStoreSelectors.selectGroups), takeUntil(this.ngUnsubscribe$)).subscribe(this.groups$);\n    this.isLoading$ = this.store.pipe(select(ResourceManagementStoreSelectores.selectIsLoading));\n    this.formInitializer();\n    this.initSubgroups();\n  }\n\n  onImageLoaded() {\n    this.imageLoading = false;\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n  }\n\n  saveProduct(): void {\n    if (this.productToEdit) {\n      this.store.dispatch(ResourceManagementStoreActions.editProduct({ product: { id: this.productToEdit.id, ...this.product } }));\n      return;\n    }\n\n    this.imageRequiredError = false;\n    if (!this.image) {\n      this.imageRequiredError = true;\n      return;\n    }\n\n    this.store.dispatch(ResourceManagementStoreActions.addProduct({ product: this.product, image: this.image }));\n  }\n\n  attachImage(event: { target: { files: File[] } }): void {\n    if (!event.target.files[0]) {\n      return;\n    }\n\n    if (!isImageType(event.target.files[0].type)) {\n      this.fileFormatError = true;\n      return;\n    }\n\n    this.image = event.target.files[0];\n    this.setPreview(event.target.files[0]);\n    this.fileFormatError = false;\n  }\n\n  private formInitializer(): void {\n    this.route.paramMap\n      .pipe(\n        map((params) => params.get(\"id\")),\n        switchMap((id) => this.store.pipe(select(RestaurantStoreSelectors.selectProductById, { id }))),\n        takeUntil(this.ngUnsubscribe$)\n      )\n      .subscribe((product) => {\n        if (!product) {\n          this.form = this.initForm();\n          return;\n        }\n\n        this.form = this.initForm(product);\n        this.productToEdit = product;\n      });\n  }\n\n  private initSubgroups(): void {\n    this.subgroups$ = this.groups$.pipe(\n      map((groups) => {\n        const subgroups: Subgroup[] = [];\n        groups.forEach((group) => group.subgroups.forEach((subgroup) => subgroups.push(subgroup)));\n\n        return subgroups;\n      })\n    );\n  }\n\n  private setPreview(file: File): void {\n    const reader = new FileReader();\n    reader.onload = (_event) => (this.imagePreviewSrc = reader.result as string);\n    reader.readAsDataURL(file);\n  }\n\n  private initForm(product?: Product): FormGroup {\n    if (product) {\n      this.imagePreviewSrc = product.imageUrl;\n    }\n\n    return new FormGroup({\n      name: new FormControl(product ? product.name : \"\", Validators.required),\n      subgroup: new FormControl(product ? product.subgroup.id : \"\", Validators.required),\n      ingredients: new FormControl(product ? product.ingredients : \"\"),\n      allergens: new FormControl(product ? product.allergens : \"\"),\n      description: new FormControl(product ? product.description : \"\"),\n      preparationTime: new FormControl(product ? product.preparationTime : \"\", Validators.pattern(\"[1-9]+[0-9]?\")),\n      price: new FormControl(product ? product.price : \"\", [Validators.required, Validators.pattern(\"[0-9.]+\")]),\n    });\n  }\n\n  private get product(): Product {\n    const subgroupId = this.form.get(\"subgroup\").value;\n    const group = this.getCorrespondingGroup(subgroupId);\n    const correspongingSubgroup = group.subgroups.find((subgroup) => subgroup.id === subgroupId);\n\n    return {\n      name: this.form.controls.name.value,\n      groupName: group.name,\n      subgroup: correspongingSubgroup,\n      ingredients: this.form.controls.ingredients.value,\n      allergens: this.form.controls.allergens.value,\n      description: this.form.controls.description.value,\n      preparationTime: this.form.controls.preparationTime.value,\n      price: +this.form.controls.price.value,\n    };\n  }\n\n  private getCorrespondingGroup(subgroupId: string): Group {\n    return this.groups$.value.find((group) => group.subgroups.some((subgroup) => subgroup.id === subgroupId));\n  }\n}\n\nfunction isImageType(fileType: string): boolean {\n  return fileType.search(/image/gi) !== -1;\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        {{\n          \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_REQUIRED\" | translate\n        }}\n      \n\n      \n        {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.CHOOSE_SUBGROUP_PLACEHOLDER\" | translate }}\n        \n          \n            {{ subgroup.name }}\n          \n        \n        \n          {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_REQUIRED\" | translate }}\n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n        \n          {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_PREPARATION_TIME_PATTERN\" | translate }}\n        \n        {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.PREPARATION_TIME_HINT\" | translate }}\n      \n    \n\n    \n      \n        \n      \n      \n\n      \n        \n        add_photo_alternate\n      \n      \n        {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.CANNOT_EDIT_IMAGE\" | translate }}\n      \n      \n        {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_FILE_FORMAT\" | translate }}\n      \n      \n        {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_IMAGE_REQUIRED\" | translate }}\n      \n\n      \n        \n        \n          {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_PRICE_PATTERN\" | translate }}\n        \n      \n    \n  \n\n  \n    \n      {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.BUTTON_TEXT\" | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./product-editor.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 90%;\n  padding: 1rem;\n}\n\nform {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0.8rem;\n  width: 100%;\n  max-width: 800px;\n\n  .first-column {\n    display: flex;\n    flex-direction: column;\n    margin: 1rem;\n    flex: 1;\n  }\n\n  .second-column {\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    justify-content: flex-end;\n    margin: 1rem;\n    flex: 1;\n\n    .preview-image {\n      display: flex;\n      justify-content: center;\n\n      img {\n        max-width: 300px;\n        max-height: 225px;\n      }\n    }\n\n    label {\n      padding: 1rem;\n      color: $color-primary-olive;\n      user-select: none;\n      cursor: pointer;\n\n      i {\n        font-size: 32px;\n      }\n    }\n  }\n}\n\n.image-edit-error {\n  padding-bottom: 0.8rem;\n  color: $color-secondary-orange;\n  font-size: 0.8rem;\n}\n.file-error {\n  color: $color-secondary-orange;\n  font-size: 0.8rem;\n}\n\n.button {\n  margin-top: 2rem;\n  width: 350px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{          \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_REQUIRED\" | translate        }}                    {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.CHOOSE_SUBGROUP_PLACEHOLDER\" | translate }}                              {{ subgroup.name }}                                    {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_REQUIRED\" | translate }}                                                                                                          {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_PREPARATION_TIME_PATTERN\" | translate }}                {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.PREPARATION_TIME_HINT\" | translate }}                                                              add_photo_alternate                    {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.CANNOT_EDIT_IMAGE\" | translate }}                    {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_FILE_FORMAT\" | translate }}                    {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_IMAGE_REQUIRED\" | translate }}                                      {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.ERROR_PRICE_PATTERN\" | translate }}                                {{ \"RESOURCE_MANAGEMENT.PRODUCT_EDITOR.BUTTON_TEXT\" | translate }}      '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductListComponent.html":{"url":"components/ProductListComponent.html","title":"component - ProductListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProductListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ordering/product-list/product-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-product-list\n            \n\n            \n                styleUrls\n                ./product-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./product-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                products$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterProducts\n                            \n                            \n                                    Private\n                                initCurrency\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openProdcutPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store$: Store, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/ordering/product-list/product-list.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            filterProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-list/product-list.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initCurrency\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initCurrency()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-list/product-list.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-list/product-list.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-list/product-list.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openProdcutPage\n                        \n                        \n                    \n                \n            \n            \n                \nopenProdcutPage(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-list/product-list.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/product-list/product-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/product-list/product-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/product-list/product-list.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { Product } from \"@rota/core/models/product\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Observable, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\n@Component({\n  selector: \"rota-product-list\",\n  templateUrl: \"./product-list.component.html\",\n  styleUrls: [\"./product-list.component.scss\"]\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  products$: Observable;\n  currency: string;\n  private ngUnsubscribe$ = new Subject();\n\n  constructor(private store$: Store, private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    this.filterProducts();\n    this.initCurrency();\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n  }\n\n  openProdcutPage(product: Product): void {\n    this.router.navigate([\"ordering/product\", product.id]);\n  }\n\n  private initCurrency(): void {\n    this.store$\n      .pipe(select(RestaurantStoreSelectors.selectCurrency), takeUntil(this.ngUnsubscribe$))\n      .subscribe(currency => (this.currency = currency));\n  }\n\n  private filterProducts(): void {\n    this.route.paramMap.pipe(takeUntil(this.ngUnsubscribe$)).subscribe(paramMap => {\n      const filterCriteria = paramMap.get(\"filterCriteria\");\n      this.products$ = this.store$.pipe(select(RestaurantStoreSelectors.selectProducts, { filterCriteria }));\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{ product.name }}\n    {{ \"ORDERING.PRODUCT_LIST.PRODUCT_CARD.INGREDIENTS\" | translate }}: {{ product.ingredients }}\n    \n      {{ \"ORDERING.PRODUCT_LIST.PRODUCT_CARD.PRICE\" | translate }}:\n      {{ product.price | currency: currency:\"symbol-narrow\":\"0.2-2\" }}\n    \n  \n\n\n    \n\n    \n                \n                    ./product-list.component.scss\n                \n                :host {\n  overflow: auto;\n}\n\n.container {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ product.name }}    {{ \"ORDERING.PRODUCT_LIST.PRODUCT_CARD.INGREDIENTS\" | translate }}: {{ product.ingredients }}          {{ \"ORDERING.PRODUCT_LIST.PRODUCT_CARD.PRICE\" | translate }}:      {{ product.price | currency: currency:\"symbol-narrow\":\"0.2-2\" }}      '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductPageComponent.html":{"url":"components/ProductPageComponent.html","title":"component - ProductPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProductPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ordering/product-page/product-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-product-page\n            \n\n            \n                styleUrls\n                ./product-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./product-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                product$\n                            \n                            \n                                selectedAmount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                convertToNAIfEmpty\n                            \n                            \n                                    Private\n                                initCurrency\n                            \n                            \n                                    Private\n                                initProduct\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, store$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ordering/product-page/product-page.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToCart\n                        \n                        \n                    \n                \n            \n            \n                \naddToCart(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-page/product-page.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToNAIfEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToNAIfEmpty(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-page/product-page.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initCurrency\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initCurrency()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-page/product-page.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initProduct()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-page/product-page.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-page/product-page.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/product-page/product-page.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/product-page/product-page.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/product-page/product-page.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            product$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/product-page/product-page.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAmount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/product-page/product-page.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { CartItem } from \"@rota/core/models/cart\";\nimport { Product } from \"@rota/core/models/product\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Observable, Subject } from \"rxjs\";\nimport { filter, map, switchMap, takeUntil } from \"rxjs/operators\";\nimport { OrderingStoreActions } from \"../store\";\n\n@Component({\n  selector: \"rota-product-page\",\n  templateUrl: \"./product-page.component.html\",\n  styleUrls: [\"./product-page.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProductPageComponent implements OnInit, OnDestroy {\n  product$: Observable;\n  selectedAmount = 1;\n  currency: string;\n  private ngUnsubscribe$ = new Subject();\n\n  constructor(private route: ActivatedRoute, private store$: Store) {}\n\n  ngOnInit(): void {\n    this.initProduct();\n    this.initCurrency();\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n  }\n\n  addToCart(product: Product): void {\n    const cartItem: CartItem = {\n      product,\n      amount: this.selectedAmount\n    };\n\n    this.store$.dispatch(OrderingStoreActions.addToCart({ cartItem }));\n  }\n\n  convertToNAIfEmpty(input: string): string {\n    if (!input) {\n      return \"N/A\";\n    }\n\n    return input;\n  }\n\n  private initCurrency(): void {\n    this.store$\n      .pipe(select(RestaurantStoreSelectors.selectCurrency), takeUntil(this.ngUnsubscribe$))\n      .subscribe(currency => (this.currency = currency));\n  }\n\n  private initProduct(): void {\n    this.product$ = this.route.paramMap.pipe(\n      map(params => params.get(\"id\")),\n      filter(productId => !!productId),\n      switchMap(productId => this.store$.pipe(select(RestaurantStoreSelectors.selectProductById, { id: productId })))\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{ product.name }}\n    \n    \n      \n        {{ \"ORDERING.PRODUCT_PAGE.DESCRIPTION\" | translate }}:\n        {{ convertToNAIfEmpty(product.description) }}\n      \n      \n        {{ \"ORDERING.PRODUCT_PAGE.INGREDIENTS\" | translate }}:\n        {{ convertToNAIfEmpty(product.ingredients) }}\n      \n      \n         {{ \"ORDERING.PRODUCT_PAGE.ALLERGENS\" | translate }}: \n        \n          {{ convertToNAIfEmpty(product.allergens) }}\n        \n      \n      \n        \n          {{ \"ORDERING.PRODUCT_PAGE.PREPARATION_TIME\" | translate }}: \n          {{ convertToNAIfEmpty(product.preparationTime) }} {{ \"ORDERING.PRODUCT_PAGE.PREPARATION_TIME_UNIT\" | translate }}\n        \n        \n          {{ \"ORDERING.PRODUCT_PAGE.PRICE\" | translate }}:\n          {{ product.price | currency: currency:\"symbol-narrow\":\"0.2-2\" }}\n        \n      \n    \n\n    \n      \n      add_shopping_cart\n    \n  \n\n\n\n  {{ \"ORDERING.PRODUCT_PAGE.NO_PRODUCT_FOUND\" | translate }}\n\n\n    \n\n    \n                \n                    ./product-page.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n:host {\n  overflow: auto;\n  padding: 1rem;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  top: 3rem;\n  color: $color-primary-olive;\n  padding-bottom: 1rem;\n}\n\nimg {\n  padding: 2rem;\n  max-width: 500px;\n  max-height: 300px;\n}\n\n.name {\n  color: $color-secondary-orange;\n  font-size: 1.5rem;\n}\n\n.description {\n  padding-top: 1.5rem;\n  line-height: 2;\n  max-width: 80%;\n}\n\n.price-row {\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid $color-primary-olive;\n  padding-bottom: 1rem;\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.material-icons {\n  padding-top: 1rem;\n  font-size: 32px;\n  color: $color-primary-olive;\n  cursor: pointer;\n  user-select: none;\n}\n\n.bolder {\n  font-weight: 600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ product.name }}                      {{ \"ORDERING.PRODUCT_PAGE.DESCRIPTION\" | translate }}:        {{ convertToNAIfEmpty(product.description) }}                    {{ \"ORDERING.PRODUCT_PAGE.INGREDIENTS\" | translate }}:        {{ convertToNAIfEmpty(product.ingredients) }}                     {{ \"ORDERING.PRODUCT_PAGE.ALLERGENS\" | translate }}:                   {{ convertToNAIfEmpty(product.allergens) }}                                      {{ \"ORDERING.PRODUCT_PAGE.PREPARATION_TIME\" | translate }}:           {{ convertToNAIfEmpty(product.preparationTime) }} {{ \"ORDERING.PRODUCT_PAGE.PREPARATION_TIME_UNIT\" | translate }}                          {{ \"ORDERING.PRODUCT_PAGE.PRICE\" | translate }}:          {{ product.price | currency: currency:\"symbol-narrow\":\"0.2-2\" }}                                  add_shopping_cart        {{ \"ORDERING.PRODUCT_PAGE.NO_PRODUCT_FOUND\" | translate }}'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductPageModule.html":{"url":"modules/ProductPageModule.html","title":"module - ProductPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductPageModule\n\n\n\ncluster_ProductPageModule_declarations\n\n\n\ncluster_ProductPageModule_imports\n\n\n\n\nProductPageComponent\n\nProductPageComponent\n\n\n\nProductPageModule\n\nProductPageModule\n\nProductPageModule -->\n\nProductPageComponent->ProductPageModule\n\n\n\n\n\nAmountSelectorModule\n\nAmountSelectorModule\n\nProductPageModule -->\n\nAmountSelectorModule->ProductPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ordering/product-page/product-page.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProductPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AmountSelectorModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { AmountSelectorModule } from \"@rota/shared/amount-selector\";\nimport { ProductPageComponent } from \"./product-page.component\";\n\n@NgModule({\n  declarations: [ProductPageComponent],\n  imports: [CommonModule, TranslateModule.forChild(), AmountSelectorModule]\n})\nexport class ProductPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RedirectIfFullyAuthenticated.html":{"url":"guards/RedirectIfFullyAuthenticated.html","title":"guard - RedirectIfFullyAuthenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RedirectIfFullyAuthenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/services/authenticated.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store$: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/authenticated.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/authenticated.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { isNull, isUndefined } from \"util\";\n\n@Injectable()\nexport class RedirectIfFullyAuthenticated implements CanActivate {\n  constructor(private store$: Store, private router: Router) {}\n\n  canActivate(): Observable {\n    return this.store$.pipe(\n      select(RestaurantStoreSelectors.selectRestaurant),\n      map((restaurant: { restaurantId: string; restaurantName: string }) => {\n        if (isNull(restaurant.restaurantId) || isUndefined(restaurant.restaurantId)) {\n          return true;\n        }\n\n        this.router.navigateByUrl(\"admin\");\n        return false;\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceManagementModule.html":{"url":"modules/ResourceManagementModule.html","title":"module - ResourceManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ResourceManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceManagementModule\n\n\n\ncluster_ResourceManagementModule_declarations\n\n\n\ncluster_ResourceManagementModule_imports\n\n\n\ncluster_ResourceManagementModule_providers\n\n\n\n\nGroupEditorComponent\n\nGroupEditorComponent\n\n\n\nResourceManagementModule\n\nResourceManagementModule\n\nResourceManagementModule -->\n\nGroupEditorComponent->ResourceManagementModule\n\n\n\n\n\nModifyComponent\n\nModifyComponent\n\nResourceManagementModule -->\n\nModifyComponent->ResourceManagementModule\n\n\n\n\n\nProductEditorComponent\n\nProductEditorComponent\n\nResourceManagementModule -->\n\nProductEditorComponent->ResourceManagementModule\n\n\n\n\n\nTableEditorComponent\n\nTableEditorComponent\n\nResourceManagementModule -->\n\nTableEditorComponent->ResourceManagementModule\n\n\n\n\n\nButtonOutlinedModule\n\nButtonOutlinedModule\n\nResourceManagementModule -->\n\nButtonOutlinedModule->ResourceManagementModule\n\n\n\n\n\nConfirmationDialogModule\n\nConfirmationDialogModule\n\nResourceManagementModule -->\n\nConfirmationDialogModule->ResourceManagementModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nResourceManagementModule -->\n\nDialogModule->ResourceManagementModule\n\n\n\n\n\nExpansionPanelModule\n\nExpansionPanelModule\n\nResourceManagementModule -->\n\nExpansionPanelModule->ResourceManagementModule\n\n\n\n\n\nLoadingIndicatorModule\n\nLoadingIndicatorModule\n\nResourceManagementModule -->\n\nLoadingIndicatorModule->ResourceManagementModule\n\n\n\n\n\nResourceManagementRoutingModule\n\nResourceManagementRoutingModule\n\nResourceManagementModule -->\n\nResourceManagementRoutingModule->ResourceManagementModule\n\n\n\n\n\nResourceManagementStoreModule\n\nResourceManagementStoreModule\n\nResourceManagementModule -->\n\nResourceManagementStoreModule->ResourceManagementModule\n\n\n\n\n\nSnackbarModule\n\nSnackbarModule\n\nResourceManagementModule -->\n\nSnackbarModule->ResourceManagementModule\n\n\n\n\n\nResourceManagementService\n\nResourceManagementService\n\nResourceManagementModule -->\n\nResourceManagementService->ResourceManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/resource-management/resource-management.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupEditorComponent\n                        \n                        \n                            ModifyComponent\n                        \n                        \n                            ProductEditorComponent\n                        \n                        \n                            TableEditorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ResourceManagementService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonOutlinedModule\n                        \n                        \n                            ConfirmationDialogModule\n                        \n                        \n                            DialogModule\n                        \n                        \n                            ExpansionPanelModule\n                        \n                        \n                            LoadingIndicatorModule\n                        \n                        \n                            ResourceManagementRoutingModule\n                        \n                        \n                            ResourceManagementStoreModule\n                        \n                        \n                            SnackbarModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { LoadingIndicatorModule } from \"@rota/shared/loading-indicator/loading-indicator.module\";\nimport { ButtonOutlinedModule } from \"../shared/button-outlined/button-outlined.module\";\nimport { ConfirmationDialogModule, DialogModule } from \"../shared/dialog\";\nimport { ExpansionPanelModule } from \"../shared/expansion-panel/expansion-panel.module\";\nimport { SnackbarModule } from \"../shared/snackbar\";\nimport { GroupEditorComponent } from \"./group-editor/group-editor.component\";\nimport { ModifyComponent } from \"./modify/modify.component\";\nimport { ProductEditorComponent } from \"./product-editor/product-editor.component\";\nimport { ResourceManagementRoutingModule } from \"./resource-management-routing.module\";\nimport { ResourceManagementService } from \"./services/resource-management.service\";\nimport { ResourceManagementStoreModule } from \"./store/resource-management-store.module\";\nimport { TableEditorComponent } from \"./table-editor/table-editor.component\";\n\n@NgModule({\n  declarations: [ModifyComponent, TableEditorComponent, GroupEditorComponent, ProductEditorComponent],\n  imports: [\n    CommonModule,\n    ResourceManagementRoutingModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    TranslateModule.forChild(),\n    ButtonOutlinedModule,\n    ResourceManagementStoreModule,\n    ExpansionPanelModule,\n    DialogModule,\n    ConfirmationDialogModule,\n    SnackbarModule,\n    LoadingIndicatorModule,\n    MatSelectModule,\n  ],\n  providers: [ResourceManagementService],\n})\nexport class ResourceManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceManagementRoutingModule.html":{"url":"modules/ResourceManagementRoutingModule.html","title":"module - ResourceManagementRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ResourceManagementRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/resource-management/resource-management-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { AngularFireAuthGuard, redirectUnauthorizedTo } from \"@angular/fire/auth-guard\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ResourcesLoadedGuard } from \"@rota/core/services/resources-loaded.guard\";\nimport { GroupEditorComponent } from \"./group-editor/group-editor.component\";\nimport { ModifyComponent } from \"./modify/modify.component\";\nimport { ProductEditorComponent } from \"./product-editor/product-editor.component\";\nimport { TableEditorComponent } from \"./table-editor/table-editor.component\";\n\nconst redirectUnauthorizedToAuthentication = () => redirectUnauthorizedTo([\"authentication\"]);\n\nconst routes: Routes = [\n  {\n    path: \"table-editor\",\n    component: TableEditorComponent,\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  {\n    path: \"group-editor\",\n    component: GroupEditorComponent,\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  {\n    path: \"product-editor\",\n    component: ProductEditorComponent,\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n  {\n    path: \"modify\",\n    component: ModifyComponent,\n    canActivate: [AngularFireAuthGuard, ResourcesLoadedGuard],\n    data: { authGuardPipe: redirectUnauthorizedToAuthentication }\n  },\n\n  { path: \"\", pathMatch: \"full\", redirectTo: \"table-editor\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ResourceManagementRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceManagementService.html":{"url":"injectables/ResourceManagementService.html","title":"injectable - ResourceManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResourceManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/resource-management/services/resource-management.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addGroup\n                            \n                            \n                                addProduct\n                            \n                            \n                                addTable\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                deleteImage\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                deleteTable\n                            \n                            \n                                editGroup\n                            \n                            \n                                editProduct\n                            \n                            \n                                editTable\n                            \n                            \n                                uploadImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, afStorage: AngularFireStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/resource-management/services/resource-management.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afStorage\n                                                  \n                                                        \n                                                                    AngularFireStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGroup\n                        \n                        \n                    \n                \n            \n            \n                \naddGroup(group: Group, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addProduct\n                        \n                        \n                    \n                \n            \n            \n                \naddProduct(product: Product, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTable\n                        \n                        \n                    \n                \n            \n            \n                \naddTable(name: string, numberOfSeats: number, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    numberOfSeats\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteGroup\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteGroup(id: string, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteImage\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteImage(imageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProduct\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTable\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTable(id: string, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editGroup\n                        \n                        \n                    \n                \n            \n            \n                \neditGroup(group: Group, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editProduct\n                        \n                        \n                    \n                \n            \n            \n                \neditProduct(product: Product, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTable\n                        \n                        \n                    \n                \n            \n            \n                \neditTable(table: Table, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadImage\n                        \n                        \n                    \n                \n            \n            \n                \nuploadImage(image: File, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/services/resource-management.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { AngularFireStorage } from \"@angular/fire/storage\";\nimport { Group, Table } from \"@rota/core/models\";\nimport { Product } from \"@rota/core/models/product\";\nimport { from, Observable } from \"rxjs\";\nimport { last, switchMap } from \"rxjs/operators\";\n\n@Injectable()\nexport class ResourceManagementService {\n  constructor(private afs: AngularFirestore, private afStorage: AngularFireStorage) {}\n\n  addTable(name: string, numberOfSeats: number, restaurantId: string): Observable {\n    const id = this.afs.createId();\n    return from(this.afs.doc(`restaurants/${restaurantId}/tables/${id}`).set({ id, name, numberOfSeats }));\n  }\n\n  editTable(table: Table, restaurantId: string): Observable {\n    return from(this.afs.doc(`restaurants/${restaurantId}/tables/${table.id}`).update(table));\n  }\n\n  deleteTable(id: string, restaurantId: string): Observable {\n    return from(this.afs.doc(`restaurants/${restaurantId}/tables/${id}`).delete());\n  }\n\n  addGroup(group: Group, restaurantId: string): Observable {\n    const id = this.afs.createId();\n    return from(this.afs.doc(`restaurants/${restaurantId}/groups/${id}`).set({ id, ...group }));\n  }\n\n  editGroup(group: Group, restaurantId: string): Observable {\n    return from(this.afs.doc(`restaurants/${restaurantId}/groups/${group.id}`).update(group));\n  }\n\n  deleteGroup(id: string, restaurantId: string): Observable {\n    return from(this.afs.doc(`restaurants/${restaurantId}/groups/${id}`).delete());\n  }\n\n  addProduct(product: Product, restaurantId: string): Observable {\n    const id = this.afs.createId();\n    return from(this.afs.doc(`restaurants/${restaurantId}/products/${id}`).set({ id, ...product }));\n  }\n\n  uploadImage(image: File, restaurantId: string): Observable {\n    const imageRef = this.afStorage.ref(`${restaurantId}/${image.name}`);\n    return imageRef\n      .put(image)\n      .snapshotChanges()\n      .pipe(\n        last(),\n        switchMap(() => imageRef.getDownloadURL())\n      );\n  }\n\n  editProduct(product: Product, restaurantId: string): Observable {\n    return from(this.afs.doc(`restaurants/${restaurantId}/products/${product.id}`).update(product));\n  }\n\n  deleteProduct(id: string, restaurantId: string): Observable {\n    return from(this.afs.doc(`restaurants/${restaurantId}/products/${id}`).delete());\n  }\n\n  deleteImage(imageUrl: string): Observable {\n    return from(this.afStorage.storage.refFromURL(imageUrl).delete());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceManagementState.html":{"url":"interfaces/ResourceManagementState.html","title":"interface - ResourceManagementState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResourceManagementState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/app-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        isLoading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Cart } from \"./cart\";\nimport { Group } from \"./group\";\nimport { Order } from \"./order\";\nimport { Product } from \"./product\";\nimport { Table } from \"./table\";\n\nexport interface AppState {\n  restaurant: RestaurantState;\n  auth: AuthState;\n  ordering: OrderingState;\n  resourceManagement: ResourceManagementState;\n}\n\nexport interface RestaurantState {\n  id: string;\n  name: string;\n  language: string;\n  currency: string;\n  tables: Table[];\n  groups: Group[];\n  products: Product[];\n  activeOrders: Order[];\n  isLoading: { tables: boolean; groups: boolean; products: boolean };\n  failedResources: { tables?: boolean; groups?: boolean; products?: boolean };\n  areResourcesLoaded: boolean;\n}\n\nexport interface AuthState {\n  error?: any;\n  isLoading?: boolean;\n}\n\nexport interface OrderingState {\n  selectedTable: Table;\n  cart: Cart;\n}\n\nexport interface ResourceManagementState {\n  isLoading?: boolean;\n}\n\nexport interface ChefState {\n  isLoading?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceManagementStoreEffects.html":{"url":"injectables/ResourceManagementStoreEffects.html","title":"injectable - ResourceManagementStoreEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResourceManagementStoreEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/resource-management/store/resource-management.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addGroup$\n                            \n                            \n                                addTable$\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                deleteProductImage\n                            \n                            \n                                deleteTable$\n                            \n                            \n                                editGroup\n                            \n                            \n                                editProduct$\n                            \n                            \n                                editTable$\n                            \n                            \n                                saveProduct$\n                            \n                            \n                                uploadImage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, resourceManagement: ResourceManagementService, store$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/resource-management/store/resource-management.effects.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceManagement\n                                                  \n                                                        \n                                                                        ResourceManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addGroup$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.addGroup),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.addGroup(action.group, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.group.name })),\n          catchError((_error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTable$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.addTable),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.addTable(action.name, action.numberOfSeats, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.name })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: action.name })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.deleteGroup),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.deleteGroup(action.id, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: \"Group Deleted\" })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteProduct\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.deleteProduct),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.deleteProduct(action.id, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: \"Product Deleted\" })),\n          catchError((_error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:141\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteProductImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.deleteProduct),\n      switchMap((action) =>\n        this.resourceManagement.deleteImage(action.imageUrl).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: \"Product Image Deleted\" })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:154\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteTable$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.deleteTable),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.deleteTable(action.id, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: \"Table deleted\" })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.editGroup),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.editGroup(action.group, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.group.name })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: action.group.name })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editProduct$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.editProduct),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) => {\n        return this.resourceManagement.editProduct(action.product, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.product.name })),\n          catchError((_error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        );\n      })\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editTable$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.editTable),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) => {\n        return this.resourceManagement.editTable(action.table, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.table.name })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: action.table.name })))\n        );\n      })\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveProduct$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.saveProduct),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) => {\n        return this.resourceManagement.addProduct(action.product, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.product.name })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        );\n      })\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadImage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.addProduct),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.uploadImage(action.image, restaurantId).pipe(\n          map((imageUrl) => {\n            const product: Product = {\n              ...action.product,\n              imageUrl,\n              imagePath: `${restaurantId}/${action.image.name}`,\n            };\n\n            return ResourceManagementStoreActions.saveProduct({ product, restaurantId });\n          }),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse(error)))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-management.effects.ts:94\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action, select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { Product } from \"@rota/core/models/product\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, map, switchMap, withLatestFrom } from \"rxjs/operators\";\nimport { ResourceManagementService } from \"../services/resource-management.service\";\nimport * as ResourceManagementStoreActions from \"./resource-management.actions\";\n\n@Injectable()\nexport class ResourceManagementStoreEffects {\n  constructor(private actions$: Actions, private resourceManagement: ResourceManagementService, private store$: Store) {}\n\n  addTable$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.addTable),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.addTable(action.name, action.numberOfSeats, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.name })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: action.name })))\n        )\n      )\n    )\n  );\n\n  editTable$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.editTable),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) => {\n        return this.resourceManagement.editTable(action.table, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.table.name })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: action.table.name })))\n        );\n      })\n    )\n  );\n\n  deleteTable$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.deleteTable),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.deleteTable(action.id, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: \"Table deleted\" })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        )\n      )\n    )\n  );\n\n  addGroup$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.addGroup),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.addGroup(action.group, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.group.name })),\n          catchError((_error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        )\n      )\n    )\n  );\n\n  editGroup: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.editGroup),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.editGroup(action.group, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.group.name })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: action.group.name })))\n        )\n      )\n    )\n  );\n\n  deleteGroup: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.deleteGroup),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.deleteGroup(action.id, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: \"Group Deleted\" })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        )\n      )\n    )\n  );\n\n  uploadImage$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.addProduct),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.uploadImage(action.image, restaurantId).pipe(\n          map((imageUrl) => {\n            const product: Product = {\n              ...action.product,\n              imageUrl,\n              imagePath: `${restaurantId}/${action.image.name}`,\n            };\n\n            return ResourceManagementStoreActions.saveProduct({ product, restaurantId });\n          }),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse(error)))\n        )\n      )\n    )\n  );\n\n  saveProduct$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.saveProduct),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) => {\n        return this.resourceManagement.addProduct(action.product, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.product.name })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        );\n      })\n    )\n  );\n\n  editProduct$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.editProduct),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) => {\n        return this.resourceManagement.editProduct(action.product, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: action.product.name })),\n          catchError((_error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        );\n      })\n    )\n  );\n\n  deleteProduct: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.deleteProduct),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurantId]) =>\n        this.resourceManagement.deleteProduct(action.id, restaurantId).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: \"Product Deleted\" })),\n          catchError((_error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        )\n      )\n    )\n  );\n\n  deleteProductImage: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ResourceManagementStoreActions.deleteProduct),\n      switchMap((action) =>\n        this.resourceManagement.deleteImage(action.imageUrl).pipe(\n          map(() => ResourceManagementStoreActions.successResponse({ successResponse: \"Product Image Deleted\" })),\n          catchError((error) => of(ResourceManagementStoreActions.errorResponse({ error: \"error\" })))\n        )\n      )\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceManagementStoreModule.html":{"url":"modules/ResourceManagementStoreModule.html","title":"module - ResourceManagementStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    ResourceManagementStoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/resource-management/store/resource-management-store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { ResourceManagementStoreEffects } from \"./resource-management.effects\";\nimport { resourceManagementReducer } from \"./resource-management.reducer\";\nimport { ResourceManagementUtilsStoreEffects } from \"./resource-managemet-utils.effects\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(\"resourceManagement\", resourceManagementReducer),\n    EffectsModule.forFeature([ResourceManagementStoreEffects, ResourceManagementUtilsStoreEffects])\n  ]\n})\nexport class ResourceManagementStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceManagementUtilsStoreEffects.html":{"url":"injectables/ResourceManagementUtilsStoreEffects.html","title":"injectable - ResourceManagementUtilsStoreEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResourceManagementUtilsStoreEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/resource-management/store/resource-managemet-utils.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showErrorSnackbar\n                            \n                            \n                                showSuccessSnackbar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resource-management/store/resource-managemet-utils.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showErrorSnackbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ResourceManagementStoreActions.errorResponse),\n        tap(action => this.snackbarService.openDefaultErrorSnackbar(action.error))\n      ),\n    { dispatch: false }\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-managemet-utils.effects.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSuccessSnackbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ResourceManagementStoreActions.successResponse),\n        tap(action => this.snackbarService.openDefaultSuccessSnackbar(action.successResponse))\n      ),\n    { dispatch: false }\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/store/resource-managemet-utils.effects.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { SnackbarService } from \"@rota/shared/snackbar/services\";\nimport { Observable } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport * as ResourceManagementStoreActions from \"./resource-management.actions\";\n\n@Injectable()\nexport class ResourceManagementUtilsStoreEffects {\n  constructor(private actions$: Actions, private snackbarService: SnackbarService) {}\n\n  showSuccessSnackbar: Observable = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ResourceManagementStoreActions.successResponse),\n        tap(action => this.snackbarService.openDefaultSuccessSnackbar(action.successResponse))\n      ),\n    { dispatch: false }\n  );\n\n  showErrorSnackbar: Observable = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ResourceManagementStoreActions.errorResponse),\n        tap(action => this.snackbarService.openDefaultErrorSnackbar(action.error))\n      ),\n    { dispatch: false }\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResourcesLoadedGuard.html":{"url":"guards/ResourcesLoadedGuard.html","title":"guard - ResourcesLoadedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResourcesLoadedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/services/resources-loaded.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/resources-loaded.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(_next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/resources-loaded.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { AppState } from \"../models/app-state\";\n\n@Injectable()\nexport class ResourcesLoadedGuard implements CanActivate {\n  constructor(private store: Store, private router: Router) {}\n\n  canActivate(_next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.store.pipe(\n      select(RestaurantStoreSelectors.selectAreResourcesLoaded),\n      map(areResourcesLoaded => {\n        if (areResourcesLoaded) {\n          return true;\n        }\n\n        this.router.navigate([\"/loading-resources\"], { queryParams: { redirectUrl: state.url } });\n        return false;\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestaurantAuthComponent.html":{"url":"components/RestaurantAuthComponent.html","title":"component - RestaurantAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RestaurantAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/restaurant-auth/restaurant-auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-restaurant-auth\n            \n\n            \n                styleUrls\n                ./restaurant-auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./restaurant-auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authError$\n                            \n                            \n                                loading$\n                            \n                            \n                                restaurantFormData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRestaurant\n                            \n                            \n                                    Private\n                                getRestaurantCredentials\n                            \n                            \n                                    Private\n                                initRestaurantFormData\n                            \n                            \n                                joinRestaurant\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userId\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store$: Store, afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createRestaurant\n                        \n                        \n                    \n                \n            \n            \n                \ncreateRestaurant()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRestaurantCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRestaurantCredentials(form: FormGroup, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RestaurantCredentials\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initRestaurantFormData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initRestaurantFormData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         AuthFormData\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            joinRestaurant\n                        \n                        \n                    \n                \n            \n            \n                \njoinRestaurant()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authError$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restaurantFormData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthFormData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n\n                \n                    \n                        getuserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/restaurant-auth/restaurant-auth.component.ts:79\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { Observable } from \"rxjs\";\nimport { AuthFormData } from \"../auth-form/auth-form.component\";\nimport { RestaurantCredentials } from \"../models/restaurant-credentials.model\";\nimport * as AuthStoreActions from \"../store/auth.actions\";\nimport * as AuthStoreSelectors from \"../store/auth.selectors\";\n\n@Component({\n  selector: \"rota-restaurant-auth\",\n  templateUrl: \"./restaurant-auth.component.html\",\n  styleUrls: [\"./restaurant-auth.component.scss\"]\n})\nexport class RestaurantAuthComponent implements OnInit {\n  restaurantFormData: AuthFormData;\n  authError$: Observable;\n  loading$: Observable;\n\n  constructor(private store$: Store, private afAuth: AngularFireAuth) {}\n\n  ngOnInit() {\n    this.restaurantFormData = this.initRestaurantFormData();\n    this.authError$ = this.store$.pipe(select(AuthStoreSelectors.selectError));\n    this.loading$ = this.store$.pipe(select(AuthStoreSelectors.selectIsLoading));\n  }\n\n  createRestaurant(): void {\n    const restaurantCredentials = this.getRestaurantCredentials(this.restaurantFormData.form, this.userId);\n    this.store$.dispatch(AuthStoreActions.createRestaurant({ restaurantCredentials }));\n  }\n\n  joinRestaurant(): void {\n    const restaurantCredentials = this.getRestaurantCredentials(this.restaurantFormData.form, this.userId);\n    this.store$.dispatch(AuthStoreActions.joinUserToRestaurant({ restaurantCredentials }));\n  }\n\n  resetError(): void {\n    this.store$.dispatch(AuthStoreActions.setError({ error: null }));\n  }\n\n  private initRestaurantFormData(): AuthFormData {\n    const form = new FormGroup({\n      restaurantName: new FormControl(\"\", [Validators.required, Validators.minLength(4)]),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(6)])\n    });\n\n    return {\n      form,\n      formControls: [\n        {\n          type: \"text\",\n          name: \"restaurantName\",\n          placeholder: \"AUTH.RESTAURNAT.RESTAURANT_NAME_PLACEHOLDER\",\n          icon: \"account_circle\",\n          hint: \"AUTH.RESTAURNAT.RESTAURANT_NAME_MIN_CHAR_LENGTH\"\n        },\n        {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"AUTH.RESTAURNAT.PASSWORD_PLACEHOLDER\",\n          icon: \"lock\",\n          hint: \"AUTH.RESTAURNAT.PASSWORD_MIN_CHAR_LENGTH\"\n        }\n      ]\n    };\n  }\n\n  private getRestaurantCredentials(form: FormGroup, userId: string): RestaurantCredentials {\n    return {\n      name: form.controls.restaurantName.value,\n      password: form.controls.password.value,\n      userId\n    };\n  }\n\n  private get userId(): string {\n    return this.afAuth.auth.currentUser.uid;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ \"AUTH.RESTAURANT.CREATE\" | translate }}\n      \n\n      \n        \n          {{ \"AUTH.RESTAURANT.CREATE_RESTAURANT\" | translate }}:\n          \n\n          \n            \n              {{ \"AUTH.RESTAURANT.CREATE\" | translate }}\n            \n          \n\n          \n            \n              \n                {{ \"AUTH.RESTAURNAT.RESTAURANT_NAME_TAKEN\" | translate }}\n              \n              {{ \"AUTH.RESTAURANT.UNEXPECTED_ERROR\" | translate }} \n            \n          \n        \n      \n    \n\n    \n      \n        {{ \"AUTH.RESTAURANT.JOIN\" | translate }}\n      \n\n      \n        \n          {{ \"AUTH.RESTAURANT.JOIN_RESTAURANT\" | translate }}:\n          \n\n          \n            \n              {{ \"AUTH.RESTAURANT.JOIN\" | translate }}\n            \n          \n\n          \n            \n              \n                {{ \"AUTH.RESTAURANT.ERROR_WRONG_PASSWORD_OR_RESTAURANT\" | translate }}\n              \n              {{ \"AUTH.RESTAURANT.UNEXPECTED_ERROR\" | translate }} \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./restaurant-auth.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.tabgroup-wrapper {\n  display: flex;\n  justify-content: center;\n  padding: 1rem;\n  margin-top: 3rem;\n\n  .tab-label {\n    font-size: 1.1rem;\n    font-weight: 500;\n    color: $color-primary-olive;\n  }\n\n  .tab-content {\n    max-width: 400px;\n    padding: 1rem;\n\n    .form-label {\n      margin-top: 1rem;\n      margin-bottom: 1rem;\n      font-weight: 500;\n    }\n\n    .message {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 1rem;\n      min-height: 1rem;\n      max-height: 4rem;\n      font-size: 0.9rem;\n\n      .success {\n        color: $color-success;\n      }\n\n      .error {\n        color: $color-secondary-orange;\n      }\n    }\n\n    .margin-top {\n      margin-top: 1rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \"AUTH.RESTAURANT.CREATE\" | translate }}                              {{ \"AUTH.RESTAURANT.CREATE_RESTAURANT\" | translate }}:                                              {{ \"AUTH.RESTAURANT.CREATE\" | translate }}                                                                          {{ \"AUTH.RESTAURNAT.RESTAURANT_NAME_TAKEN\" | translate }}                            {{ \"AUTH.RESTAURANT.UNEXPECTED_ERROR\" | translate }}                                                           {{ \"AUTH.RESTAURANT.JOIN\" | translate }}                              {{ \"AUTH.RESTAURANT.JOIN_RESTAURANT\" | translate }}:                                              {{ \"AUTH.RESTAURANT.JOIN\" | translate }}                                                                          {{ \"AUTH.RESTAURANT.ERROR_WRONG_PASSWORD_OR_RESTAURANT\" | translate }}                            {{ \"AUTH.RESTAURANT.UNEXPECTED_ERROR\" | translate }}                                           '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RestaurantAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestaurantAuthResponse.html":{"url":"interfaces/RestaurantAuthResponse.html","title":"interface - RestaurantAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RestaurantAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/store/auth.effects.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { RestaurantStoreAuthActions } from \"@rota/root-store/restaurant-store\";\nimport { Observable, of, pipe } from \"rxjs\";\nimport { catchError, concatMap, map, switchMap, tap } from \"rxjs/operators\";\nimport { AuthService } from \"../services/auth.service\";\nimport * as AuthStoreActions from \"./auth.actions\";\n\ninterface RestaurantAuthResponse {\n  status: string;\n  data: {\n    restaurant: {\n      restaurantId: string;\n      restaurantName: string;\n    };\n  };\n}\n\nconst handleUserAuth = pipe(\n  map(() => AuthStoreActions.authSuccess({ navigateTo: \"authentication/restaurant\" })),\n  catchError((error) => of(AuthStoreActions.setError({ error })))\n);\n\nconst handleRestaurantAuth = pipe(\n  concatMap((response: RestaurantAuthResponse) => {\n    return [\n      RestaurantStoreAuthActions.saveRestaurantToLocalStorage({\n        id: response.data.restaurant.restaurantId,\n        name: response.data.restaurant.restaurantName,\n      }),\n      AuthStoreActions.authSuccess({ navigateTo: \"loading-resources\" }),\n    ];\n  }),\n  catchError((error) => of(AuthStoreActions.setError({ error: error.error })))\n);\n\n@Injectable()\nexport class AuthStoreEffects {\n  constructor(private actions$: Actions, private authService: AuthService, private router: Router) {}\n\n  registerUser$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.registerUser),\n      switchMap((action) => this.authService.registerWithEmailAndPassword(action.userCredentials).pipe(handleUserAuth))\n    )\n  );\n\n  loginUser$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.loginUser),\n      switchMap((action) => this.authService.loginWithEmailAndPassword(action.userCredentials).pipe(handleUserAuth))\n    )\n  );\n\n  createRestaurant$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.createRestaurant),\n      switchMap((action) => this.authService.createRestaurant(action.restaurantCredentials).pipe(handleRestaurantAuth))\n    )\n  );\n\n  joinUserToRestaurant$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.joinUserToRestaurant),\n      switchMap((action) => this.authService.joinRestaurant(action.restaurantCredentials).pipe(handleRestaurantAuth))\n    )\n  );\n\n  authorizationSuccess$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthStoreActions.authSuccess),\n      tap((action) => this.router.navigate([action.navigateTo])),\n      map(() => AuthStoreActions.setIsLoading({ isLoading: false }))\n    )\n  );\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestaurantCredentials.html":{"url":"interfaces/RestaurantCredentials.html","title":"interface - RestaurantCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RestaurantCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/restaurant-credentials.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RestaurantCredentials {\n  userId: string;\n  name: string;\n  password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestaurantService.html":{"url":"injectables/RestaurantService.html","title":"injectable - RestaurantService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RestaurantService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/restaurant.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGroups\n                            \n                            \n                                getOrdersByStatus\n                            \n                            \n                                getProducts\n                            \n                            \n                                getSettings\n                            \n                            \n                                getTables\n                            \n                            \n                                saveCurrency\n                            \n                            \n                                saveLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/restaurant.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGroups\n                        \n                        \n                    \n                \n            \n            \n                \ngetGroups(restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/restaurant.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrdersByStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrdersByStatus(status: string, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/restaurant.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProducts\n                        \n                        \n                    \n                \n            \n            \n                \ngetProducts(restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/restaurant.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \ngetSettings(restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/restaurant.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTables\n                        \n                        \n                    \n                \n            \n            \n                \ngetTables(restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/restaurant.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveCurrency\n                        \n                        \n                    \n                \n            \n            \n                \nsaveCurrency(currency: string, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/restaurant.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveLanguage\n                        \n                        \n                    \n                \n            \n            \n                \nsaveLanguage(language: string, restaurantId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/restaurant.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    restaurantId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { Group, Order, Product, Table } from \"@rota/core/models\";\nimport { Observable, of } from \"rxjs\";\n\n@Injectable()\nexport class RestaurantService {\n  constructor(private afs: AngularFirestore) {}\n\n  getTables(restaurantId: string): Observable {\n    return this.afs.collection(`restaurants/${restaurantId}/tables`).valueChanges();\n  }\n\n  getGroups(restaurantId: string): Observable {\n    return this.afs.collection(`restaurants/${restaurantId}/groups`).valueChanges();\n  }\n\n  getProducts(restaurantId: string): Observable {\n    return this.afs.collection(`restaurants/${restaurantId}/products`).valueChanges();\n  }\n\n  getOrdersByStatus(status: string, restaurantId: string): Observable {\n    return this.afs\n      .collection(`restaurants/${restaurantId}/orders`, (ref) => ref.where(\"status\", \"==\", status))\n      .valueChanges();\n  }\n\n  saveLanguage(language: string, restaurantId: string): Observable {\n    return of(this.afs.doc(`settingsByRestaurants/${restaurantId}`).update({ language }));\n  }\n\n  saveCurrency(currency: string, restaurantId: string): Observable {\n    return of(this.afs.doc(`settingsByRestaurants/${restaurantId}`).update({ currency }));\n  }\n\n  getSettings(restaurantId: string): Observable {\n    return this.afs.doc(`settingsByRestaurants/${restaurantId}`).valueChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestaurantState.html":{"url":"interfaces/RestaurantState.html","title":"interface - RestaurantState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RestaurantState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/app-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeOrders\n                                \n                                \n                                        areResourcesLoaded\n                                \n                                \n                                        currency\n                                \n                                \n                                        failedResources\n                                \n                                \n                                        groups\n                                \n                                \n                                        id\n                                \n                                \n                                        isLoading\n                                \n                                \n                                        language\n                                \n                                \n                                        name\n                                \n                                \n                                        products\n                                \n                                \n                                        tables\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeOrders\n                                    \n                                \n                                \n                                    \n                                        activeOrders:         Order[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Order[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        areResourcesLoaded\n                                    \n                                \n                                \n                                    \n                                        areResourcesLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        failedResources\n                                    \n                                \n                                \n                                    \n                                        failedResources:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:         Group[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Group[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                    \n                                \n                                \n                                    \n                                        isLoading:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                    \n                                \n                                \n                                    \n                                        products:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tables\n                                    \n                                \n                                \n                                    \n                                        tables:         Table[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Table[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Cart } from \"./cart\";\nimport { Group } from \"./group\";\nimport { Order } from \"./order\";\nimport { Product } from \"./product\";\nimport { Table } from \"./table\";\n\nexport interface AppState {\n  restaurant: RestaurantState;\n  auth: AuthState;\n  ordering: OrderingState;\n  resourceManagement: ResourceManagementState;\n}\n\nexport interface RestaurantState {\n  id: string;\n  name: string;\n  language: string;\n  currency: string;\n  tables: Table[];\n  groups: Group[];\n  products: Product[];\n  activeOrders: Order[];\n  isLoading: { tables: boolean; groups: boolean; products: boolean };\n  failedResources: { tables?: boolean; groups?: boolean; products?: boolean };\n  areResourcesLoaded: boolean;\n}\n\nexport interface AuthState {\n  error?: any;\n  isLoading?: boolean;\n}\n\nexport interface OrderingState {\n  selectedTable: Table;\n  cart: Cart;\n}\n\nexport interface ResourceManagementState {\n  isLoading?: boolean;\n}\n\nexport interface ChefState {\n  isLoading?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RestaurantStoreModule.html":{"url":"modules/RestaurantStoreModule.html","title":"module - RestaurantStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    RestaurantStoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/root-store/restaurant-store/restaurant-store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { RestaurnatStoreAuthEffects, RestaurnatStoreResourceEffects, RestaurnatStoreSettingEffects } from \"./effects\";\nimport { restaurantReducer } from \"./restaurant.reducer\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(\"restaurant\", restaurantReducer),\n    EffectsModule.forFeature([RestaurnatStoreAuthEffects, RestaurnatStoreResourceEffects, RestaurnatStoreSettingEffects])\n  ]\n})\nexport class RestaurantStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestaurnatStoreAuthEffects.html":{"url":"injectables/RestaurnatStoreAuthEffects.html","title":"injectable - RestaurnatStoreAuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RestaurnatStoreAuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/root-store/restaurant-store/effects/restaurant-auth.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadRestaurantFromLocalStorage$\n                            \n                            \n                                removeRestaurantFromLocalStorage$\n                            \n                            \n                                restaurantRemoveSuccess$\n                            \n                            \n                                saveRestaurantToLocalStorage$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, localStorage: Storage, afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/root-store/restaurant-store/effects/restaurant-auth.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadRestaurantFromLocalStorage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreAuthActions.loadRestaurantFromLocalStorage),\n      switchMap(() => {\n        return from(this.localStorage.get(\"restaurant\")).pipe(\n          map((restaurant: { id: string; name: string }) => RestaurantStoreResourceActions.setRestaurant(restaurant))\n        );\n      })\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-auth.effects.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeRestaurantFromLocalStorage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreAuthActions.removeRestaurant),\n      switchMap(() => from(this.localStorage.remove(\"restaurant\")).pipe(map(() => RestaurantStoreAuthActions.removeSuccess())))\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-auth.effects.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restaurantRemoveSuccess$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreAuthActions.removeSuccess),\n      tap(() => this.router.navigateByUrl(\"/\")),\n      map(() => RestaurantStoreResourceActions.setLoading({ isLoading: {} }))\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-auth.effects.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveRestaurantToLocalStorage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreAuthActions.saveRestaurantToLocalStorage),\n      switchMap(action => {\n        return from(this.localStorage.set(\"restaurant\", { id: action.id, name: action.name })).pipe(\n          map(() => RestaurantStoreResourceActions.setRestaurant({ id: action.id, name: action.name }))\n        );\n      })\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-auth.effects.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreAuthActions.signOut),\n      switchMap(() => this.afAuth.auth.signOut()),\n      map(() => RestaurantStoreAuthActions.removeRestaurant())\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-auth.effects.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { Router } from \"@angular/router\";\nimport { Storage } from \"@ionic/storage\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { from, Observable } from \"rxjs\";\nimport { map, switchMap, tap } from \"rxjs/operators\";\nimport { RestaurantStoreAuthActions, RestaurantStoreResourceActions } from \"../actions\";\n\n@Injectable()\nexport class RestaurnatStoreAuthEffects {\n  constructor(private actions$: Actions, private localStorage: Storage, private afAuth: AngularFireAuth, private router: Router) {}\n\n  saveRestaurantToLocalStorage$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreAuthActions.saveRestaurantToLocalStorage),\n      switchMap(action => {\n        return from(this.localStorage.set(\"restaurant\", { id: action.id, name: action.name })).pipe(\n          map(() => RestaurantStoreResourceActions.setRestaurant({ id: action.id, name: action.name }))\n        );\n      })\n    )\n  );\n\n  loadRestaurantFromLocalStorage$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreAuthActions.loadRestaurantFromLocalStorage),\n      switchMap(() => {\n        return from(this.localStorage.get(\"restaurant\")).pipe(\n          map((restaurant: { id: string; name: string }) => RestaurantStoreResourceActions.setRestaurant(restaurant))\n        );\n      })\n    )\n  );\n\n  signOut$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreAuthActions.signOut),\n      switchMap(() => this.afAuth.auth.signOut()),\n      map(() => RestaurantStoreAuthActions.removeRestaurant())\n    )\n  );\n\n  removeRestaurantFromLocalStorage$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreAuthActions.removeRestaurant),\n      switchMap(() => from(this.localStorage.remove(\"restaurant\")).pipe(map(() => RestaurantStoreAuthActions.removeSuccess())))\n    )\n  );\n\n  restaurantRemoveSuccess$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreAuthActions.removeSuccess),\n      tap(() => this.router.navigateByUrl(\"/\")),\n      map(() => RestaurantStoreResourceActions.setLoading({ isLoading: {} }))\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestaurnatStoreResourceEffects.html":{"url":"injectables/RestaurnatStoreResourceEffects.html","title":"injectable - RestaurnatStoreResourceEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RestaurnatStoreResourceEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/root-store/restaurant-store/effects/restaurant-resource.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadActiveOrders$\n                            \n                            \n                                loadGroups$\n                            \n                            \n                                loadProducts$\n                            \n                            \n                                loadResourcesSuccess$\n                            \n                            \n                                loadTables$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, restaurantService: RestaurantService, router: Router, store$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/root-store/restaurant-store/effects/restaurant-resource.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        restaurantService\n                                                  \n                                                        \n                                                                        RestaurantService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadActiveOrders$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreResourceActions.loadResources),\n      switchMap((action) =>\n        this.restaurantService.getOrdersByStatus(\"active\", action.restaurantId).pipe(\n          map((activeOrders) => RestaurantStoreResourceActions.setActiveOrders({ activeOrders })),\n          catchError(() => of(RestaurantStoreResourceActions.failedToLoadResource({ failedResources: { activeOrders: true } })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-resource.effects.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadGroups$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreResourceActions.loadResources),\n      switchMap((action) =>\n        this.restaurantService.getGroups(action.restaurantId).pipe(\n          map((groups) => RestaurantStoreResourceActions.setGroups({ groups })),\n          catchError(() => of(RestaurantStoreResourceActions.failedToLoadResource({ failedResources: { groups: true } })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-resource.effects.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadProducts$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreResourceActions.loadResources),\n      switchMap((action) =>\n        this.restaurantService.getProducts(action.restaurantId).pipe(\n          map((products) => RestaurantStoreResourceActions.setProducts({ products })),\n          catchError(() => of(RestaurantStoreResourceActions.failedToLoadResource({ failedResources: { products: true } })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-resource.effects.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadResourcesSuccess$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreResourceActions.loadResourcesSuccess),\n      tap((action) => this.router.navigateByUrl(action.navigateTo)),\n      map(() => RestaurantStoreResourceActions.setLoading({ isLoading: null }))\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-resource.effects.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTables$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreResourceActions.loadResources),\n      switchMap((action) =>\n        this.restaurantService.getTables(action.restaurantId).pipe(\n          map((tables) => RestaurantStoreResourceActions.setTables({ tables })),\n          catchError(() => of(RestaurantStoreResourceActions.failedToLoadResource({ failedResources: { tables: true } })))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-resource.effects.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models\";\nimport { RestaurantService } from \"@rota/core/services/restaurant.service\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, map, switchMap, tap } from \"rxjs/operators\";\nimport { RestaurantStoreResourceActions } from \"../actions\";\n\n@Injectable()\nexport class RestaurnatStoreResourceEffects {\n  constructor(\n    private actions$: Actions,\n    private restaurantService: RestaurantService,\n    private router: Router,\n    private store$: Store\n  ) {}\n\n  loadTables$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreResourceActions.loadResources),\n      switchMap((action) =>\n        this.restaurantService.getTables(action.restaurantId).pipe(\n          map((tables) => RestaurantStoreResourceActions.setTables({ tables })),\n          catchError(() => of(RestaurantStoreResourceActions.failedToLoadResource({ failedResources: { tables: true } })))\n        )\n      )\n    )\n  );\n\n  loadGroups$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreResourceActions.loadResources),\n      switchMap((action) =>\n        this.restaurantService.getGroups(action.restaurantId).pipe(\n          map((groups) => RestaurantStoreResourceActions.setGroups({ groups })),\n          catchError(() => of(RestaurantStoreResourceActions.failedToLoadResource({ failedResources: { groups: true } })))\n        )\n      )\n    )\n  );\n\n  loadProducts$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreResourceActions.loadResources),\n      switchMap((action) =>\n        this.restaurantService.getProducts(action.restaurantId).pipe(\n          map((products) => RestaurantStoreResourceActions.setProducts({ products })),\n          catchError(() => of(RestaurantStoreResourceActions.failedToLoadResource({ failedResources: { products: true } })))\n        )\n      )\n    )\n  );\n\n  loadActiveOrders$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreResourceActions.loadResources),\n      switchMap((action) =>\n        this.restaurantService.getOrdersByStatus(\"active\", action.restaurantId).pipe(\n          map((activeOrders) => RestaurantStoreResourceActions.setActiveOrders({ activeOrders })),\n          catchError(() => of(RestaurantStoreResourceActions.failedToLoadResource({ failedResources: { activeOrders: true } })))\n        )\n      )\n    )\n  );\n\n  loadResourcesSuccess$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreResourceActions.loadResourcesSuccess),\n      tap((action) => this.router.navigateByUrl(action.navigateTo)),\n      map(() => RestaurantStoreResourceActions.setLoading({ isLoading: null }))\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestaurnatStoreSettingEffects.html":{"url":"injectables/RestaurnatStoreSettingEffects.html","title":"injectable - RestaurnatStoreSettingEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RestaurnatStoreSettingEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/root-store/restaurant-store/effects/restaurant-setting.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadSettings\n                            \n                            \n                                saveRestaurantCurrency\n                            \n                            \n                                saveRestaurantLanguage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, restaurantService: RestaurantService, store$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/root-store/restaurant-store/effects/restaurant-setting.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        restaurantService\n                                                  \n                                                        \n                                                                        RestaurantService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreSettingActions.loadRestaurantSettings),\n      switchMap((action) => {\n        return this.restaurantService.getSettings(action.restaurantId).pipe(\n          switchMap((settings: { currency: string; language: string }) =>\n            merge([\n              RestaurantStoreSettingActions.setRestaurantCurrency({ currency: settings.currency }),\n              RestaurantStoreSettingActions.setRestaurantLanguage({ language: settings.language }),\n            ])\n          ),\n          catchError(() => EMPTY)\n        );\n      })\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-setting.effects.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveRestaurantCurrency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreSettingActions.saveRestaurantCurrency),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurnatId]) =>\n        this.restaurantService.saveCurrency(action.currency, restaurnatId).pipe(\n          map(() => RestaurantStoreSettingActions.saveSuccess()),\n          catchError(() => EMPTY)\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-setting.effects.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveRestaurantLanguage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreSettingActions.saveRestaurantLanguage),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurnatId]) =>\n        this.restaurantService.saveLanguage(action.language, restaurnatId).pipe(\n          map(() => RestaurantStoreSettingActions.saveSuccess()),\n          catchError(() => EMPTY)\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/root-store/restaurant-store/effects/restaurant-setting.effects.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action, select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { RestaurantService } from \"@rota/core/services/restaurant.service\";\nimport { EMPTY, merge, Observable } from \"rxjs\";\nimport { catchError, map, switchMap, withLatestFrom } from \"rxjs/operators\";\nimport { RestaurantStoreSelectors } from \"..\";\nimport { RestaurantStoreSettingActions } from \"../actions\";\n\n@Injectable()\nexport class RestaurnatStoreSettingEffects {\n  constructor(private actions$: Actions, private restaurantService: RestaurantService, private store$: Store) {}\n\n  saveRestaurantLanguage$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreSettingActions.saveRestaurantLanguage),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurnatId]) =>\n        this.restaurantService.saveLanguage(action.language, restaurnatId).pipe(\n          map(() => RestaurantStoreSettingActions.saveSuccess()),\n          catchError(() => EMPTY)\n        )\n      )\n    )\n  );\n\n  saveRestaurantCurrency: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreSettingActions.saveRestaurantCurrency),\n      withLatestFrom(this.store$.pipe(select(RestaurantStoreSelectors.selectId))),\n      switchMap(([action, restaurnatId]) =>\n        this.restaurantService.saveCurrency(action.currency, restaurnatId).pipe(\n          map(() => RestaurantStoreSettingActions.saveSuccess()),\n          catchError(() => EMPTY)\n        )\n      )\n    )\n  );\n\n  loadSettings: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RestaurantStoreSettingActions.loadRestaurantSettings),\n      switchMap((action) => {\n        return this.restaurantService.getSettings(action.restaurantId).pipe(\n          switchMap((settings: { currency: string; language: string }) =>\n            merge([\n              RestaurantStoreSettingActions.setRestaurantCurrency({ currency: settings.currency }),\n              RestaurantStoreSettingActions.setRestaurantLanguage({ language: settings.language }),\n            ])\n          ),\n          catchError(() => EMPTY)\n        );\n      })\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootStoreModule.html":{"url":"modules/RootStoreModule.html","title":"module - RootStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    RootStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RootStoreModule\n\n\n\ncluster_RootStoreModule_imports\n\n\n\n\nRestaurantStoreModule\n\nRestaurantStoreModule\n\n\n\nRootStoreModule\n\nRootStoreModule\n\nRootStoreModule -->\n\nRestaurantStoreModule->RootStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/root-store/root-store.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RestaurantStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { RestaurantStoreModule } from \"./restaurant-store/restaurant-store.module\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, StoreModule.forRoot({}), EffectsModule.forRoot([]), RestaurantStoreModule]\n})\nexport class RootStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/sidenav/sidenav.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                mode\n                            \n                            \n                                navigationData\n                            \n                            \n                                opened\n                            \n                            \n                                shouldHaveSidenav\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/sidenav/sidenav.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     \"side\" | \"over\" | \"push\"\n\n                    \n                \n                \n                    \n                        Default value : \"side\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/sidenav/sidenav.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigationData\n                    \n                \n                \n                    \n                        Type :         NavigationItem[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/sidenav/sidenav.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opened\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/sidenav/sidenav.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        shouldHaveSidenav\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/sidenav/sidenav.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/sidenav/sidenav.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/sidenav/sidenav.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sidenav', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/sidenav/sidenav.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from \"@angular/core\";\nimport { MatSidenav } from \"@angular/material/sidenav\";\n\nexport interface NavigationItem {\n  main: MainNavigation;\n  sub?: SubNavigation[];\n}\n\nexport interface MainNavigation {\n  name: string;\n  route: string | Array;\n}\n\nexport interface SubNavigation {\n  name: string;\n  route: string | Array;\n}\n\n@Component({\n  selector: \"rota-sidenav\",\n  templateUrl: \"./sidenav.component.html\",\n  styleUrls: [\"./sidenav.component.scss\"]\n})\nexport class SidenavComponent {\n  @ViewChild(\"sidenav\", { static: false }) private sidenav: MatSidenav;\n  @Input() navigationData: NavigationItem[];\n  @Input() title: string;\n  @Input() icon: string;\n  @Input() mode: \"side\" | \"over\" | \"push\" = \"side\";\n  @Input() opened: boolean;\n  @Input() shouldHaveSidenav: boolean;\n\n  toggle() {\n    this.sidenav.toggle();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ icon }}\n        {{ title | translate }}\n      \n\n      \n        \n          \n            {{ navItem.main.name | translate }}\n          \n\n          \n            {{ subNavigation.name | translate }}\n          \n        \n      \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.mat-sidenav-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: $color-bg-light;\n}\n\n.mat-sidenav {\n  padding: 1rem;\n  width: 300px;\n  background: $color-bg-light;\n  border-right: 1 px solid rgba(0, 0, 0, 0.87);\n}\n\n.inner-container {\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n}\n.title {\n  margin: 0;\n  margin-bottom: 1rem;\n  padding: 0;\n  font-size: 1.5rem;\n  color: $color-secondary-orange;\n  font-weight: 800;\n  .icon {\n    font-size: 24px;\n    font-weight: 700;\n    vertical-align: top;\n  }\n}\n\n.navigations {\n  margin-top: 2rem;\n  .nav-item {\n    margin-bottom: 1rem;\n    .main-nav {\n      font-size: 1.2rem;\n      font-weight: 600;\n      color: $color-primary-olive;\n    }\n\n    .sub-nav {\n      color: $color-primary-olive;\n      margin: 0.9rem 2rem;\n      font-weight: 500;\n    }\n  }\n}\n\na {\n  color: inherit;\n  cursor: pointer;\n  text-decoration: none;\n\n  &.active {\n    color: $color-500-olive;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ icon }}        {{ title | translate }}                                          {{ navItem.main.name | translate }}                                {{ subNavigation.name | translate }}                                      '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SidenavData.html":{"url":"interfaces/SidenavData.html","title":"interface - SidenavData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SidenavData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/sidenav/sidenav-datas/sidenav-data.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        navigationData\n                                \n                                \n                                        shouldHave\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigationData\n                                    \n                                \n                                \n                                    \n                                        navigationData:         NavigationItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NavigationItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shouldHave\n                                    \n                                \n                                \n                                    \n                                        shouldHave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NavigationItem } from \"@rota/core/sidenav/sidenav.component\";\n\nexport interface SidenavData {\n  navigationData: NavigationItem[];\n  shouldHave: boolean;\n  title: string;\n  icon: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/snackbar/snackbar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                snackBarRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, snackBarRef: MatSnackBarRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/snackbar/snackbar.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBarRef\n                                                  \n                                                        \n                                                                        MatSnackBarRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/snackbar/snackbar.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBarRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatSnackBarRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/snackbar/snackbar.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: \"rota-snackbar\",\n  templateUrl: \"./snackbar.component.html\",\n  styleUrls: [\"./snackbar.component.scss\"]\n})\nexport class SnackbarComponent {\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: { text: string; subText?: string; actionName: string },\n    public snackBarRef: MatSnackBarRef\n  ) {}\n}\n\n    \n\n    \n        \n  {{ data.text | translate }} {{ data.subText | translate }}\n  {{ data.actionName | translate }}\n\n\n    \n\n    \n                \n                    ./snackbar.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.content {\n  display: flex;\n  justify-content: space-between;\n}\n\n.action {\n  cursor: pointer;\n  font-weight: 600;\n  opacity: 0.5;\n\n  &:hover {\n    opacity: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.text | translate }} {{ data.subText | translate }}  {{ data.actionName | translate }}'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnackbarConfig.html":{"url":"interfaces/SnackbarConfig.html","title":"interface - SnackbarConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SnackbarConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/snackbar/services/snackbar.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        duration\n                                \n                                \n                                        panelClass\n                                \n                                \n                                            Optional\n                                        position\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panelClass\n                                    \n                                \n                                \n                                    \n                                        panelClass:     \"snackbar-danger\" | \"snackbar-success\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"snackbar-danger\" | \"snackbar-success\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:         SnackbarPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnackbarPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { SnackbarComponent } from \"../snackbar.component\";\n\nexport interface SnackbarPosition {\n  horizontal: \"start\" | \"center\" | \"end\" | \"left\" | \"right\";\n  vertical: \"top\" | \"bottom\";\n}\n\nexport interface SnackbarConfig {\n  data?: { text: string; subText?: string; actionName?: string };\n  duration?: number;\n  position?: SnackbarPosition;\n  panelClass: \"snackbar-danger\" | \"snackbar-success\";\n}\n\n@Injectable()\nexport class SnackbarService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  openSnackBar(config?: SnackbarConfig): void {\n    this.snackBar.openFromComponent(SnackbarComponent, {\n      data: config.data,\n      duration: config.duration,\n      horizontalPosition: config.position.horizontal,\n      verticalPosition: config.position.vertical,\n      panelClass: config.panelClass,\n    });\n  }\n\n  openDefaultSuccessSnackbar(subText?: string): void {\n    const config: SnackbarConfig = {\n      position: { horizontal: \"right\", vertical: \"top\" },\n      duration: 2500,\n      data: {\n        text: \"SNACKBAR.SUCCESS_TEXT\",\n        subText,\n        actionName: \"SNACKBAR.SUCCESS_ACTION_NAME\",\n      },\n      panelClass: \"snackbar-success\",\n    };\n\n    this.openSnackBar(config);\n  }\n\n  openDefaultErrorSnackbar(subText?: string): void {\n    const config: SnackbarConfig = {\n      position: { horizontal: \"right\", vertical: \"top\" },\n      duration: 3000,\n      data: {\n        text: \"SNACKBAR.ERROR_TEXT\",\n        subText,\n        actionName: \"SNACKBAR.ERROR_ACTION_NAME\",\n      },\n      panelClass: \"snackbar-danger\",\n    };\n\n    this.openSnackBar(config);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SnackbarModule.html":{"url":"modules/SnackbarModule.html","title":"module - SnackbarModule","body":"\n                   \n\n\n\n\n    Modules\n    SnackbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SnackbarModule\n\n\n\ncluster_SnackbarModule_declarations\n\n\n\ncluster_SnackbarModule_exports\n\n\n\ncluster_SnackbarModule_providers\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\n\n\nSnackbarModule\n\nSnackbarModule\n\nSnackbarModule -->\n\nSnackbarComponent->SnackbarModule\n\n\n\n\n\nSnackbarComponent \n\nSnackbarComponent \n\nSnackbarComponent  -->\n\nSnackbarModule->SnackbarComponent \n\n\n\n\n\nSnackbarService\n\nSnackbarService\n\nSnackbarModule -->\n\nSnackbarService->SnackbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/snackbar/snackbar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SnackbarService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SnackbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { SnackbarService } from \"./services\";\nimport { SnackbarComponent } from \"./snackbar.component\";\n\n@NgModule({\n  declarations: [SnackbarComponent],\n  imports: [CommonModule, MatSnackBarModule, TranslateModule.forChild()],\n  providers: [SnackbarService],\n  exports: [SnackbarComponent],\n  entryComponents: [SnackbarComponent]\n})\nexport class SnackbarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnackbarPosition.html":{"url":"interfaces/SnackbarPosition.html","title":"interface - SnackbarPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SnackbarPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/snackbar/services/snackbar.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        horizontal\n                                \n                                \n                                        vertical\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        horizontal\n                                    \n                                \n                                \n                                    \n                                        horizontal:     \"start\" | \"center\" | \"end\" | \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"start\" | \"center\" | \"end\" | \"left\" | \"right\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vertical\n                                    \n                                \n                                \n                                    \n                                        vertical:     \"top\" | \"bottom\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"top\" | \"bottom\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { SnackbarComponent } from \"../snackbar.component\";\n\nexport interface SnackbarPosition {\n  horizontal: \"start\" | \"center\" | \"end\" | \"left\" | \"right\";\n  vertical: \"top\" | \"bottom\";\n}\n\nexport interface SnackbarConfig {\n  data?: { text: string; subText?: string; actionName?: string };\n  duration?: number;\n  position?: SnackbarPosition;\n  panelClass: \"snackbar-danger\" | \"snackbar-success\";\n}\n\n@Injectable()\nexport class SnackbarService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  openSnackBar(config?: SnackbarConfig): void {\n    this.snackBar.openFromComponent(SnackbarComponent, {\n      data: config.data,\n      duration: config.duration,\n      horizontalPosition: config.position.horizontal,\n      verticalPosition: config.position.vertical,\n      panelClass: config.panelClass,\n    });\n  }\n\n  openDefaultSuccessSnackbar(subText?: string): void {\n    const config: SnackbarConfig = {\n      position: { horizontal: \"right\", vertical: \"top\" },\n      duration: 2500,\n      data: {\n        text: \"SNACKBAR.SUCCESS_TEXT\",\n        subText,\n        actionName: \"SNACKBAR.SUCCESS_ACTION_NAME\",\n      },\n      panelClass: \"snackbar-success\",\n    };\n\n    this.openSnackBar(config);\n  }\n\n  openDefaultErrorSnackbar(subText?: string): void {\n    const config: SnackbarConfig = {\n      position: { horizontal: \"right\", vertical: \"top\" },\n      duration: 3000,\n      data: {\n        text: \"SNACKBAR.ERROR_TEXT\",\n        subText,\n        actionName: \"SNACKBAR.ERROR_ACTION_NAME\",\n      },\n      panelClass: \"snackbar-danger\",\n    };\n\n    this.openSnackBar(config);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/snackbar/services/snackbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openDefaultErrorSnackbar\n                            \n                            \n                                openDefaultSuccessSnackbar\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/snackbar/services/snackbar.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDefaultErrorSnackbar\n                        \n                        \n                    \n                \n            \n            \n                \nopenDefaultErrorSnackbar(subText?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/snackbar/services/snackbar.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subText\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDefaultSuccessSnackbar\n                        \n                        \n                    \n                \n            \n            \n                \nopenDefaultSuccessSnackbar(subText?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/snackbar/services/snackbar.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subText\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nopenSnackBar(config?: SnackbarConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/snackbar/services/snackbar.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                SnackbarConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { SnackbarComponent } from \"../snackbar.component\";\n\nexport interface SnackbarPosition {\n  horizontal: \"start\" | \"center\" | \"end\" | \"left\" | \"right\";\n  vertical: \"top\" | \"bottom\";\n}\n\nexport interface SnackbarConfig {\n  data?: { text: string; subText?: string; actionName?: string };\n  duration?: number;\n  position?: SnackbarPosition;\n  panelClass: \"snackbar-danger\" | \"snackbar-success\";\n}\n\n@Injectable()\nexport class SnackbarService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  openSnackBar(config?: SnackbarConfig): void {\n    this.snackBar.openFromComponent(SnackbarComponent, {\n      data: config.data,\n      duration: config.duration,\n      horizontalPosition: config.position.horizontal,\n      verticalPosition: config.position.vertical,\n      panelClass: config.panelClass,\n    });\n  }\n\n  openDefaultSuccessSnackbar(subText?: string): void {\n    const config: SnackbarConfig = {\n      position: { horizontal: \"right\", vertical: \"top\" },\n      duration: 2500,\n      data: {\n        text: \"SNACKBAR.SUCCESS_TEXT\",\n        subText,\n        actionName: \"SNACKBAR.SUCCESS_ACTION_NAME\",\n      },\n      panelClass: \"snackbar-success\",\n    };\n\n    this.openSnackBar(config);\n  }\n\n  openDefaultErrorSnackbar(subText?: string): void {\n    const config: SnackbarConfig = {\n      position: { horizontal: \"right\", vertical: \"top\" },\n      duration: 3000,\n      data: {\n        text: \"SNACKBAR.ERROR_TEXT\",\n        subText,\n        actionName: \"SNACKBAR.ERROR_ACTION_NAME\",\n      },\n      panelClass: \"snackbar-danger\",\n    };\n\n    this.openSnackBar(config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusModifierComponent.html":{"url":"components/StatusModifierComponent.html","title":"component - StatusModifierComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusModifierComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chef/status-modifier-dialog/status-modifier-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                status-modifier-dialog\n            \n\n            \n                styleUrls\n                ./status-modifier-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status-modifier-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selectedOptionStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/chef/status-modifier-dialog/status-modifier-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chef/status-modifier-dialog/status-modifier-dialog.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/chef/status-modifier-dialog/status-modifier-dialog.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chef/status-modifier-dialog/status-modifier-dialog.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedOptionStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chef/status-modifier-dialog/status-modifier-dialog.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"status-modifier-dialog\",\n  templateUrl: \"./status-modifier-dialog.component.html\",\n  styleUrls: [\"./status-modifier-dialog.component.scss\"]\n})\nexport class StatusModifierComponent {\n  selectedOptionStatus: string;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { status: string }, public dialogRef: MatDialogRef) {\n    this.selectedOptionStatus = data.status;\n  }\n\n  save(): void {\n    this.dialogRef.close(this.selectedOptionStatus);\n  }\n}\n\n    \n\n    \n        \n  {{ \"CHEF.STATUS_MODIFIER_DIALOG.TITLE\" | translate }}\n  \n    \n      {{ \"CHEF.STATUS_MODIFIER_DIALOG.ORDER_ITEM_STATUS_REJECTED\" | translate }}\n    \n    \n      {{ \"CHEF.STATUS_MODIFIER_DIALOG.ORDER_ITEM_STATUS_PREPARING\" | translate }}\n    \n    \n      {{ \"CHEF.STATUS_MODIFIER_DIALOG.ORDER_ITEM_STATUS_READY\" | translate }}\n    \n  \n  \n    {{ \"CHEF.STATUS_MODIFIER_DIALOG.ACTION_CLOSE\" | translate }}\n    {{ \"CHEF.STATUS_MODIFIER_DIALOG.ACTION_SAVE\" | translate }}\n  \n\n\n    \n\n    \n                \n                    ./status-modifier-dialog.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.container {\n  color: $color-primary-olive;\n}\n\n.status {\n  display: flex;\n  flex-direction: column;\n\n  .option {\n    padding: 0.5rem;\n  }\n}\n\n.actions {\n  display: flex;\n  cursor: pointer;\n  user-select: none;\n  justify-content: flex-end;\n\n  button {\n    background: transparent;\n    padding: 1rem;\n    font-weight: 600;\n    color: $color-primary-olive;\n    font-size: 1rem;\n    outline: none;\n  }\n}\n\n.option {\n  padding: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \"CHEF.STATUS_MODIFIER_DIALOG.TITLE\" | translate }}            {{ \"CHEF.STATUS_MODIFIER_DIALOG.ORDER_ITEM_STATUS_REJECTED\" | translate }}              {{ \"CHEF.STATUS_MODIFIER_DIALOG.ORDER_ITEM_STATUS_PREPARING\" | translate }}              {{ \"CHEF.STATUS_MODIFIER_DIALOG.ORDER_ITEM_STATUS_READY\" | translate }}            {{ \"CHEF.STATUS_MODIFIER_DIALOG.ACTION_CLOSE\" | translate }}    {{ \"CHEF.STATUS_MODIFIER_DIALOG.ACTION_SAVE\" | translate }}  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusModifierComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubNavigation.html":{"url":"interfaces/SubNavigation.html","title":"interface - SubNavigation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SubNavigation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/sidenav/sidenav.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:     string | Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, ViewChild } from \"@angular/core\";\nimport { MatSidenav } from \"@angular/material/sidenav\";\n\nexport interface NavigationItem {\n  main: MainNavigation;\n  sub?: SubNavigation[];\n}\n\nexport interface MainNavigation {\n  name: string;\n  route: string | Array;\n}\n\nexport interface SubNavigation {\n  name: string;\n  route: string | Array;\n}\n\n@Component({\n  selector: \"rota-sidenav\",\n  templateUrl: \"./sidenav.component.html\",\n  styleUrls: [\"./sidenav.component.scss\"]\n})\nexport class SidenavComponent {\n  @ViewChild(\"sidenav\", { static: false }) private sidenav: MatSidenav;\n  @Input() navigationData: NavigationItem[];\n  @Input() title: string;\n  @Input() icon: string;\n  @Input() mode: \"side\" | \"over\" | \"push\" = \"side\";\n  @Input() opened: boolean;\n  @Input() shouldHaveSidenav: boolean;\n\n  toggle() {\n    this.sidenav.toggle();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subgroup.html":{"url":"interfaces/Subgroup.html","title":"interface - Subgroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Subgroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/group.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Group {\n  id?: string;\n  name: string;\n  subgroups: Subgroup[];\n}\n\nexport interface Subgroup {\n  id?: string;\n  name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Table.html":{"url":"interfaces/Table.html","title":"interface - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/table.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        numberOfSeats\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfSeats\n                                    \n                                \n                                \n                                    \n                                        numberOfSeats:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Table {\n  id: string;\n  name: string;\n  numberOfSeats: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableEditorComponent.html":{"url":"components/TableEditorComponent.html","title":"component - TableEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/resource-management/table-editor/table-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-table-editor\n            \n\n            \n                styleUrls\n                ./table-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                isLoading$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Optional\n                                tableToEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formInitializer\n                            \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveTable\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    table\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/resource-management/table-editor/table-editor.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            formInitializer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formInitializer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/table-editor/table-editor.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initForm(table?: Table)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/table-editor/table-editor.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/table-editor/table-editor.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/table-editor/table-editor.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTable\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resource-management/table-editor/table-editor.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/table-editor/table-editor.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/table-editor/table-editor.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/table-editor/table-editor.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            tableToEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resource-management/table-editor/table-editor.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        table\n                    \n                \n\n                \n                    \n                        gettable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/resource-management/table-editor/table-editor.component.ts:66\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Table } from \"@rota/core/models\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { Observable, Subject } from \"rxjs\";\nimport { map, switchMap, takeUntil } from \"rxjs/operators\";\nimport { ResourceManagementStoreActions, ResourceManagementStoreSelectores } from \"../store\";\n\n@Component({\n  selector: \"rota-table-editor\",\n  templateUrl: \"./table-editor.component.html\",\n  styleUrls: [\"./table-editor.component.scss\"]\n})\nexport class TableEditorComponent implements OnInit, OnDestroy {\n  private ngUnsubscribe$ = new Subject();\n  tableToEdit?: Table;\n  form: FormGroup;\n  isLoading$: Observable;\n\n  constructor(private store: Store, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.formInitializer();\n    this.isLoading$ = this.store.pipe(select(ResourceManagementStoreSelectores.selectIsLoading));\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n  }\n\n  saveTable(): void {\n    if (this.tableToEdit) {\n      this.store.dispatch(ResourceManagementStoreActions.editTable({ table: { ...this.table, id: this.tableToEdit.id } }));\n    } else {\n      this.store.dispatch(ResourceManagementStoreActions.addTable({ ...this.table }));\n    }\n  }\n  private formInitializer(): void {\n    this.route.paramMap\n      .pipe(\n        map(params => params.get(\"id\")),\n        switchMap(id => this.store.pipe(select(RestaurantStoreSelectors.selectTableById, { id }))),\n        takeUntil(this.ngUnsubscribe$)\n      )\n      .subscribe(table => {\n        if (!table) {\n          this.form = this.initForm();\n          return;\n        }\n\n        this.form = this.initForm(table);\n        this.tableToEdit = table;\n      });\n  }\n\n  private initForm(table?: Table): FormGroup {\n    return new FormGroup({\n      tableName: new FormControl(table ? table.name : \"\", Validators.required),\n      numberOfSeats: new FormControl(table ? table.numberOfSeats : \"\", [Validators.required, Validators.pattern(\"[1-9]+[0-9]?\")])\n    });\n  }\n\n  private get table(): { name: string; numberOfSeats: number } {\n    return {\n      name: this.form.controls.tableName.value,\n      numberOfSeats: +this.form.controls.numberOfSeats.value\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{\n        \"RESOURCE_MANAGEMENT.TABLE_EDITOR.ERROR_REQUIRED\" | translate\n      }}\n    \n\n    \n      \n      {{ \"RESOURCE_MANAGEMENT.TABLE_EDITOR.NUMBER_OF_SEATS_HINT\" | translate }}\n      {{\n        \"RESOURCE_MANAGEMENT.TABLE_EDITOR.ERROR_REQUIRED\" | translate\n      }}\n      {{\n        \"RESOURCE_MANAGEMENT.TABLE_EDITOR.NUMBER_OF_SEATS_ERROR_PATTERN\" | translate\n      }}\n    \n\n    \n      {{\n        \"RESOURCE_MANAGEMENT.TABLE_EDITOR.BUTTON_TEXT\" | translate\n      }}\n    \n  \n\n\n    \n\n    \n                \n                    ./table-editor.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 800px;\n  padding: 1rem;\n}\n\nform {\n  mat-form-field {\n    width: 100%;\n    margin-bottom: 1rem;\n  }\n}\n\n.button {\n  margin: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{        \"RESOURCE_MANAGEMENT.TABLE_EDITOR.ERROR_REQUIRED\" | translate      }}                    {{ \"RESOURCE_MANAGEMENT.TABLE_EDITOR.NUMBER_OF_SEATS_HINT\" | translate }}      {{        \"RESOURCE_MANAGEMENT.TABLE_EDITOR.ERROR_REQUIRED\" | translate      }}      {{        \"RESOURCE_MANAGEMENT.TABLE_EDITOR.NUMBER_OF_SEATS_ERROR_PATTERN\" | translate      }}              {{        \"RESOURCE_MANAGEMENT.TABLE_EDITOR.BUTTON_TEXT\" | translate      }}      '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableSelectorComponent.html":{"url":"components/TableSelectorComponent.html","title":"component - TableSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ordering/table-selector/table-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                table-selector\n            \n\n            \n                styleUrls\n                ./table-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableTables\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                occupiedTables\n                            \n                            \n                                selectedTable$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initTables\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ordering/table-selector/table-selector.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/table-selector/table-selector.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/table-selector/table-selector.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/table-selector/table-selector.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(table: Table)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ordering/table-selector/table-selector.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableTables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/table-selector/table-selector.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/table-selector/table-selector.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            occupiedTables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/table-selector/table-selector.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTable$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ordering/table-selector/table-selector.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { Table } from \"@rota/core/models/table\";\nimport { sortByName } from \"@rota/core/util\";\nimport { RestaurantStoreSelectors } from \"@rota/root-store/restaurant-store\";\nimport { combineLatest, Observable, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { OrderingStoreActions, OrderingStoreSelectors } from \"../store\";\n\n@Component({\n  selector: \"table-selector\",\n  templateUrl: \"./table-selector.component.html\",\n  styleUrls: [\"./table-selector.component.scss\"]\n})\nexport class TableSelectorComponent implements OnInit, OnDestroy {\n  availableTables: Table[];\n  occupiedTables: Table[];\n  selectedTable$: Observable;\n  private ngUnsubscribe$ = new Subject();\n\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n    this.initTables();\n    this.selectedTable$ = this.store.pipe(select(OrderingStoreSelectors.selectSelectedTable));\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n  }\n\n  select(table: Table): void {\n    this.store.dispatch(OrderingStoreActions.setSelectedTable({ table }));\n  }\n\n  private initTables(): void {\n    combineLatest([\n      this.store.pipe(select(RestaurantStoreSelectors.selectTables)),\n      this.store.pipe(select(RestaurantStoreSelectors.selectOccupiedTableNames))\n    ])\n      .pipe(takeUntil(this.ngUnsubscribe$))\n      .subscribe(([tables, occupiedTableNames]) => {\n        this.availableTables = sortByName(tables.filter(table => !occupiedTableNames.includes(table.name)));\n        this.occupiedTables = sortByName(tables.filter(table => occupiedTableNames.includes(table.name)));\n      });\n  }\n}\n\n    \n\n    \n        \n  {{ \"ORDERING.SELECT_TABLE.CHOSEN_TABLE\" | translate }} {{ (selectedTable$ | async)?.name }}\n\n  \n    \n      {{ \"ORDERING.SELECT_TABLE.AVAILALBE_TABLES\" | translate }}:\n      \n        \n          {{ table.name }}\n          {{ \"ORDERING.SELECT_TABLE.TABLE_NUMBER_OF_SEATS\" | translate }} {{ table.numberOfSeats }}\n        \n      \n    \n\n    \n      {{ \"ORDERING.SELECT_TABLE.OCCUPIED_TABLES\" | translate }}:\n\n      \n        \n          {{ table.name }}\n          {{ \"ORDERING.SELECT_TABLE.TABLE_NUMBER_OF_SEATS\" | translate }} {{ table.numberOfSeats }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./table-selector.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n:host {\n  color: $color-primary-olive;\n  overflow: auto;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n}\n\n.tables-container {\n  display: flex;\n}\n\nh2 {\n  font-weight: 600;\n}\n\n.available-tables {\n  max-width: 600px;\n}\n\n.occupied-tables {\n  max-width: 600px;\n\n  .table {\n    cursor: not-allowed;\n    color: $color-bg-light;\n    background-color: $color-disabled;\n  }\n}\n\n.tables {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.table {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  min-width: 150px;\n  min-height: 75px;\n  margin: 1rem;\n  background-color: $color-500-olive;\n  color: $color-bg-light;\n  cursor: pointer;\n  user-select: none;\n\n  .seats {\n    font-size: 0.85rem;\n    padding: 0.5rem;\n  }\n\n  &.selected {\n    color: $color-500-olive;\n    background-color: $color-100-olive;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \"ORDERING.SELECT_TABLE.CHOSEN_TABLE\" | translate }} {{ (selectedTable$ | async)?.name }}            {{ \"ORDERING.SELECT_TABLE.AVAILALBE_TABLES\" | translate }}:                        {{ table.name }}          {{ \"ORDERING.SELECT_TABLE.TABLE_NUMBER_OF_SEATS\" | translate }} {{ table.numberOfSeats }}                            {{ \"ORDERING.SELECT_TABLE.OCCUPIED_TABLES\" | translate }}:                        {{ table.name }}          {{ \"ORDERING.SELECT_TABLE.TABLE_NUMBER_OF_SEATS\" | translate }} {{ table.numberOfSeats }}                    '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserAuthComponent.html":{"url":"components/UserAuthComponent.html","title":"component - UserAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/user-auth/user-auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rota-user-auth\n            \n\n            \n                styleUrls\n                ./user-auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authError$\n                            \n                            \n                                loading$\n                            \n                            \n                                userFormData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getUserCredentials\n                            \n                            \n                                    Private\n                                initUserFormData\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                            \n                                resetError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/user-auth/user-auth.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUserCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCredentials(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/user-auth/user-auth.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserCredentials\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initUserFormData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initUserFormData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/user-auth/user-auth.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         AuthFormData\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/user-auth/user-auth.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/user-auth/user-auth.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/user-auth/user-auth.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/user-auth/user-auth.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authError$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user-auth/user-auth.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user-auth/user-auth.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userFormData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthFormData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user-auth/user-auth.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { select, Store } from \"@ngrx/store\";\nimport { AppState } from \"@rota/core/models/app-state\";\nimport { Observable } from \"rxjs\";\nimport { AuthFormData } from \"../auth-form/auth-form.component\";\nimport { UserCredentials } from \"../models/user-credentials.model\";\nimport * as AuthStoreActions from \"../store/auth.actions\";\nimport * as AuthStoreSelectors from \"../store/auth.selectors\";\n\n@Component({\n  selector: \"rota-user-auth\",\n  templateUrl: \"./user-auth.component.html\",\n  styleUrls: [\"./user-auth.component.scss\"]\n})\nexport class UserAuthComponent implements OnInit {\n  userFormData: AuthFormData;\n  authError$: Observable;\n  loading$: Observable;\n\n  constructor(private store$: Store) {}\n\n  ngOnInit() {\n    this.userFormData = this.initUserFormData();\n    this.authError$ = this.store$.pipe(select(AuthStoreSelectors.selectError));\n    this.loading$ = this.store$.pipe(select(AuthStoreSelectors.selectIsLoading));\n  }\n\n  register(): void {\n    const userCredentials = this.getUserCredentials(this.userFormData.form);\n    this.store$.dispatch(AuthStoreActions.registerUser({ userCredentials }));\n  }\n\n  login(): void {\n    const userCredentials = this.getUserCredentials(this.userFormData.form);\n    this.store$.dispatch(AuthStoreActions.loginUser({ userCredentials }));\n  }\n\n  resetError(): void {\n    this.store$.dispatch(AuthStoreActions.setError({ error: null }));\n  }\n\n  private initUserFormData(): AuthFormData {\n    const form = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(6)])\n    });\n\n    return {\n      form,\n      formControls: [\n        {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"AUTH.USER.EMAIL_PLACEHOLDER\",\n          icon: \"email\"\n        },\n        {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"AUTH.USER.PASSWORD_PLACEHOLDER\",\n          icon: \"lock\",\n          hint: \"AUTH.USER.PASSWORD_MIN_CHAR_LENGTH\"\n        }\n      ]\n    };\n  }\n\n  private getUserCredentials(form: FormGroup): UserCredentials {\n    return {\n      email: form.controls.email.value,\n      password: form.controls.password.value\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ \"AUTH.USER.REGISTER\" | translate }}\n      \n\n      \n        \n          {{ \"AUTH.USER.REGISTERATION\" | translate }}:\n          \n\n          \n            {{\n              \"AUTH.USER.REGISTER\" | translate\n            }}\n          \n\n          \n            \n              {{ \"AUTH.USER.ERROR_EMAIL_FORMAT\" | translate }}\n            \n            \n              {{ \"AUTH.USER.ERROR_EMAIL_IS_TAKEN\" | translate }}\n            \n          \n        \n      \n    \n\n    \n      \n        {{ \"AUTH.USER.LOGIN\" | translate }}\n      \n\n      \n        \n          {{ \"AUTH.USER.LOGIN\" | translate }}:\n          \n\n          \n            {{\n              \"AUTH.USER.LOGIN\" | translate\n            }}\n          \n\n          \n            \n              {{ \"AUTH.USER.ERROR_USER_NOT_FOUND\" | translate }}\n            \n            \n              {{ \"AUTH.USER.ERROR_WRONG_PASSWORD\" | translate }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-auth.component.scss\n                \n                @import \"src/assets/styles/colors\";\n\n.tabgroup-wrapper {\n  display: flex;\n  justify-content: center;\n  padding: 1rem;\n  margin-top: 3rem;\n\n  .tab-label {\n    font-size: 1.1rem;\n    font-weight: 500;\n    color: $color-primary-olive;\n  }\n\n  .tab-content {\n    max-width: 400px;\n    padding: 1rem;\n\n    .form-label {\n      margin-top: 1rem;\n      margin-bottom: 1rem;\n      font-weight: 500;\n    }\n\n    .message {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 1rem;\n      min-height: 1rem;\n      max-height: 4rem;\n      font-size: 0.9rem;\n\n      .success {\n        color: $color-success;\n      }\n\n      .error {\n        color: $color-secondary-orange;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \"AUTH.USER.REGISTER\" | translate }}                              {{ \"AUTH.USER.REGISTERATION\" | translate }}:                                {{              \"AUTH.USER.REGISTER\" | translate            }}                                              {{ \"AUTH.USER.ERROR_EMAIL_FORMAT\" | translate }}                                      {{ \"AUTH.USER.ERROR_EMAIL_IS_TAKEN\" | translate }}                                                          {{ \"AUTH.USER.LOGIN\" | translate }}                              {{ \"AUTH.USER.LOGIN\" | translate }}:                                {{              \"AUTH.USER.LOGIN\" | translate            }}                                              {{ \"AUTH.USER.ERROR_USER_NOT_FOUND\" | translate }}                                      {{ \"AUTH.USER.ERROR_WRONG_PASSWORD\" | translate }}                                          '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'rota-account'},{'name': 'AdminPageComponent', 'selector': 'rota-admin-page'},{'name': 'AdminSettingsComponent', 'selector': 'rota-admin-settings'},{'name': 'AmountSelectorComponent', 'selector': 'amount-selector'},{'name': 'AppComponent', 'selector': 'rota-root'},{'name': 'AuthFormComponent', 'selector': 'auth-form'},{'name': 'ButtonOutlinedComponent', 'selector': 'button-outlined'},{'name': 'CheckoutComponent', 'selector': 'rota-checkout'},{'name': 'ChefComponent', 'selector': 'rota-chef'},{'name': 'ConfirmationDialogComponent', 'selector': 'rota-confirmation-dialog'},{'name': 'ExpansionPanelComponent', 'selector': 'expansion-panel'},{'name': 'GroupEditorComponent', 'selector': 'rota-group-editor'},{'name': 'LoadingIndicatorComponent', 'selector': 'loading-indicator'},{'name': 'LoadResourcesComponent', 'selector': 'rota-load-resources'},{'name': 'ModifyComponent', 'selector': 'rota-modify'},{'name': 'OrderListItemComponent', 'selector': 'order-list-item'},{'name': 'ProductCardComponent', 'selector': 'product-card'},{'name': 'ProductEditorComponent', 'selector': 'rota-product-editor'},{'name': 'ProductListComponent', 'selector': 'rota-product-list'},{'name': 'ProductPageComponent', 'selector': 'rota-product-page'},{'name': 'RestaurantAuthComponent', 'selector': 'rota-restaurant-auth'},{'name': 'SidenavComponent', 'selector': 'rota-sidenav'},{'name': 'SnackbarComponent', 'selector': 'rota-snackbar'},{'name': 'StatusModifierComponent', 'selector': 'status-modifier-dialog'},{'name': 'TableEditorComponent', 'selector': 'rota-table-editor'},{'name': 'TableSelectorComponent', 'selector': 'table-selector'},{'name': 'UserAuthComponent', 'selector': 'rota-user-auth'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCredentials.html":{"url":"interfaces/UserCredentials.html","title":"interface - UserCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/user-credentials.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserCredentials {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.1.2\n        \n            @angular/cdk : ~8.2.3\n        \n            @angular/common : ~8.1.2\n        \n            @angular/core : ~8.1.2\n        \n            @angular/fire : ^5.3.0\n        \n            @angular/forms : ~8.1.2\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ~8.1.2\n        \n            @angular/platform-browser-dynamic : ~8.1.2\n        \n            @angular/router : ~8.1.2\n        \n            @capacitor/android : ^1.4.0\n        \n            @capacitor/core : 1.4.0\n        \n            @ionic-native/core : ^5.0.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.0.0\n        \n            @ionic/angular : ^4.7.1\n        \n            @ionic/storage : ^2.2.0\n        \n            @ngrx/effects : ^8.6.0\n        \n            @ngrx/store : ^8.6.0\n        \n            @ngrx/store-devtools : ^8.6.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-charts : ^13.0.2\n        \n            cordova-android : ^8.1.0\n        \n            core-js : ^2.5.4\n        \n            firebase : ^7.14.0\n        \n            firebase-admin : ^8.9.1\n        \n            firebase-functions : ^3.3.0\n        \n            hammerjs : ^2.0.8\n        \n            jasmine-marbles : ^0.6.0\n        \n            lodash : ^4.17.15\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authReducer   (src/.../auth.reducer.ts)\n                        \n                        \n                            buildNavigationDataFromGroups   (src/.../ordering.ts)\n                        \n                        \n                            chefReducer   (src/.../chef.reducer.ts)\n                        \n                        \n                            convertToOrder   (src/.../checkout.component.ts)\n                        \n                        \n                            convertToOrderItems   (src/.../checkout.component.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            generateId   (src/.../checkout.component.ts)\n                        \n                        \n                            getOrderingNavigationData   (src/.../ordering.ts)\n                        \n                        \n                            hasTrueField   (src/.../load-resources.component.ts)\n                        \n                        \n                            isImageType   (src/.../product-editor.component.ts)\n                        \n                        \n                            itemAlreadyInCart   (src/.../ordering.reducer.ts)\n                        \n                        \n                            knownOrder   (src/.../chef.component.ts)\n                        \n                        \n                            orderingReducer   (src/.../ordering.reducer.ts)\n                        \n                        \n                            removeItem   (src/.../ordering.reducer.ts)\n                        \n                        \n                            resourceManagementReducer   (src/.../resource-management.reducer.ts)\n                        \n                        \n                            restaurantReducer   (src/.../restaurant.reducer.ts)\n                        \n                        \n                            sortByName   (src/.../sortByName.ts)\n                        \n                        \n                            update   (src/.../restaurant.reducer.ts)\n                        \n                        \n                            updateCart   (src/.../ordering.reducer.ts)\n                        \n                        \n                            updateCartItemAmount   (src/.../ordering.reducer.ts)\n                        \n                        \n                            updateItemAmount   (src/.../ordering.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/store/auth.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            authReducer\n                        \n                        \n                    \n                \n            \n            \n                \nauthReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/core/sidenav/sidenav-datas/ordering.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            buildNavigationDataFromGroups\n                        \n                        \n                    \n                \n            \n            \n                \nbuildNavigationDataFromGroups(groups)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groups\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NavigationItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrderingNavigationData\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrderingNavigationData(groups$)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groups$\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/chef/store/chef.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            chefReducer\n                        \n                        \n                    \n                \n            \n            \n                \nchefReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/ordering/checkout/checkout.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            convertToOrder\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToOrder(cart, table)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cart\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    table\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Order\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToOrderItems\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToOrderItems(cartItems)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartItems\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OrderItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateId\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateId(timestamp, tableName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timestamp\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tableName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTranslateLoader\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/core/load-resources/load-resources.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            hasTrueField\n                        \n                        \n                    \n                \n            \n            \n                \nhasTrueField(object)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/resource-management/product-editor/product-editor.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isImageType\n                        \n                        \n                    \n                \n            \n            \n                \nisImageType(fileType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/ordering/store/ordering.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            itemAlreadyInCart\n                        \n                        \n                    \n                \n            \n            \n                \nitemAlreadyInCart(oldCart, itemToBeAdded)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldCart\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemToBeAdded\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            orderingReducer\n                        \n                        \n                    \n                \n            \n            \n                \norderingReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeItem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveItem(oldCart, cartItem)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldCart\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartItem\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cart\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCart\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCart(oldCart, itemToBeAdded)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldCart\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemToBeAdded\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cart\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCartItemAmount\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCartItemAmount(oldCart, cartItem)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldCart\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartItem\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cart\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateItemAmount\n                        \n                        \n                    \n                \n            \n            \n                \nupdateItemAmount(items, itemToBeAdded)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemToBeAdded\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CartItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/chef/chef.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            knownOrder\n                        \n                        \n                    \n                \n            \n            \n                \nknownOrder(knownOrderIds, orderId)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knownOrderIds\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    orderId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/resource-management/store/resource-management.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            resourceManagementReducer\n                        \n                        \n                    \n                \n            \n            \n                \nresourceManagementReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/root-store/restaurant-store/restaurant.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            restaurantReducer\n                        \n                        \n                    \n                \n            \n            \n                \nrestaurantReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(previous, current)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previous\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    current\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/core/util/sortByName.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            sortByName\n                        \n                        \n                    \n                \n            \n            \n                \nsortByName(collection)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AmountSelectorModule\n\n\n\ncluster_AmountSelectorModule_declarations\n\n\n\ncluster_AmountSelectorModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ButtonOutlinedModule\n\n\n\ncluster_ButtonOutlinedModule_declarations\n\n\n\ncluster_ButtonOutlinedModule_imports\n\n\n\ncluster_ButtonOutlinedModule_exports\n\n\n\ncluster_CheckoutModule\n\n\n\ncluster_CheckoutModule_declarations\n\n\n\ncluster_CheckoutModule_imports\n\n\n\ncluster_ChefModule\n\n\n\ncluster_ChefModule_declarations\n\n\n\ncluster_ChefModule_imports\n\n\n\ncluster_ChefModule_exports\n\n\n\ncluster_ChefModule_providers\n\n\n\ncluster_ConfirmationDialogModule\n\n\n\ncluster_ConfirmationDialogModule_declarations\n\n\n\ncluster_ConfirmationDialogModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_DialogModule\n\n\n\ncluster_DialogModule_providers\n\n\n\ncluster_ExpansionPanelModule\n\n\n\ncluster_ExpansionPanelModule_declarations\n\n\n\ncluster_ExpansionPanelModule_exports\n\n\n\ncluster_LoadingIndicatorModule\n\n\n\ncluster_LoadingIndicatorModule_declarations\n\n\n\ncluster_LoadingIndicatorModule_exports\n\n\n\ncluster_OrderingModule\n\n\n\ncluster_OrderingModule_declarations\n\n\n\ncluster_OrderingModule_imports\n\n\n\ncluster_OrderingModule_providers\n\n\n\ncluster_ProductPageModule\n\n\n\ncluster_ProductPageModule_declarations\n\n\n\ncluster_ResourceManagementModule\n\n\n\ncluster_ResourceManagementModule_declarations\n\n\n\ncluster_ResourceManagementModule_imports\n\n\n\ncluster_ResourceManagementModule_providers\n\n\n\ncluster_RootStoreModule\n\n\n\ncluster_RootStoreModule_imports\n\n\n\ncluster_SnackbarModule\n\n\n\ncluster_SnackbarModule_declarations\n\n\n\ncluster_SnackbarModule_exports\n\n\n\ncluster_SnackbarModule_providers\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAccountComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminSettingsComponent\n\nAdminSettingsComponent\n\nAdminModule -->\n\nAdminSettingsComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nButtonOutlinedModule\n\nButtonOutlinedModule\n\nAdminModule -->\n\nButtonOutlinedModule->AdminModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nButtonOutlinedModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nButtonOutlinedModule->AuthModule\n\n\n\n\n\nButtonOutlinedComponent \n\nButtonOutlinedComponent \n\nButtonOutlinedComponent  -->\n\nButtonOutlinedModule->ButtonOutlinedComponent \n\n\n\n\n\nCheckoutModule\n\nCheckoutModule\n\nCheckoutModule -->\n\nButtonOutlinedModule->CheckoutModule\n\n\n\n\n\nResourceManagementModule\n\nResourceManagementModule\n\nResourceManagementModule -->\n\nButtonOutlinedModule->ResourceManagementModule\n\n\n\n\n\nAmountSelectorComponent\n\nAmountSelectorComponent\n\n\n\nAmountSelectorModule\n\nAmountSelectorModule\n\nAmountSelectorModule -->\n\nAmountSelectorComponent->AmountSelectorModule\n\n\n\n\n\nAmountSelectorComponent \n\nAmountSelectorComponent \n\nAmountSelectorComponent  -->\n\nAmountSelectorModule->AmountSelectorComponent \n\n\n\nCheckoutModule -->\n\nAmountSelectorModule->CheckoutModule\n\n\n\n\n\nProductPageModule\n\nProductPageModule\n\nProductPageModule -->\n\nAmountSelectorModule->ProductPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nCoreModule->SidenavComponent \n\n\n\n\n\nRootStoreModule\n\nRootStoreModule\n\nAppModule -->\n\nRootStoreModule->AppModule\n\n\n\n\n\nAuthFormComponent\n\nAuthFormComponent\n\nAuthModule -->\n\nAuthFormComponent->AuthModule\n\n\n\n\n\nRestaurantAuthComponent\n\nRestaurantAuthComponent\n\nAuthModule -->\n\nRestaurantAuthComponent->AuthModule\n\n\n\n\n\nUserAuthComponent\n\nUserAuthComponent\n\nAuthModule -->\n\nUserAuthComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthStoreModule\n\nAuthStoreModule\n\nAuthModule -->\n\nAuthStoreModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nButtonOutlinedComponent\n\nButtonOutlinedComponent\n\nButtonOutlinedModule -->\n\nButtonOutlinedComponent->ButtonOutlinedModule\n\n\n\n\n\nLoadingIndicatorModule\n\nLoadingIndicatorModule\n\nButtonOutlinedModule -->\n\nLoadingIndicatorModule->ButtonOutlinedModule\n\n\n\nCoreModule -->\n\nLoadingIndicatorModule->CoreModule\n\n\n\n\n\nChefModule\n\nChefModule\n\nChefModule -->\n\nLoadingIndicatorModule->ChefModule\n\n\n\n\n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent  -->\n\nLoadingIndicatorModule->LoadingIndicatorComponent \n\n\n\n\n\nOrderingModule\n\nOrderingModule\n\nOrderingModule -->\n\nLoadingIndicatorModule->OrderingModule\n\n\n\nResourceManagementModule -->\n\nLoadingIndicatorModule->ResourceManagementModule\n\n\n\n\n\nCheckoutComponent\n\nCheckoutComponent\n\nCheckoutModule -->\n\nCheckoutComponent->CheckoutModule\n\n\n\n\n\nCheckoutRoutingModule\n\nCheckoutRoutingModule\n\nCheckoutModule -->\n\nCheckoutRoutingModule->CheckoutModule\n\n\n\n\n\nChefComponent\n\nChefComponent\n\nChefModule -->\n\nChefComponent->ChefModule\n\n\n\n\n\nOrderListItemComponent\n\nOrderListItemComponent\n\nChefModule -->\n\nOrderListItemComponent->ChefModule\n\n\n\n\n\nStatusModifierComponent\n\nStatusModifierComponent\n\nChefModule -->\n\nStatusModifierComponent->ChefModule\n\n\n\n\n\nStatusModifierComponent \n\nStatusModifierComponent \n\nStatusModifierComponent  -->\n\nChefModule->StatusModifierComponent \n\n\n\n\n\nChefRoutingModule\n\nChefRoutingModule\n\nChefModule -->\n\nChefRoutingModule->ChefModule\n\n\n\n\n\nChefStoreModule\n\nChefStoreModule\n\nChefModule -->\n\nChefStoreModule->ChefModule\n\n\n\n\n\nConfirmationDialogModule\n\nConfirmationDialogModule\n\nChefModule -->\n\nConfirmationDialogModule->ChefModule\n\n\n\n\n\nConfirmationDialogComponent \n\nConfirmationDialogComponent \n\nConfirmationDialogComponent  -->\n\nConfirmationDialogModule->ConfirmationDialogComponent \n\n\n\nResourceManagementModule -->\n\nConfirmationDialogModule->ResourceManagementModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nChefModule -->\n\nDialogModule->ChefModule\n\n\n\nResourceManagementModule -->\n\nDialogModule->ResourceManagementModule\n\n\n\n\n\nExpansionPanelModule\n\nExpansionPanelModule\n\nChefModule -->\n\nExpansionPanelModule->ChefModule\n\n\n\n\n\nExpansionPanelComponent \n\nExpansionPanelComponent \n\nExpansionPanelComponent  -->\n\nExpansionPanelModule->ExpansionPanelComponent \n\n\n\nResourceManagementModule -->\n\nExpansionPanelModule->ResourceManagementModule\n\n\n\n\n\nSnackbarModule\n\nSnackbarModule\n\nChefModule -->\n\nSnackbarModule->ChefModule\n\n\n\nOrderingModule -->\n\nSnackbarModule->OrderingModule\n\n\n\nResourceManagementModule -->\n\nSnackbarModule->ResourceManagementModule\n\n\n\n\n\nSnackbarComponent \n\nSnackbarComponent \n\nSnackbarComponent  -->\n\nSnackbarModule->SnackbarComponent \n\n\n\n\n\nChefService\n\nChefService\n\nChefModule -->\n\nChefService->ChefModule\n\n\n\n\n\nConfirmationDialogComponent\n\nConfirmationDialogComponent\n\nConfirmationDialogModule -->\n\nConfirmationDialogComponent->ConfirmationDialogModule\n\n\n\n\n\nLoadResourcesComponent\n\nLoadResourcesComponent\n\nCoreModule -->\n\nLoadResourcesComponent->CoreModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nCoreModule -->\n\nSidenavComponent->CoreModule\n\n\n\n\n\nNavigationService\n\nNavigationService\n\nCoreModule -->\n\nNavigationService->CoreModule\n\n\n\n\n\nRestaurantService\n\nRestaurantService\n\nCoreModule -->\n\nRestaurantService->CoreModule\n\n\n\n\n\nDialogService\n\nDialogService\n\nDialogModule -->\n\nDialogService->DialogModule\n\n\n\n\n\nExpansionPanelComponent\n\nExpansionPanelComponent\n\nExpansionPanelModule -->\n\nExpansionPanelComponent->ExpansionPanelModule\n\n\n\n\n\nLoadingIndicatorComponent\n\nLoadingIndicatorComponent\n\nLoadingIndicatorModule -->\n\nLoadingIndicatorComponent->LoadingIndicatorModule\n\n\n\n\n\nProductCardComponent\n\nProductCardComponent\n\nOrderingModule -->\n\nProductCardComponent->OrderingModule\n\n\n\n\n\nProductListComponent\n\nProductListComponent\n\nOrderingModule -->\n\nProductListComponent->OrderingModule\n\n\n\n\n\nTableSelectorComponent\n\nTableSelectorComponent\n\nOrderingModule -->\n\nTableSelectorComponent->OrderingModule\n\n\n\n\n\nOrderingRoutingModule\n\nOrderingRoutingModule\n\nOrderingModule -->\n\nOrderingRoutingModule->OrderingModule\n\n\n\n\n\nOrderingStoreModule\n\nOrderingStoreModule\n\nOrderingModule -->\n\nOrderingStoreModule->OrderingModule\n\n\n\nOrderingModule -->\n\nProductPageModule->OrderingModule\n\n\n\n\n\nOrderingService\n\nOrderingService\n\nOrderingModule -->\n\nOrderingService->OrderingModule\n\n\n\n\n\nProductPageComponent\n\nProductPageComponent\n\nProductPageModule -->\n\nProductPageComponent->ProductPageModule\n\n\n\n\n\nGroupEditorComponent\n\nGroupEditorComponent\n\nResourceManagementModule -->\n\nGroupEditorComponent->ResourceManagementModule\n\n\n\n\n\nModifyComponent\n\nModifyComponent\n\nResourceManagementModule -->\n\nModifyComponent->ResourceManagementModule\n\n\n\n\n\nProductEditorComponent\n\nProductEditorComponent\n\nResourceManagementModule -->\n\nProductEditorComponent->ResourceManagementModule\n\n\n\n\n\nTableEditorComponent\n\nTableEditorComponent\n\nResourceManagementModule -->\n\nTableEditorComponent->ResourceManagementModule\n\n\n\n\n\nResourceManagementRoutingModule\n\nResourceManagementRoutingModule\n\nResourceManagementModule -->\n\nResourceManagementRoutingModule->ResourceManagementModule\n\n\n\n\n\nResourceManagementStoreModule\n\nResourceManagementStoreModule\n\nResourceManagementModule -->\n\nResourceManagementStoreModule->ResourceManagementModule\n\n\n\n\n\nResourceManagementService\n\nResourceManagementService\n\nResourceManagementModule -->\n\nResourceManagementService->ResourceManagementModule\n\n\n\n\n\nRestaurantStoreModule\n\nRestaurantStoreModule\n\nRootStoreModule -->\n\nRestaurantStoreModule->RootStoreModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSnackbarModule -->\n\nSnackbarComponent->SnackbarModule\n\n\n\n\n\nSnackbarService\n\nSnackbarService\n\nSnackbarModule -->\n\nSnackbarService->SnackbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        29 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    27 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    26 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        48 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AmountSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthStoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ButtonOutlinedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckoutRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChefModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChefRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChefStoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfirmationDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExpansionPanelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoadingIndicatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderingRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderingStoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceManagementRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceManagementStoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RestaurantStoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SnackbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderItemStatus   (src/.../order.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/models/order.ts\n    \n    \n        \n            \n                \n                    \n                    OrderItemStatus\n                \n            \n            \n                \n                        \"ready\" | \"rejected\" | \"preparing\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
